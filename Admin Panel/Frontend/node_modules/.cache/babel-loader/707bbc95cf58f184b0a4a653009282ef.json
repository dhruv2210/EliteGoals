{"ast":null,"code":"var isBetween = function isBetween(value, min, max) {\n  return value >= min && value <= max;\n};\nexport default function getLineIntersect(p0, p1, p2, p3) {\n  var tolerance = 0.001;\n  var E = {\n    x: p2.x - p0.x,\n    y: p2.y - p0.y\n  };\n  var D0 = {\n    x: p1.x - p0.x,\n    y: p1.y - p0.y\n  };\n  var D1 = {\n    x: p3.x - p2.x,\n    y: p3.y - p2.y\n  };\n  var kross = D0.x * D1.y - D0.y * D1.x;\n  var sqrKross = kross * kross;\n  var sqrLen0 = D0.x * D0.x + D0.y * D0.y;\n  var sqrLen1 = D1.x * D1.x + D1.y * D1.y;\n  var point = null;\n  if (sqrKross > tolerance * sqrLen0 * sqrLen1) {\n    var s = (E.x * D1.y - E.y * D1.x) / kross;\n    var t = (E.x * D0.y - E.y * D0.x) / kross;\n    if (isBetween(s, 0, 1) && isBetween(t, 0, 1)) {\n      point = {\n        x: p0.x + s * D0.x,\n        y: p0.y + s * D0.y\n      };\n    }\n  }\n  return point;\n}\n;","map":null,"metadata":{},"sourceType":"module"}