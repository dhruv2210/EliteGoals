{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Popup } from 'rc-tooltip';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport { getRenderPropValue } from '../_util/getRenderPropValue';\nexport var getOverlay = function getOverlay(prefixCls, title, content) {\n  if (!title && !content) return undefined;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, title && /*#__PURE__*/React.createElement(\"div\", {\n    className: prefixCls + \"-title\"\n  }, getRenderPropValue(title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: prefixCls + \"-inner-content\"\n  }, getRenderPropValue(content)));\n};\nexport function RawPurePanel(props) {\n  var hashId = props.hashId,\n    prefixCls = props.prefixCls,\n    className = props.className,\n    style = props.style,\n    _props$placement = props.placement,\n    placement = _props$placement === void 0 ? 'top' : _props$placement,\n    title = props.title,\n    content = props.content,\n    children = props.children;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(hashId, prefixCls, prefixCls + \"-pure\", prefixCls + \"-placement-\" + placement, className),\n    style: style\n  }, /*#__PURE__*/React.createElement(Popup, _extends({}, props, {\n    className: hashId,\n    prefixCls: prefixCls\n  }), children || getOverlay(prefixCls, title, content)));\n}\nexport default function PurePanel(props) {\n  var customizePrefixCls = props.prefixCls,\n    restProps = __rest(props, [\"prefixCls\"]);\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var prefixCls = getPrefixCls('popover', customizePrefixCls);\n  var _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    wrapSSR = _useStyle2[0],\n    hashId = _useStyle2[1];\n  return wrapSSR( /*#__PURE__*/React.createElement(RawPurePanel, _extends({}, restProps, {\n    prefixCls: prefixCls,\n    hashId: hashId\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}