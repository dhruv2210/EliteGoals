{"ast":null,"code":"/**\n * @fileoverview defs\n * @author dengfuping_develop@163.com\n */\nimport { uniqueId } from '@antv/util';\nimport Gradient from './gradient';\nimport Shadow from './shadow';\nimport Arrow from './arrow';\nimport Clip from './clip';\nimport Pattern from './pattern';\nimport { createSVGElement } from '../util/dom';\nvar Defs = /** @class */function () {\n  function Defs(canvas) {\n    var el = createSVGElement('defs');\n    var id = uniqueId('defs_');\n    el.id = id;\n    canvas.appendChild(el);\n    this.children = [];\n    this.defaultArrow = {};\n    this.el = el;\n    this.canvas = canvas;\n  }\n  Defs.prototype.find = function (type, attr) {\n    var children = this.children;\n    var result = null;\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].match(type, attr)) {\n        result = children[i].id;\n        break;\n      }\n    }\n    return result;\n  };\n  Defs.prototype.findById = function (id) {\n    var children = this.children;\n    var flag = null;\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].id === id) {\n        flag = children[i];\n        break;\n      }\n    }\n    return flag;\n  };\n  Defs.prototype.add = function (item) {\n    this.children.push(item);\n    item.canvas = this.canvas;\n    item.parent = this;\n  };\n  Defs.prototype.getDefaultArrow = function (attrs, name) {\n    var stroke = attrs.stroke || attrs.strokeStyle;\n    if (this.defaultArrow[stroke]) {\n      return this.defaultArrow[stroke].id;\n    }\n    var arrow = new Arrow(attrs, name);\n    this.defaultArrow[stroke] = arrow;\n    this.el.appendChild(arrow.el);\n    this.add(arrow);\n    return arrow.id;\n  };\n  Defs.prototype.addGradient = function (cfg) {\n    var gradient = new Gradient(cfg);\n    this.el.appendChild(gradient.el);\n    this.add(gradient);\n    return gradient.id;\n  };\n  Defs.prototype.addArrow = function (attrs, name) {\n    var arrow = new Arrow(attrs, name);\n    this.el.appendChild(arrow.el);\n    this.add(arrow);\n    return arrow.id;\n  };\n  Defs.prototype.addShadow = function (cfg) {\n    var shadow = new Shadow(cfg);\n    this.el.appendChild(shadow.el);\n    this.add(shadow);\n    return shadow.id;\n  };\n  Defs.prototype.addPattern = function (cfg) {\n    var pattern = new Pattern(cfg);\n    this.el.appendChild(pattern.el);\n    this.add(pattern);\n    return pattern.id;\n  };\n  Defs.prototype.addClip = function (cfg) {\n    var clip = new Clip(cfg);\n    this.el.appendChild(clip.el);\n    this.add(clip);\n    return clip.id;\n  };\n  return Defs;\n}();\nexport default Defs;","map":null,"metadata":{},"sourceType":"module"}