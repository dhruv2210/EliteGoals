{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape } from '@antv/g2';\nimport { get } from '@antv/util';\nimport { deepAssign } from '../../utils';\n/**\n * 获取柱子 path\n * @param points\n */\nfunction getRectPath(points) {\n  var path = [];\n  for (var i = 0; i < points.length; i++) {\n    var point = points[i];\n    if (point) {\n      var action = i === 0 ? 'M' : 'L';\n      path.push([action, point.x, point.y]);\n    }\n  }\n  var first = points[0];\n  path.push(['L', first.x, first.y]);\n  path.push(['z']);\n  return path;\n}\n/**\n * 获取填充属性\n * @param cfg 图形绘制数据\n */\nfunction getFillAttrs(cfg) {\n  return deepAssign({}, cfg.defaultStyle, cfg.style, {\n    fill: cfg.color\n  });\n}\nregisterShape('interval', 'waterfall', {\n  draw: function draw(cfg, container) {\n    var customInfo = cfg.customInfo,\n      points = cfg.points,\n      nextPoints = cfg.nextPoints;\n    var group = container.addGroup();\n    // ① 绘制柱体\n    var rectPath = this.parsePath(getRectPath(points));\n    var fillAttrs = getFillAttrs(cfg);\n    group.addShape('path', {\n      attrs: __assign(__assign({}, fillAttrs), {\n        path: rectPath\n      })\n    });\n    // ② 绘制连接线\n    var leaderLineCfg = get(customInfo, 'leaderLine');\n    if (leaderLineCfg && nextPoints) {\n      var linkPath = [['M', points[2].x, points[2].y], ['L', nextPoints[0].x, nextPoints[0].y]];\n      if (points[2].y === nextPoints[1].y) {\n        linkPath[1] = ['L', nextPoints[1].x, nextPoints[1].y];\n      }\n      linkPath = this.parsePath(linkPath);\n      group.addShape('path', {\n        attrs: __assign({\n          path: linkPath\n        }, leaderLineCfg.style || {})\n      });\n    }\n    return group;\n  }\n});","map":null,"metadata":{},"sourceType":"module"}