{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { get } from '@antv/util';\nimport { Plot } from '../../core/plot';\nimport { findViewById } from '../../utils';\nimport { adaptor } from './adaptor';\nimport { EDGES_VIEW_ID, NODES_VIEW_ID } from './constant';\nimport { transformToViewsData } from './helper';\n// 桑基图内置交互\nimport './interactions';\n/**\n *  桑基图 Sankey\n */\nvar Sankey = /** @class */function (_super) {\n  __extends(Sankey, _super);\n  function Sankey() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n    _this.type = 'sankey';\n    return _this;\n  }\n  Sankey.getDefaultOptions = function () {\n    return {\n      appendPadding: 8,\n      syncViewPadding: true,\n      nodeStyle: {\n        opacity: 1,\n        fillOpacity: 1,\n        lineWidth: 1\n      },\n      edgeStyle: {\n        opacity: 0.3,\n        lineWidth: 0\n      },\n      edgeState: {\n        active: {\n          style: {\n            opacity: 0.8,\n            lineWidth: 0\n          }\n        }\n      },\n      label: {\n        formatter: function formatter(_a) {\n          var name = _a.name;\n          return name;\n        },\n        callback: function callback(x) {\n          var isLast = x[1] === 1; // 最后一列靠边的节点\n          return {\n            style: {\n              fill: '#545454',\n              textAlign: isLast ? 'end' : 'start'\n            },\n            offsetX: isLast ? -8 : 8\n          };\n        },\n        layout: [{\n          type: 'hide-overlap'\n        }]\n      },\n      tooltip: {\n        showTitle: false,\n        showMarkers: false,\n        shared: false,\n        // 内置：node 不显示 tooltip，edge 显示 tooltip\n        showContent: function showContent(items) {\n          return !get(items, [0, 'data', 'isNode']);\n        },\n        formatter: function formatter(datum) {\n          var source = datum.source,\n            target = datum.target,\n            value = datum.value;\n          return {\n            name: source + ' -> ' + target,\n            value: value\n          };\n        }\n      },\n      nodeWidthRatio: 0.008,\n      nodePaddingRatio: 0.01,\n      animation: {\n        appear: {\n          animation: 'wave-in'\n        },\n        enter: {\n          animation: 'wave-in'\n        }\n      }\n    };\n  };\n  /**\n   * @override\n   * @param data\n   */\n  Sankey.prototype.changeData = function (data) {\n    this.updateOption({\n      data: data\n    });\n    var _a = transformToViewsData(this.options, this.chart.width, this.chart.height),\n      nodes = _a.nodes,\n      edges = _a.edges;\n    var nodesView = findViewById(this.chart, NODES_VIEW_ID);\n    var edgesView = findViewById(this.chart, EDGES_VIEW_ID);\n    nodesView.changeData(nodes);\n    edgesView.changeData(edges);\n  };\n  /**\n   * 获取适配器\n   */\n  Sankey.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  /**\n   * 获取 条形图 默认配置\n   */\n  Sankey.prototype.getDefaultOptions = function () {\n    return Sankey.getDefaultOptions();\n  };\n  return Sankey;\n}(Plot);\nexport { Sankey };","map":null,"metadata":{},"sourceType":"module"}