{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport Action from '../base';\nimport { getElements, getMaskedElements, getSiblingMaskElements, getSilbings, isInRecords, isMask } from '../util';\n/**\n * Sibling filter\n * @ignore\n */\nvar SiblingFilter = /** @class */function (_super) {\n  __extends(SiblingFilter, _super);\n  function SiblingFilter() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.byRecord = false;\n    return _this;\n  }\n  /**\n   * 过滤隐藏图形\n   */\n  SiblingFilter.prototype.filter = function () {\n    // 仅考虑 mask 导致的过滤\n    if (isMask(this.context)) {\n      if (this.byRecord) {\n        this.filterByRecord();\n      } else {\n        this.filterByBBox();\n      }\n    }\n  };\n  // 根据框选的记录来做过滤\n  SiblingFilter.prototype.filterByRecord = function () {\n    var view = this.context.view;\n    var maskElements = getMaskedElements(this.context, 10);\n    if (!maskElements) {\n      return;\n    }\n    var xFiled = view.getXScale().field;\n    var yField = view.getYScales()[0].field;\n    var records = maskElements.map(function (el) {\n      return el.getModel().data;\n    });\n    var siblings = getSilbings(view);\n    each(siblings, function (sibling) {\n      var elements = getElements(sibling);\n      each(elements, function (el) {\n        var record = el.getModel().data;\n        // records.includes(record) 不生效，应该是数据的引用被改了\n        if (isInRecords(records, record, xFiled, yField)) {\n          el.show();\n        } else {\n          el.hide();\n        }\n      });\n    });\n  };\n  // 根据被框选的包围盒做过滤\n  SiblingFilter.prototype.filterByBBox = function () {\n    var _this = this;\n    var view = this.context.view;\n    var siblings = getSilbings(view);\n    each(siblings, function (sibling) {\n      var maskElements = getSiblingMaskElements(_this.context, sibling, 10);\n      var elements = getElements(sibling);\n      if (maskElements) {\n        // mask 过小时返回为 null，不能是空数组，否则同未框选到混淆\n        each(elements, function (el) {\n          if (maskElements.includes(el)) {\n            el.show();\n          } else {\n            el.hide();\n          }\n        });\n      }\n    });\n  };\n  /**\n   * 清理所有隐藏的图形\n   */\n  SiblingFilter.prototype.reset = function () {\n    var siblings = getSilbings(this.context.view);\n    each(siblings, function (sibling) {\n      var elements = getElements(sibling);\n      each(elements, function (el) {\n        el.show();\n      });\n    });\n  };\n  return SiblingFilter;\n}(Action);\nexport default SiblingFilter;","map":null,"metadata":{},"sourceType":"module"}