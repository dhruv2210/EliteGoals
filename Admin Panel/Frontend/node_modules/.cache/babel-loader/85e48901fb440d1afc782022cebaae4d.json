{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each, isNumber } from '@antv/util';\nimport { timeFormat, toTimeStamp } from '../util/time';\nimport Category from './base';\n/**\n * 时间分类度量\n * @class\n */\nvar TimeCat = /** @class */function (_super) {\n  __extends(TimeCat, _super);\n  function TimeCat() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'timeCat';\n    return _this;\n  }\n  /**\n   * @override\n   */\n  TimeCat.prototype.translate = function (value) {\n    value = toTimeStamp(value);\n    var index = this.values.indexOf(value);\n    if (index === -1) {\n      if (isNumber(value) && value < this.values.length) {\n        index = value;\n      } else {\n        index = NaN;\n      }\n    }\n    return index;\n  };\n  /**\n   * 由于时间类型数据需要转换一下，所以复写 getText\n   * @override\n   */\n  TimeCat.prototype.getText = function (value, tickIndex) {\n    var index = this.translate(value);\n    if (index > -1) {\n      var result = this.values[index];\n      var formatter = this.formatter;\n      result = formatter ? formatter(result, tickIndex) : timeFormat(result, this.mask);\n      return result;\n    }\n    return value;\n  };\n  TimeCat.prototype.initCfg = function () {\n    this.tickMethod = 'time-cat';\n    this.mask = 'YYYY-MM-DD';\n    this.tickCount = 7; // 一般时间数据会显示 7， 14， 30 天的数字\n  };\n\n  TimeCat.prototype.setDomain = function () {\n    var values = this.values;\n    // 针对时间分类类型，会将时间统一转换为时间戳\n    each(values, function (v, i) {\n      values[i] = toTimeStamp(v);\n    });\n    values.sort(function (v1, v2) {\n      return v1 - v2;\n    });\n    _super.prototype.setDomain.call(this);\n  };\n  return TimeCat;\n}(Category);\nexport default TimeCat;","map":null,"metadata":{},"sourceType":"module"}