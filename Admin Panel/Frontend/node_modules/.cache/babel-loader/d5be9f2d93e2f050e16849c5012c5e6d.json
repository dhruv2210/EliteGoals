{"ast":null,"code":"/**\n * @fileoverview image\n * @author dengfuping_develop@163.com\n */\nimport { __assign, __extends } from \"tslib\";\nimport { each, isString } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\nvar Image = /** @class */function (_super) {\n  __extends(Image, _super);\n  function Image() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'image';\n    _this.canFill = false;\n    _this.canStroke = false;\n    return _this;\n  }\n  Image.prototype.getDefaultAttrs = function () {\n    var attrs = _super.prototype.getDefaultAttrs.call(this);\n    return __assign(__assign({}, attrs), {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    });\n  };\n  Image.prototype.createPath = function (context, targetAttrs) {\n    var _this = this;\n    var attrs = this.attr();\n    var el = this.get('el');\n    each(targetAttrs || attrs, function (value, attr) {\n      if (attr === 'img') {\n        _this._setImage(attrs.img);\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n  };\n  Image.prototype.setAttr = function (name, value) {\n    this.attrs[name] = value;\n    if (name === 'img') {\n      this._setImage(value);\n    }\n  };\n  Image.prototype._setImage = function (img) {\n    var attrs = this.attr();\n    var el = this.get('el');\n    if (isString(img)) {\n      el.setAttribute('href', img);\n    } else if (img instanceof window.Image) {\n      if (!attrs.width) {\n        el.setAttribute('width', img.width);\n        this.attr('width', img.width);\n      }\n      if (!attrs.height) {\n        el.setAttribute('height', img.height);\n        this.attr('height', img.height);\n      }\n      el.setAttribute('href', img.src);\n    } else if (img instanceof HTMLElement && isString(img.nodeName) && img.nodeName.toUpperCase() === 'CANVAS') {\n      // @ts-ignore\n      el.setAttribute('href', img.toDataURL());\n    } else if (img instanceof ImageData) {\n      var canvas = document.createElement('canvas');\n      canvas.setAttribute('width', \"\" + img.width);\n      canvas.setAttribute('height', \"\" + img.height);\n      canvas.getContext('2d').putImageData(img, 0, 0);\n      if (!attrs.width) {\n        el.setAttribute('width', \"\" + img.width);\n        this.attr('width', img.width);\n      }\n      if (!attrs.height) {\n        el.setAttribute('height', \"\" + img.height);\n        this.attr('height', img.height);\n      }\n      el.setAttribute('href', canvas.toDataURL());\n    }\n  };\n  return Image;\n}(ShapeBase);\nexport default Image;","map":null,"metadata":{},"sourceType":"module"}