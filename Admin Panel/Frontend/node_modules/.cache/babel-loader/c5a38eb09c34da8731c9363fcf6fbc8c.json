{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { getElements, getElementValue } from '../util';\nimport Highlight from './highlight';\n/**\n * Highlight color\n * @ignore\n */\nvar HighlightColor = /** @class */function (_super) {\n  __extends(HighlightColor, _super);\n  function HighlightColor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  HighlightColor.prototype.setStateByElement = function (element, enable) {\n    var view = this.context.view;\n    var colorAttr = element.geometry.getAttribute('color');\n    if (!colorAttr) {\n      return;\n    }\n    var scale = view.getScaleByField(colorAttr.getFields()[0]);\n    var value = getElementValue(element, scale.field);\n    var elements = getElements(view);\n    var highlightElements = elements.filter(function (el) {\n      return getElementValue(el, scale.field) === value;\n    });\n    this.setHighlightBy(elements, function (el) {\n      return highlightElements.includes(el);\n    }, enable);\n  };\n  return HighlightColor;\n}(Highlight);\nexport default HighlightColor;","map":null,"metadata":{},"sourceType":"module"}