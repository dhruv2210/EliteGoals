{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { TinyColor } from '@ctrl/tinycolor';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nimport getArrowStyle, { MAX_VERTICAL_CONTENT_RADIUS } from '../../style/placementArrow';\n// =============================== Base ===============================\nvar genBaseStyle = function genBaseStyle(token) {\n  var _ref3, _ref4, _ref6, _extends2, _ref9;\n  var componentCls = token.componentCls,\n    lineHeight = token.lineHeight,\n    padding = token.padding,\n    paddingXS = token.paddingXS,\n    borderRadius = token.borderRadius,\n    borderRadiusXS = token.borderRadiusXS,\n    colorPrimary = token.colorPrimary,\n    colorText = token.colorText,\n    colorFill = token.colorFill,\n    sliderHeight = token.sliderHeight,\n    sliderWidth = token.sliderWidth,\n    boxShadow = token.boxShadow,\n    tourZIndexPopup = token.tourZIndexPopup,\n    fontSize = token.fontSize,\n    colorBgContainer = token.colorBgContainer,\n    fontWeightStrong = token.fontWeightStrong,\n    marginXS = token.marginXS,\n    colorTextLightSolid = token.colorTextLightSolid,\n    tourBorderRadius = token.tourBorderRadius,\n    colorWhite = token.colorWhite,\n    colorBgTextHover = token.colorBgTextHover,\n    tourCloseSize = token.tourCloseSize,\n    motionDurationSlow = token.motionDurationSlow;\n  return [(_ref9 = {}, _defineProperty(_ref9, componentCls, _extends(_extends({}, resetComponent(token)), (_extends2 = {\n    color: colorText,\n    position: 'absolute',\n    zIndex: tourZIndexPopup,\n    display: 'block',\n    visibility: 'visible',\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    width: 520,\n    '--antd-arrow-background-color': colorBgContainer,\n    '&-pure': {\n      maxWidth: '100%',\n      position: 'relative'\n    }\n  }, _defineProperty(_extends2, \"&\" + componentCls + \"-hidden\", {\n    display: 'none'\n  }), _defineProperty(_extends2, componentCls + \"-content\", {\n    position: 'relative'\n  }), _defineProperty(_extends2, componentCls + \"-inner\", (_ref4 = {\n    textAlign: 'start',\n    textDecoration: 'none',\n    borderRadius: tourBorderRadius,\n    boxShadow: boxShadow,\n    position: 'relative',\n    backgroundColor: colorBgContainer,\n    border: 'none',\n    backgroundClip: 'padding-box'\n  }, _defineProperty(_ref4, componentCls + \"-close\", {\n    position: 'absolute',\n    top: padding,\n    insetInlineEnd: padding,\n    color: token.colorIcon,\n    outline: 'none',\n    width: tourCloseSize,\n    height: tourCloseSize,\n    borderRadius: token.borderRadiusSM,\n    transition: \"background-color \" + token.motionDurationMid + \", color \" + token.motionDurationMid,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:hover': {\n      color: token.colorIconHover,\n      backgroundColor: token.wireframe ? 'transparent' : token.colorFillContent\n    }\n  }), _defineProperty(_ref4, componentCls + \"-cover\", {\n    textAlign: 'center',\n    padding: padding + tourCloseSize + paddingXS + \"px \" + padding + \"px 0\",\n    img: {\n      width: '100%'\n    }\n  }), _defineProperty(_ref4, componentCls + \"-header\", _defineProperty({\n    padding: padding + \"px \" + padding + \"px \" + paddingXS + \"px\"\n  }, componentCls + \"-title\", {\n    lineHeight: lineHeight,\n    fontSize: fontSize,\n    fontWeight: fontWeightStrong\n  })), _defineProperty(_ref4, componentCls + \"-description\", {\n    padding: \"0 \" + padding + \"px\",\n    lineHeight: lineHeight,\n    wordWrap: 'break-word'\n  }), _defineProperty(_ref4, componentCls + \"-footer\", (_ref3 = {\n    padding: paddingXS + \"px \" + padding + \"px \" + padding + \"px\",\n    textAlign: 'end',\n    borderRadius: \"0 0 \" + borderRadiusXS + \"px \" + borderRadiusXS + \"px\",\n    display: 'flex',\n    justifyContent: 'space-between'\n  }, _defineProperty(_ref3, componentCls + \"-sliders\", _defineProperty({\n    display: 'inline-block'\n  }, componentCls + \"-slider\", {\n    width: sliderWidth + \"px\",\n    height: sliderHeight + \"px\",\n    display: 'inline-block',\n    borderRadius: '50%',\n    background: colorFill,\n    marginInlineEnd: sliderHeight,\n    '&-active': {\n      background: colorPrimary\n    }\n  })), _defineProperty(_ref3, componentCls + \"-buttons button\", {\n    marginInlineStart: marginXS\n  }), _ref3)), _ref4)), _defineProperty(_extends2, \"&\" + componentCls + \"-primary\", _defineProperty({\n    '--antd-arrow-background-color': colorPrimary\n  }, componentCls + \"-inner\", (_ref6 = {\n    color: colorTextLightSolid,\n    textAlign: 'start',\n    textDecoration: 'none',\n    backgroundColor: colorPrimary,\n    borderRadius: borderRadius,\n    boxShadow: boxShadow\n  }, _defineProperty(_ref6, componentCls + \"-close\", {\n    color: colorTextLightSolid\n  }), _defineProperty(_ref6, componentCls + \"-sliders\", _defineProperty({}, componentCls + \"-slider\", {\n    background: new TinyColor(colorTextLightSolid).setAlpha(0.15).toRgbString(),\n    '&-active': {\n      background: colorTextLightSolid\n    }\n  })), _defineProperty(_ref6, componentCls + \"-prev-btn\", {\n    color: colorTextLightSolid,\n    borderColor: new TinyColor(colorTextLightSolid).setAlpha(0.15).toRgbString(),\n    '&:hover': {\n      backgroundColor: new TinyColor(colorTextLightSolid).setAlpha(0.15).toRgbString(),\n      borderColor: 'transparent'\n    }\n  }), _defineProperty(_ref6, componentCls + \"-next-btn\", {\n    color: colorPrimary,\n    borderColor: 'transparent',\n    background: colorWhite,\n    '&:hover': {\n      background: new TinyColor(colorBgTextHover).onBackground(colorWhite).toRgbString()\n    }\n  }), _ref6))), _extends2))), _defineProperty(_ref9, componentCls + \"-mask\", _defineProperty({}, componentCls + \"-placeholder-animated\", {\n    transition: \"all \" + motionDurationSlow\n  })), _defineProperty(_ref9, [\"&-placement-left\", \"&-placement-leftTop\", \"&-placement-leftBottom\", \"&-placement-right\", \"&-placement-rightTop\", \"&-placement-rightBottom\"].join(','), _defineProperty({}, componentCls + \"-inner\", {\n    borderRadius: tourBorderRadius > MAX_VERTICAL_CONTENT_RADIUS ? MAX_VERTICAL_CONTENT_RADIUS : tourBorderRadius\n  })), _ref9),\n  // ============================= Arrow ===========================\n  getArrowStyle(token, {\n    colorBg: 'var(--antd-arrow-background-color)',\n    showArrowCls: '',\n    contentRadius: tourBorderRadius,\n    limitVerticalRadius: true\n  })];\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tour', function (token) {\n  var borderRadiusLG = token.borderRadiusLG,\n    fontSize = token.fontSize,\n    lineHeight = token.lineHeight;\n  var TourToken = mergeToken(token, {\n    tourZIndexPopup: token.zIndexPopupBase + 70,\n    sliderWidth: 6,\n    sliderHeight: 6,\n    tourBorderRadius: borderRadiusLG,\n    tourCloseSize: fontSize * lineHeight\n  });\n  return [genBaseStyle(TourToken)];\n});","map":null,"metadata":{},"sourceType":"module"}