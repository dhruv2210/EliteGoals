{"ast":null,"code":"import { each, pick } from '@antv/util';\nimport { getCoordinateBBox } from '../../../util/coordinate';\nimport { getEllipsisText } from '../../../util/text';\nimport { translate } from '../../../util/transform';\n/**\n * @ignore\n * 将 label 限制在 Plot 范围内，将超出 Plot 范围的 label 可选择进行隐藏或者移动位置\n * @param labels\n * @param cfg\n */\nexport function limitInPlot(items, labels, shapes, region, cfg) {\n  if (labels.length <= 0) {\n    return;\n  }\n  var direction = (cfg === null || cfg === void 0 ? void 0 : cfg.direction) || ['top', 'right', 'bottom', 'left'];\n  var action = (cfg === null || cfg === void 0 ? void 0 : cfg.action) || 'translate';\n  var margin = (cfg === null || cfg === void 0 ? void 0 : cfg.margin) || 0;\n  var coordinate = labels[0].get('coordinate');\n  if (!coordinate) {\n    return;\n  }\n  var _a = getCoordinateBBox(coordinate, margin),\n    regionMinX = _a.minX,\n    regionMinY = _a.minY,\n    regionMaxX = _a.maxX,\n    regionMaxY = _a.maxY;\n  each(labels, function (label) {\n    var _a = label.getCanvasBBox(),\n      minX = _a.minX,\n      minY = _a.minY,\n      maxX = _a.maxX,\n      maxY = _a.maxY,\n      x = _a.x,\n      y = _a.y,\n      width = _a.width,\n      height = _a.height;\n    var finalX = x;\n    var finalY = y;\n    if (direction.indexOf('left') >= 0 && (minX < regionMinX || maxX < regionMinX)) {\n      // 超出左侧\n      finalX = regionMinX;\n    }\n    if (direction.indexOf('top') >= 0 && (minY < regionMinY || maxY < regionMinY)) {\n      // 超出顶部\n      finalY = regionMinY;\n    }\n    if (direction.indexOf('right') >= 0) {\n      if (minX > regionMaxX) {\n        // 整体超出右侧\n        finalX = regionMaxX - width;\n      } else if (maxX > regionMaxX) {\n        // 超出右侧\n        finalX = finalX - (maxX - regionMaxX);\n      }\n    }\n    if (direction.indexOf('bottom') >= 0) {\n      if (minY > regionMaxY) {\n        // 整体超出底部\n        finalY = regionMaxY - height;\n      } else if (maxY > regionMaxY) {\n        // 超出底部\n        finalY = finalY - (maxY - regionMaxY);\n      }\n    }\n    if (finalX !== x || finalY !== y) {\n      var translateX_1 = finalX - x;\n      if (action === 'translate') {\n        translate(label, translateX_1, finalY - y);\n      } else if (action === 'ellipsis') {\n        var textShapes = label.findAll(function (shape) {\n          return shape.get('type') === 'text';\n        });\n        textShapes.forEach(function (textShape) {\n          var style = pick(textShape.attr(), ['fontSize', 'fontFamily', 'fontWeight', 'fontStyle', 'fontVariant']);\n          var textBox = textShape.getCanvasBBox();\n          var text = getEllipsisText(textShape.attr('text'), textBox.width - Math.abs(translateX_1), style);\n          textShape.attr('text', text);\n        });\n      } else {\n        label.hide();\n      }\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}