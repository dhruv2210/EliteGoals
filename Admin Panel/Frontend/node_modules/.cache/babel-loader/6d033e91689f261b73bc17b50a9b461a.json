{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport GroupComponent from '../abstract/group-component';\nimport { AREA_STYLE, BACKGROUND_STYLE, LINE_STYLE } from './constant';\nimport { dataToPath, linePathToAreaPath } from './path';\nvar Trend = /** @class */function (_super) {\n  __extends(Trend, _super);\n  function Trend() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Trend.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'trend',\n      x: 0,\n      y: 0,\n      width: 200,\n      height: 16,\n      smooth: true,\n      isArea: false,\n      data: [],\n      backgroundStyle: BACKGROUND_STYLE,\n      lineStyle: LINE_STYLE,\n      areaStyle: AREA_STYLE\n    });\n  };\n  Trend.prototype.renderInner = function (group) {\n    var _a = this.cfg,\n      width = _a.width,\n      height = _a.height,\n      data = _a.data,\n      smooth = _a.smooth,\n      isArea = _a.isArea,\n      backgroundStyle = _a.backgroundStyle,\n      lineStyle = _a.lineStyle,\n      areaStyle = _a.areaStyle;\n    // 背景\n    this.addShape(group, {\n      id: this.getElementId('background'),\n      type: 'rect',\n      attrs: __assign({\n        x: 0,\n        y: 0,\n        width: width,\n        height: height\n      }, backgroundStyle)\n    });\n    var path = dataToPath(data, width, height, smooth);\n    // 线\n    this.addShape(group, {\n      id: this.getElementId('line'),\n      type: 'path',\n      attrs: __assign({\n        path: path\n      }, lineStyle)\n    });\n    // area\n    // 在 path 的基础上，增加两个坐标点\n    if (isArea) {\n      var areaPath = linePathToAreaPath(path, width, height, data);\n      this.addShape(group, {\n        id: this.getElementId('area'),\n        type: 'path',\n        attrs: __assign({\n          path: areaPath\n        }, areaStyle)\n      });\n    }\n  };\n  Trend.prototype.applyOffset = function () {\n    var _a = this.cfg,\n      x = _a.x,\n      y = _a.y;\n    // 统一移动到对应的位置\n    this.moveElementTo(this.get('group'), {\n      x: x,\n      y: y\n    });\n  };\n  return Trend;\n}(GroupComponent);\nexport { Trend };\nexport default Trend;","map":null,"metadata":{},"sourceType":"module"}