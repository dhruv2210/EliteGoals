{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { TinyColor } from '@ctrl/tinycolor';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genFocusStyle, resetComponent } from '../../style';\nvar genSwitchSmallStyle = function genSwitchSmallStyle(token) {\n  var _ref, _ref2, _ref3, _ref6, _ref7;\n  var componentCls = token.componentCls;\n  var switchInnerCls = componentCls + \"-inner\";\n  return _defineProperty({}, componentCls, _defineProperty({}, \"&\" + componentCls + \"-small\", (_ref7 = {\n    minWidth: token.switchMinWidthSM,\n    height: token.switchHeightSM,\n    lineHeight: token.switchHeightSM + \"px\"\n  }, _defineProperty(_ref7, componentCls + \"-inner\", (_ref = {}, _defineProperty(_ref, switchInnerCls + \"-checked\", {\n    marginInlineStart: \"calc(\" + token.switchInnerMarginMinSM + \"px - 100% + \" + (token.switchPinSizeSM + token.switchPadding * 2) + \"px)\",\n    marginInlineEnd: \"calc(\" + token.switchInnerMarginMaxSM + \"px + 100% - \" + (token.switchPinSizeSM + token.switchPadding * 2) + \"px)\"\n  }), _defineProperty(_ref, switchInnerCls + \"-unchecked\", {\n    marginTop: -token.switchHeightSM,\n    marginInlineStart: token.switchInnerMarginMaxSM,\n    marginInlineEnd: token.switchInnerMarginMinSM\n  }), _ref)), _defineProperty(_ref7, componentCls + \"-handle\", {\n    width: token.switchPinSizeSM,\n    height: token.switchPinSizeSM\n  }), _defineProperty(_ref7, componentCls + \"-loading-icon\", {\n    top: (token.switchPinSizeSM - token.switchLoadingIconSize) / 2,\n    fontSize: token.switchLoadingIconSize\n  }), _defineProperty(_ref7, \"&\" + componentCls + \"-checked\", (_ref3 = {}, _defineProperty(_ref3, componentCls + \"-inner\", (_ref2 = {}, _defineProperty(_ref2, switchInnerCls + \"-checked\", {\n    marginInlineStart: token.switchInnerMarginMinSM,\n    marginInlineEnd: token.switchInnerMarginMaxSM\n  }), _defineProperty(_ref2, switchInnerCls + \"-unchecked\", {\n    marginInlineStart: \"calc(\" + token.switchInnerMarginMaxSM + \"px + 100% - \" + (token.switchPinSizeSM + token.switchPadding * 2) + \"px)\",\n    marginInlineEnd: \"calc(\" + token.switchInnerMarginMinSM + \"px - 100% + \" + (token.switchPinSizeSM + token.switchPadding * 2) + \"px)\"\n  }), _ref2)), _defineProperty(_ref3, componentCls + \"-handle\", {\n    insetInlineStart: \"calc(100% - \" + (token.switchPinSizeSM + token.switchPadding) + \"px)\"\n  }), _ref3)), _defineProperty(_ref7, \"&:not(\" + componentCls + \"-disabled):active\", (_ref6 = {}, _defineProperty(_ref6, \"&:not(\" + componentCls + \"-checked) \" + switchInnerCls, _defineProperty({}, switchInnerCls + \"-unchecked\", {\n    marginInlineStart: token.switchInnerMarginMaxSM + token.marginXXS / 2,\n    marginInlineEnd: token.switchInnerMarginMinSM - token.marginXXS / 2\n  })), _defineProperty(_ref6, \"&\" + componentCls + \"-checked \" + switchInnerCls, _defineProperty({}, switchInnerCls + \"-checked\", {\n    marginInlineStart: token.switchInnerMarginMinSM - token.marginXXS / 2,\n    marginInlineEnd: token.switchInnerMarginMaxSM + token.marginXXS / 2\n  })), _ref6)), _ref7)));\n};\nvar genSwitchLoadingStyle = function genSwitchLoadingStyle(token) {\n  var _componentCls2;\n  var componentCls = token.componentCls;\n  return _defineProperty({}, componentCls, (_componentCls2 = {}, _defineProperty(_componentCls2, componentCls + \"-loading-icon\" + token.iconCls, {\n    position: 'relative',\n    top: (token.switchPinSize - token.fontSize) / 2,\n    color: token.switchLoadingIconColor,\n    verticalAlign: 'top'\n  }), _defineProperty(_componentCls2, \"&\" + componentCls + \"-checked \" + componentCls + \"-loading-icon\", {\n    color: token.switchColor\n  }), _componentCls2));\n};\nvar genSwitchHandleStyle = function genSwitchHandleStyle(token) {\n  var _ref10, _componentCls3;\n  var componentCls = token.componentCls;\n  var switchHandleCls = componentCls + \"-handle\";\n  return _defineProperty({}, componentCls, (_componentCls3 = {}, _defineProperty(_componentCls3, switchHandleCls, {\n    position: 'absolute',\n    top: token.switchPadding,\n    insetInlineStart: token.switchPadding,\n    width: token.switchPinSize,\n    height: token.switchPinSize,\n    transition: \"all \" + token.switchDuration + \" ease-in-out\",\n    '&::before': {\n      position: 'absolute',\n      top: 0,\n      insetInlineEnd: 0,\n      bottom: 0,\n      insetInlineStart: 0,\n      backgroundColor: token.colorWhite,\n      borderRadius: token.switchPinSize / 2,\n      boxShadow: token.switchHandleShadow,\n      transition: \"all \" + token.switchDuration + \" ease-in-out\",\n      content: '\"\"'\n    }\n  }), _defineProperty(_componentCls3, \"&\" + componentCls + \"-checked \" + switchHandleCls, {\n    insetInlineStart: \"calc(100% - \" + (token.switchPinSize + token.switchPadding) + \"px)\"\n  }), _defineProperty(_componentCls3, \"&:not(\" + componentCls + \"-disabled):active\", (_ref10 = {}, _defineProperty(_ref10, switchHandleCls + \"::before\", {\n    insetInlineEnd: token.switchHandleActiveInset,\n    insetInlineStart: 0\n  }), _defineProperty(_ref10, \"&\" + componentCls + \"-checked \" + switchHandleCls + \"::before\", {\n    insetInlineEnd: 0,\n    insetInlineStart: token.switchHandleActiveInset\n  }), _ref10)), _componentCls3));\n};\nvar genSwitchInnerStyle = function genSwitchInnerStyle(token) {\n  var _switchInnerCls, _ref12, _ref15, _componentCls4;\n  var componentCls = token.componentCls;\n  var switchInnerCls = componentCls + \"-inner\";\n  return _defineProperty({}, componentCls, (_componentCls4 = {}, _defineProperty(_componentCls4, switchInnerCls, (_switchInnerCls = {\n    display: 'block',\n    overflow: 'hidden',\n    borderRadius: 100,\n    height: '100%'\n  }, _defineProperty(_switchInnerCls, switchInnerCls + \"-checked, \" + switchInnerCls + \"-unchecked\", {\n    display: 'block',\n    color: token.colorTextLightSolid,\n    fontSize: token.fontSizeSM,\n    transition: \"margin-inline-start \" + token.switchDuration + \" ease-in-out, margin-inline-end \" + token.switchDuration + \" ease-in-out\",\n    pointerEvents: 'none'\n  }), _defineProperty(_switchInnerCls, switchInnerCls + \"-checked\", {\n    marginInlineStart: \"calc(\" + token.switchInnerMarginMin + \"px - 100% + \" + (token.switchPinSize + token.switchPadding * 2) + \"px)\",\n    marginInlineEnd: \"calc(\" + token.switchInnerMarginMax + \"px + 100% - \" + (token.switchPinSize + token.switchPadding * 2) + \"px)\"\n  }), _defineProperty(_switchInnerCls, switchInnerCls + \"-unchecked\", {\n    marginTop: -token.switchHeight,\n    marginInlineStart: token.switchInnerMarginMax,\n    marginInlineEnd: token.switchInnerMarginMin\n  }), _switchInnerCls)), _defineProperty(_componentCls4, \"&\" + componentCls + \"-checked \" + switchInnerCls, (_ref12 = {}, _defineProperty(_ref12, switchInnerCls + \"-checked\", {\n    marginInlineStart: token.switchInnerMarginMin,\n    marginInlineEnd: token.switchInnerMarginMax\n  }), _defineProperty(_ref12, switchInnerCls + \"-unchecked\", {\n    marginInlineStart: \"calc(\" + token.switchInnerMarginMax + \"px + 100% - \" + (token.switchPinSize + token.switchPadding * 2) + \"px)\",\n    marginInlineEnd: \"calc(\" + token.switchInnerMarginMin + \"px - 100% + \" + (token.switchPinSize + token.switchPadding * 2) + \"px)\"\n  }), _ref12)), _defineProperty(_componentCls4, \"&:not(\" + componentCls + \"-disabled):active\", (_ref15 = {}, _defineProperty(_ref15, \"&:not(\" + componentCls + \"-checked) \" + switchInnerCls, _defineProperty({}, switchInnerCls + \"-unchecked\", {\n    marginInlineStart: token.switchInnerMarginMax + token.switchPadding * 2,\n    marginInlineEnd: token.switchInnerMarginMin - token.switchPadding * 2\n  })), _defineProperty(_ref15, \"&\" + componentCls + \"-checked \" + switchInnerCls, _defineProperty({}, switchInnerCls + \"-checked\", {\n    marginInlineStart: token.switchInnerMarginMin - token.switchPadding * 2,\n    marginInlineEnd: token.switchInnerMarginMax + token.switchPadding * 2\n  })), _ref15)), _componentCls4));\n};\nvar genSwitchStyle = function genSwitchStyle(token) {\n  var _extends3;\n  var componentCls = token.componentCls;\n  return _defineProperty({}, componentCls, _extends(_extends(_extends(_extends({}, resetComponent(token)), _defineProperty({\n    position: 'relative',\n    display: 'inline-block',\n    boxSizing: 'border-box',\n    minWidth: token.switchMinWidth,\n    height: token.switchHeight,\n    lineHeight: token.switchHeight + \"px\",\n    verticalAlign: 'middle',\n    background: token.colorTextQuaternary,\n    border: '0',\n    borderRadius: 100,\n    cursor: 'pointer',\n    transition: \"all \" + token.motionDurationMid,\n    userSelect: 'none'\n  }, \"&:hover:not(\" + componentCls + \"-disabled)\", {\n    background: token.colorTextTertiary\n  })), genFocusStyle(token)), (_extends3 = {}, _defineProperty(_extends3, \"&\" + componentCls + \"-checked\", _defineProperty({\n    background: token.switchColor\n  }, \"&:hover:not(\" + componentCls + \"-disabled)\", {\n    background: token.colorPrimaryHover\n  })), _defineProperty(_extends3, \"&\" + componentCls + \"-loading, &\" + componentCls + \"-disabled\", {\n    cursor: 'not-allowed',\n    opacity: token.switchDisabledOpacity,\n    '*': {\n      boxShadow: 'none',\n      cursor: 'not-allowed'\n    }\n  }), _defineProperty(_extends3, \"&\" + componentCls + \"-rtl\", {\n    direction: 'rtl'\n  }), _extends3)));\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Switch', function (token) {\n  var switchHeight = token.fontSize * token.lineHeight;\n  var switchHeightSM = token.controlHeight / 2;\n  var switchPadding = 2; // This is magic\n  var switchPinSize = switchHeight - switchPadding * 2;\n  var switchPinSizeSM = switchHeightSM - switchPadding * 2;\n  var switchToken = mergeToken(token, {\n    switchMinWidth: switchPinSize * 2 + switchPadding * 4,\n    switchHeight: switchHeight,\n    switchDuration: token.motionDurationMid,\n    switchColor: token.colorPrimary,\n    switchDisabledOpacity: token.opacityLoading,\n    switchInnerMarginMin: switchPinSize / 2,\n    switchInnerMarginMax: switchPinSize + switchPadding + switchPadding * 2,\n    switchPadding: switchPadding,\n    switchPinSize: switchPinSize,\n    switchBg: token.colorBgContainer,\n    switchMinWidthSM: switchPinSizeSM * 2 + switchPadding * 2,\n    switchHeightSM: switchHeightSM,\n    switchInnerMarginMinSM: switchPinSizeSM / 2,\n    switchInnerMarginMaxSM: switchPinSizeSM + switchPadding + switchPadding * 2,\n    switchPinSizeSM: switchPinSizeSM,\n    switchHandleShadow: \"0 2px 4px 0 \" + new TinyColor('#00230b').setAlpha(0.2).toRgbString(),\n    switchLoadingIconSize: token.fontSizeIcon * 0.75,\n    switchLoadingIconColor: \"rgba(0, 0, 0, \" + token.opacityLoading + \")\",\n    switchHandleActiveInset: '-30%'\n  });\n  return [genSwitchStyle(switchToken),\n  // inner style\n  genSwitchInnerStyle(switchToken),\n  // handle style\n  genSwitchHandleStyle(switchToken),\n  // loading style\n  genSwitchLoadingStyle(switchToken),\n  // small style\n  genSwitchSmallStyle(switchToken)];\n});","map":null,"metadata":{},"sourceType":"module"}