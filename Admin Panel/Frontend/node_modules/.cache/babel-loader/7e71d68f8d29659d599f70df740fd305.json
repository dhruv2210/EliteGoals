{"ast":null,"code":"import { head, isNil, last } from '@antv/util';\nimport extended from '../util/extended';\nimport interval from '../util/interval';\nimport strictLimit from '../util/strict-limit';\n/**\n * 计算线性的 ticks，使用 wilkinson extended 方法\n * @param cfg 度量的配置项\n * @returns 计算后的 ticks\n */\nexport default function linear(cfg) {\n  var min = cfg.min,\n    max = cfg.max,\n    tickCount = cfg.tickCount,\n    nice = cfg.nice,\n    tickInterval = cfg.tickInterval,\n    minLimit = cfg.minLimit,\n    maxLimit = cfg.maxLimit;\n  var ticks = extended(min, max, tickCount, nice).ticks;\n  if (!isNil(minLimit) || !isNil(maxLimit)) {\n    return strictLimit(cfg, head(ticks), last(ticks));\n  }\n  if (tickInterval) {\n    return interval(min, max, tickInterval).ticks;\n  }\n  return ticks;\n}","map":null,"metadata":{},"sourceType":"module"}