{"ast":null,"code":"import { __assign, __read } from \"tslib\";\nimport { isArray } from '@antv/util';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\n// 根据数据点生成 tick shape 的 6 个关键点\nfunction getTickPoints(pointInfo) {\n  var _a;\n  var x = pointInfo.x,\n    y = pointInfo.y,\n    y0 = pointInfo.y0,\n    size = pointInfo.size;\n  var yMin;\n  var yMax;\n  if (isArray(y)) {\n    _a = __read(y, 2), yMin = _a[0], yMax = _a[1];\n  } else {\n    yMin = y0;\n    yMax = y;\n  }\n  var xMax = x + size / 2;\n  var xMin = x - size / 2;\n  // tick 关键点顺序\n  // 4 - 1 - 5\n  //     |\n  // 2 - 0 - 3\n  return [{\n    x: x,\n    y: yMin\n  }, {\n    x: x,\n    y: yMax\n  }, {\n    x: xMin,\n    y: yMin\n  }, {\n    x: xMax,\n    y: yMin\n  }, {\n    x: xMin,\n    y: yMax\n  }, {\n    x: xMax,\n    y: yMax\n  }];\n}\n// 根据 tick 关键点绘制 path\nfunction getTickPath(points) {\n  return [['M', points[0].x, points[0].y], ['L', points[1].x, points[1].y], ['M', points[2].x, points[2].y], ['L', points[3].x, points[3].y], ['M', points[4].x, points[4].y], ['L', points[5].x, points[5].y]];\n}\n/** I 形状柱状图，常用于 error bar chart */\nregisterShape('interval', 'tick', {\n  getPoints: function getPoints(shapePoint) {\n    return getTickPoints(shapePoint);\n  },\n  draw: function draw(cfg, container) {\n    var style = getStyle(cfg, true, false);\n    var path = this.parsePath(getTickPath(cfg.points));\n    var shape = container.addShape('path', {\n      attrs: __assign(__assign({}, style), {\n        path: path\n      }),\n      name: 'interval'\n    });\n    return shape;\n  },\n  getMarker: function getMarker(markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: function symbol(x, y, r) {\n        return [['M', x - r / 2, y - r], ['L', x + r / 2, y - r], ['M', x, y - r], ['L', x, y + r], ['M', x - r / 2, y + r], ['L', x + r / 2, y + r]];\n      },\n      style: {\n        r: 5,\n        stroke: color\n      }\n    };\n  }\n});","map":null,"metadata":{},"sourceType":"module"}