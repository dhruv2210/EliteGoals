{"ast":null,"code":"/**\n * @fileoverview shadow\n * @author dengfuping_develop@163.com\n */\nimport { each, uniqueId } from '@antv/util';\nimport { createSVGElement } from '../util/dom';\nvar ATTR_MAP = {\n  shadowColor: 'color',\n  shadowOpacity: 'opacity',\n  shadowBlur: 'blur',\n  shadowOffsetX: 'dx',\n  shadowOffsetY: 'dy'\n};\nvar SHADOW_DIMENSION = {\n  x: '-40%',\n  y: '-40%',\n  width: '200%',\n  height: '200%'\n};\nvar Shadow = /** @class */function () {\n  function Shadow(cfg) {\n    this.type = 'filter';\n    this.cfg = {};\n    this.type = 'filter';\n    var el = createSVGElement('filter');\n    // expand the filter region to fill in shadows\n    each(SHADOW_DIMENSION, function (v, k) {\n      el.setAttribute(k, v);\n    });\n    this.el = el;\n    this.id = uniqueId('filter_');\n    this.el.id = this.id;\n    this.cfg = cfg;\n    this._parseShadow(cfg, el);\n    return this;\n  }\n  Shadow.prototype.match = function (type, cfg) {\n    if (this.type !== type) {\n      return false;\n    }\n    var flag = true;\n    var config = this.cfg;\n    each(Object.keys(config), function (attr) {\n      if (config[attr] !== cfg[attr]) {\n        flag = false;\n        return false;\n      }\n    });\n    return flag;\n  };\n  Shadow.prototype.update = function (name, value) {\n    var config = this.cfg;\n    config[ATTR_MAP[name]] = value;\n    this._parseShadow(config, this.el);\n    return this;\n  };\n  Shadow.prototype._parseShadow = function (config, el) {\n    var child = \"<feDropShadow\\n      dx=\\\"\" + (config.dx || 0) + \"\\\"\\n      dy=\\\"\" + (config.dy || 0) + \"\\\"\\n      stdDeviation=\\\"\" + (config.blur ? config.blur / 10 : 0) + \"\\\"\\n      flood-color=\\\"\" + (config.color ? config.color : '#000') + \"\\\"\\n      flood-opacity=\\\"\" + (config.opacity ? config.opacity : 1) + \"\\\"\\n      />\";\n    el.innerHTML = child;\n  };\n  return Shadow;\n}();\nexport default Shadow;","map":null,"metadata":{},"sourceType":"module"}