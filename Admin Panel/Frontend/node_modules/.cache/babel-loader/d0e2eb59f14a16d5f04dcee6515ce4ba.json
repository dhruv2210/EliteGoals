{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { groupBy, max, min } from '@antv/util';\nimport pdf from 'pdfast';\nimport { quantile } from '../../utils/transform/quantile';\nexport var toBoxValue = function toBoxValue(values) {\n  return {\n    low: min(values),\n    high: max(values),\n    q1: quantile(values, 0.25),\n    q3: quantile(values, 0.75),\n    median: quantile(values, [0.5]),\n    minMax: [min(values), max(values)],\n    quantile: [quantile(values, 0.25), quantile(values, 0.75)]\n  };\n};\nexport var toViolinValue = function toViolinValue(values, pdfOptions) {\n  var pdfResults = pdf.create(values, pdfOptions);\n  return {\n    violinSize: pdfResults.map(function (result) {\n      return result.y;\n    }),\n    violinY: pdfResults.map(function (result) {\n      return result.x;\n    })\n  };\n};\nexport var transformViolinData = function transformViolinData(options) {\n  var xField = options.xField,\n    yField = options.yField,\n    seriesField = options.seriesField,\n    data = options.data,\n    kde = options.kde;\n  /** 生成概率密度函数的配置 */\n  var pdfOptions = {\n    min: kde.min,\n    max: kde.max,\n    size: kde.sampleSize,\n    width: kde.width\n  };\n  // 无拆分\n  if (!seriesField) {\n    var group_1 = groupBy(data, xField);\n    return Object.keys(group_1).map(function (x) {\n      var records = group_1[x];\n      var values = records.map(function (record) {\n        return record[yField];\n      });\n      return __assign(__assign({\n        x: x\n      }, toViolinValue(values, pdfOptions)), toBoxValue(values));\n    });\n  }\n  // 有拆分\n  var resultList = [];\n  var seriesGroup = groupBy(data, seriesField);\n  Object.keys(seriesGroup).forEach(function (series) {\n    var group = groupBy(seriesGroup[series], xField);\n    return Object.keys(group).forEach(function (key) {\n      var _a;\n      var records = group[key];\n      var values = records.map(function (record) {\n        return record[yField];\n      });\n      resultList.push(__assign(__assign((_a = {\n        x: key\n      }, _a[seriesField] = series, _a), toViolinValue(values, pdfOptions)), toBoxValue(values)));\n    });\n  });\n  return resultList;\n};","map":null,"metadata":{},"sourceType":"module"}