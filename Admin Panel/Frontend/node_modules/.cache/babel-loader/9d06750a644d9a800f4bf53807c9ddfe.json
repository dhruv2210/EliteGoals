{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { FIELD_ORIGIN } from '../constant';\nimport Path from './path';\nimport './shape/area';\n/**\n * Area 几何标记类。\n * 常用于绘制面积图。\n */\nvar Area = /** @class */function (_super) {\n  __extends(Area, _super);\n  function Area(cfg) {\n    var _this = _super.call(this, cfg) || this;\n    _this.type = 'area';\n    _this.shapeType = 'area';\n    /** 生成图形关键点 */\n    _this.generatePoints = true;\n    /**\n     * 面积图是否从 0 基准线开始填充。\n     * 1. 默认值为 `true`，表现如下：\n     * ![image](https://gw.alipayobjects.com/zos/rmsportal/ZQqwUCczalrKqGgagOVp.png)\n     * 2. 当值为 `false` 时，表现如下：\n     * ![image](https://gw.alipayobjects.com/zos/rmsportal/yPswkaXvUpCYOdhocGwB.png)\n     */\n    _this.startOnZero = true;\n    var _a = cfg.startOnZero,\n      startOnZero = _a === void 0 ? true : _a,\n      _b = cfg.sortable,\n      sortable = _b === void 0 ? false : _b,\n      _c = cfg.showSinglePoint,\n      showSinglePoint = _c === void 0 ? false : _c;\n    _this.startOnZero = startOnZero; // 默认为 true\n    _this.sortable = sortable; // 关闭默认的 X 轴数据排序\n    _this.showSinglePoint = showSinglePoint;\n    return _this;\n  }\n  /**\n   * 获取图形绘制的关键点以及数据\n   * @param mappingData 映射后的数据\n   */\n  Area.prototype.getPointsAndData = function (mappingData) {\n    var points = [];\n    var data = [];\n    for (var i = 0, len = mappingData.length; i < len; i++) {\n      var obj = mappingData[i];\n      points.push(obj.points);\n      data.push(obj[FIELD_ORIGIN]);\n    }\n    return {\n      points: points,\n      data: data\n    };\n  };\n  /**\n   * 获取 Y 轴上的最小值\n   * @returns y 字段最小值\n   */\n  Area.prototype.getYMinValue = function () {\n    if (this.startOnZero) {\n      return _super.prototype.getYMinValue.call(this);\n    }\n    var yScale = this.getYScale();\n    return yScale.min;\n  };\n  return Area;\n}(Path);\nexport default Area;","map":null,"metadata":{},"sourceType":"module"}