{"ast":null,"code":"import { isNil } from '@antv/util';\n/**\n * 按照给定的 minLimit/maxLimit/tickCount 均匀计算出刻度 ticks\n *\n * @param cfg Scale 配置项\n * @return ticks\n */\nexport default function strictLimit(cfg, defaultMin, defaultMax) {\n  var _a;\n  var minLimit = cfg.minLimit,\n    maxLimit = cfg.maxLimit,\n    min = cfg.min,\n    max = cfg.max,\n    _b = cfg.tickCount,\n    tickCount = _b === void 0 ? 5 : _b;\n  var tickMin = isNil(minLimit) ? isNil(defaultMin) ? min : defaultMin : minLimit;\n  var tickMax = isNil(maxLimit) ? isNil(defaultMax) ? max : defaultMax : maxLimit;\n  if (tickMin > tickMax) {\n    _a = [tickMin, tickMax], tickMax = _a[0], tickMin = _a[1];\n  }\n  if (tickCount <= 2) {\n    return [tickMin, tickMax];\n  }\n  var step = (tickMax - tickMin) / (tickCount - 1);\n  var ticks = [];\n  for (var i = 0; i < tickCount; i++) {\n    ticks.push(tickMin + step * i);\n  }\n  return ticks;\n}","map":null,"metadata":{},"sourceType":"module"}