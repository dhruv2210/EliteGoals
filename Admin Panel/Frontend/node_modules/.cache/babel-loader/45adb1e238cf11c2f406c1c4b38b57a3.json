{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { ConfigContext } from '../../config-provider';\nimport LocaleReceiver from '../../locale-provider/LocaleReceiver';\nimport defaultLocale from '../../locale/en_US';\nimport ConfirmDialog from '../ConfirmDialog';\nvar HookModal = function HookModal(_ref, ref) {\n  var afterClose = _ref.afterClose,\n    config = _ref.config;\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    open = _React$useState2[0],\n    setOpen = _React$useState2[1];\n  var _React$useState3 = React.useState(config),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    innerConfig = _React$useState4[0],\n    setInnerConfig = _React$useState4[1];\n  var _React$useContext = React.useContext(ConfigContext),\n    direction = _React$useContext.direction,\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var prefixCls = getPrefixCls('modal');\n  var rootPrefixCls = getPrefixCls();\n  var close = function close() {\n    setOpen(false);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var triggerCancel = args.some(function (param) {\n      return param && param.triggerCancel;\n    });\n    if (innerConfig.onCancel && triggerCancel) {\n      innerConfig.onCancel.apply(innerConfig, [function () {}].concat(_toConsumableArray(args.slice(1))));\n    }\n  };\n  React.useImperativeHandle(ref, function () {\n    return {\n      destroy: close,\n      update: function update(newConfig) {\n        setInnerConfig(function (originConfig) {\n          return _extends(_extends({}, originConfig), newConfig);\n        });\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Modal\",\n    defaultLocale: defaultLocale.Modal\n  }, function (contextLocale) {\n    return /*#__PURE__*/React.createElement(ConfirmDialog, _extends({\n      prefixCls: prefixCls,\n      rootPrefixCls: rootPrefixCls\n    }, innerConfig, {\n      close: close,\n      open: open,\n      afterClose: afterClose,\n      okText: innerConfig.okText || (innerConfig.okCancel ? contextLocale.okText : contextLocale.justOkText),\n      direction: direction,\n      cancelText: innerConfig.cancelText || contextLocale.cancelText\n    }));\n  });\n};\nexport default /*#__PURE__*/React.forwardRef(HookModal);","map":null,"metadata":{},"sourceType":"module"}