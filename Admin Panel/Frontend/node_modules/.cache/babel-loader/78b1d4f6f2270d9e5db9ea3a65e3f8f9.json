{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// deps-lint-skip-all\nimport { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nvar genMessageStyle = function genMessageStyle(token) {\n  var _extends2, _ref2;\n  var componentCls = token.componentCls,\n    iconCls = token.iconCls,\n    boxShadowSecondary = token.boxShadowSecondary,\n    colorBgElevated = token.colorBgElevated,\n    colorSuccess = token.colorSuccess,\n    colorError = token.colorError,\n    colorWarning = token.colorWarning,\n    colorInfo = token.colorInfo,\n    fontSizeLG = token.fontSizeLG,\n    motionEaseInOutCirc = token.motionEaseInOutCirc,\n    motionDurationSlow = token.motionDurationSlow,\n    marginXS = token.marginXS,\n    paddingXS = token.paddingXS,\n    borderRadiusLG = token.borderRadiusLG,\n    zIndexPopup = token.zIndexPopup,\n    messageNoticeContentPadding = token.messageNoticeContentPadding;\n  var messageMoveIn = new Keyframes('MessageMoveIn', {\n    '0%': {\n      padding: 0,\n      transform: 'translateY(-100%)',\n      opacity: 0\n    },\n    '100%': {\n      padding: paddingXS,\n      transform: 'translateY(0)',\n      opacity: 1\n    }\n  });\n  var messageMoveOut = new Keyframes('MessageMoveOut', {\n    '0%': {\n      maxHeight: token.height,\n      padding: paddingXS,\n      opacity: 1\n    },\n    '100%': {\n      maxHeight: 0,\n      padding: 0,\n      opacity: 0\n    }\n  });\n  return [\n  // ============================ Holder ============================\n  _defineProperty({}, componentCls, _extends(_extends({}, resetComponent(token)), (_extends2 = {\n    position: 'fixed',\n    top: marginXS,\n    width: '100%',\n    pointerEvents: 'none',\n    zIndex: zIndexPopup\n  }, _defineProperty(_extends2, componentCls + \"-move-up\", {\n    animationFillMode: 'forwards'\n  }), _defineProperty(_extends2, \"\\n        \" + componentCls + \"-move-up-appear,\\n        \" + componentCls + \"-move-up-enter\\n      \", {\n    animationName: messageMoveIn,\n    animationDuration: motionDurationSlow,\n    animationPlayState: 'paused',\n    animationTimingFunction: motionEaseInOutCirc\n  }), _defineProperty(_extends2, \"\\n        \" + componentCls + \"-move-up-appear\" + componentCls + \"-move-up-appear-active,\\n        \" + componentCls + \"-move-up-enter\" + componentCls + \"-move-up-enter-active\\n      \", {\n    animationPlayState: 'running'\n  }), _defineProperty(_extends2, componentCls + \"-move-up-leave\", {\n    animationName: messageMoveOut,\n    animationDuration: motionDurationSlow,\n    animationPlayState: 'paused',\n    animationTimingFunction: motionEaseInOutCirc\n  }), _defineProperty(_extends2, componentCls + \"-move-up-leave\" + componentCls + \"-move-up-leave-active\", {\n    animationPlayState: 'running'\n  }), _defineProperty(_extends2, '&-rtl', {\n    direction: 'rtl',\n    span: {\n      direction: 'rtl'\n    }\n  }), _extends2))),\n  // ============================ Notice ============================\n  _defineProperty({}, componentCls + \"-notice\", (_ref2 = {\n    padding: paddingXS,\n    textAlign: 'center'\n  }, _defineProperty(_ref2, iconCls, {\n    verticalAlign: 'text-bottom',\n    marginInlineEnd: marginXS,\n    fontSize: fontSizeLG\n  }), _defineProperty(_ref2, componentCls + \"-notice-content\", {\n    display: 'inline-block',\n    padding: messageNoticeContentPadding,\n    background: colorBgElevated,\n    borderRadius: borderRadiusLG,\n    boxShadow: boxShadowSecondary,\n    pointerEvents: 'all'\n  }), _defineProperty(_ref2, componentCls + \"-success \" + iconCls, {\n    color: colorSuccess\n  }), _defineProperty(_ref2, componentCls + \"-error \" + iconCls, {\n    color: colorError\n  }), _defineProperty(_ref2, componentCls + \"-warning \" + iconCls, {\n    color: colorWarning\n  }), _defineProperty(_ref2, \"\\n        \" + componentCls + \"-info \" + iconCls + \",\\n        \" + componentCls + \"-loading \" + iconCls, {\n    color: colorInfo\n  }), _ref2)),\n  // ============================= Pure =============================\n  _defineProperty({}, componentCls + \"-notice-pure-panel\", {\n    padding: 0,\n    textAlign: 'start'\n  })];\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Message', function (token) {\n  // Gen-style functions here\n  var combinedToken = mergeToken(token, {\n    messageNoticeContentPadding: (token.controlHeightLG - token.fontSize * token.lineHeight) / 2 + \"px \" + token.paddingSM + \"px\"\n  });\n  return [genMessageStyle(combinedToken)];\n}, function (token) {\n  return {\n    height: 150,\n    zIndexPopup: token.zIndexPopupBase + 10\n  };\n});","map":null,"metadata":{},"sourceType":"module"}