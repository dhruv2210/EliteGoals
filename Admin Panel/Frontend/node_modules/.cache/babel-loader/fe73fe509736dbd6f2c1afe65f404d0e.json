{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { useEffect, useImperativeHandle, forwardRef } from 'react';\nimport { BidirectionalBar as G2plotBidirectionalBar } from '@antv/g2plot';\nimport useChart from '../../hooks/useChart';\nimport { getChart } from '../../util';\nimport ErrorBoundary from '../../errorBoundary';\nimport ChartLoading from '../../util/createLoading';\nvar BidirectionalBarChart = forwardRef(function (props, ref) {\n  var chartRef = props.chartRef,\n    _a = props.style,\n    style = _a === void 0 ? {\n      height: 'inherit'\n    } : _a,\n    className = props.className,\n    loading = props.loading,\n    loadingTemplate = props.loadingTemplate,\n    errorTemplate = props.errorTemplate,\n    rest = __rest(props, [\"chartRef\", \"style\", \"className\", \"loading\", \"loadingTemplate\", \"errorTemplate\"]);\n  var _b = useChart(G2plotBidirectionalBar, rest),\n    chart = _b.chart,\n    container = _b.container;\n  useEffect(function () {\n    getChart(chartRef, chart.current);\n  }, [chart.current]);\n  useImperativeHandle(ref, function () {\n    return {\n      getChart: function getChart() {\n        return chart.current;\n      }\n    };\n  });\n  return React.createElement(ErrorBoundary, {\n    errorTemplate: errorTemplate\n  }, loading && React.createElement(ChartLoading, {\n    loadingTemplate: loadingTemplate,\n    theme: props.theme\n  }), React.createElement(\"div\", {\n    className: className,\n    style: style,\n    ref: container\n  }));\n});\nexport default BidirectionalBarChart;","map":null,"metadata":{},"sourceType":"module"}