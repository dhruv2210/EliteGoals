{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerShape, Util } from '@antv/g2';\nimport { parsePathString } from '@antv/path-util';\nimport { deepAssign } from '../../utils';\nimport { PATH_FIELD } from './constant';\n/**\n * 获取填充属性\n * @param cfg 图形绘制数据\n */\nfunction getFillAttrs(cfg) {\n  // style.fill 优先级更高\n  return deepAssign({}, cfg.defaultStyle, {\n    fill: cfg.color\n  }, cfg.style);\n}\nregisterShape('schema', 'venn', {\n  draw: function draw(cfg, container) {\n    var data = cfg.data;\n    var segments = parsePathString(data[PATH_FIELD]);\n    var fillAttrs = getFillAttrs(cfg);\n    var group = container.addGroup({\n      name: 'venn-shape'\n    });\n    group.addShape('path', {\n      attrs: __assign(__assign({}, fillAttrs), {\n        path: segments\n      }),\n      name: 'venn-path'\n    });\n    var _a = cfg.customInfo,\n      offsetX = _a.offsetX,\n      offsetY = _a.offsetY;\n    var matrix = Util.transform(null, [['t', offsetX, offsetY]]);\n    group.setMatrix(matrix);\n    return group;\n  },\n  getMarker: function getMarker(markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: 'circle',\n      style: {\n        lineWidth: 0,\n        stroke: color,\n        fill: color,\n        r: 4\n      }\n    };\n  }\n});","map":null,"metadata":{},"sourceType":"module"}