{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { initFadeMotion } from '../../style/motion/fade';\nimport { resetComponent } from '../../style';\nimport { initMotion } from '../../style/motion/motion';\nvar initFloatButtonGroupMotion = function initFloatButtonGroupMotion(token) {\n  var _ref2;\n  var componentCls = token.componentCls,\n    floatButtonSize = token.floatButtonSize,\n    motionDurationSlow = token.motionDurationSlow,\n    motionEaseInOutCirc = token.motionEaseInOutCirc;\n  var groupPrefixCls = componentCls + \"-group\";\n  var moveDownIn = new Keyframes('antFloatButtonMoveDownIn', {\n    '0%': {\n      transform: \"translate3d(0, \" + floatButtonSize + \"px, 0)\",\n      transformOrigin: '0 0',\n      opacity: 0\n    },\n    '100%': {\n      transform: 'translate3d(0, 0, 0)',\n      transformOrigin: '0 0',\n      opacity: 1\n    }\n  });\n  var moveDownOut = new Keyframes('antFloatButtonMoveDownOut', {\n    '0%': {\n      transform: 'translate3d(0, 0, 0)',\n      transformOrigin: '0 0',\n      opacity: 1\n    },\n    '100%': {\n      transform: \"translate3d(0, \" + floatButtonSize + \"px, 0)\",\n      transformOrigin: '0 0',\n      opacity: 0\n    }\n  });\n  return [_defineProperty({}, groupPrefixCls + \"-wrap\", _extends({}, initMotion(groupPrefixCls + \"-wrap\", moveDownIn, moveDownOut, motionDurationSlow, true))), _defineProperty({}, groupPrefixCls + \"-wrap\", (_ref2 = {}, _defineProperty(_ref2, \"\\n          &\" + groupPrefixCls + \"-wrap-enter,\\n          &\" + groupPrefixCls + \"-wrap-appear\\n        \", {\n    opacity: 0,\n    animationTimingFunction: motionEaseInOutCirc\n  }), _defineProperty(_ref2, \"&\" + groupPrefixCls + \"-wrap-leave\", {\n    animationTimingFunction: motionEaseInOutCirc\n  }), _ref2))];\n};\n// ============================== Group ==============================\nvar floatButtonGroupStyle = function floatButtonGroupStyle(token) {\n  var _extends2, _ref8, _ref11;\n  var componentCls = token.componentCls,\n    floatButtonSize = token.floatButtonSize,\n    margin = token.margin,\n    borderRadiusLG = token.borderRadiusLG;\n  var groupPrefixCls = componentCls + \"-group\";\n  return _ref11 = {}, _defineProperty(_ref11, groupPrefixCls, _extends(_extends({}, resetComponent(token)), (_extends2 = {\n    zIndex: 99,\n    display: 'block',\n    border: 'none',\n    position: 'fixed',\n    width: floatButtonSize,\n    height: 'auto',\n    boxShadow: 'none',\n    minHeight: floatButtonSize,\n    insetInlineEnd: token.floatButtonInsetInlineEnd,\n    insetBlockEnd: token.floatButtonInsetBlockEnd,\n    borderRadius: borderRadiusLG\n  }, _defineProperty(_extends2, groupPrefixCls + \"-wrap\", {\n    zIndex: -1,\n    display: 'block',\n    position: 'relative',\n    marginBottom: margin\n  }), _defineProperty(_extends2, '&&-rtl', {\n    direction: 'rtl'\n  }), _defineProperty(_extends2, componentCls, {\n    position: 'static'\n  }), _extends2))), _defineProperty(_ref11, groupPrefixCls + \"-circle\", _defineProperty({}, componentCls + \"-circle:not(:last-child)\", _defineProperty({\n    marginBottom: token.margin\n  }, componentCls + \"-body\", {\n    width: floatButtonSize,\n    height: floatButtonSize\n  }))), _defineProperty(_ref11, groupPrefixCls + \"-square\", (_ref8 = {}, _defineProperty(_ref8, componentCls + \"-square\", {\n    borderRadius: 0,\n    padding: 0,\n    '&:first-child': {\n      borderStartStartRadius: borderRadiusLG,\n      borderStartEndRadius: borderRadiusLG\n    },\n    '&:last-child': {\n      borderEndStartRadius: borderRadiusLG,\n      borderEndEndRadius: borderRadiusLG\n    },\n    '&:not(:last-child)': {\n      borderBottom: token.lineWidth + \"px \" + token.lineType + \" \" + token.colorSplit\n    }\n  }), _defineProperty(_ref8, groupPrefixCls + \"-wrap\", _defineProperty({\n    display: 'block',\n    borderRadius: borderRadiusLG,\n    boxShadow: token.boxShadowSecondary,\n    overflow: 'hidden'\n  }, componentCls + \"-square\", _defineProperty({\n    boxShadow: 'none',\n    marginTop: 0,\n    borderRadius: 0,\n    padding: token.paddingXXS,\n    '&:first-child': {\n      borderStartStartRadius: borderRadiusLG,\n      borderStartEndRadius: borderRadiusLG\n    },\n    '&:last-child': {\n      borderEndStartRadius: borderRadiusLG,\n      borderEndEndRadius: borderRadiusLG\n    },\n    '&:not(:last-child)': {\n      borderBottom: token.lineWidth + \"px \" + token.lineType + \" \" + token.colorSplit\n    }\n  }, componentCls + \"-body\", {\n    width: floatButtonSize - token.paddingXXS * 2,\n    height: floatButtonSize - token.paddingXXS * 2\n  }))), _ref8)), _defineProperty(_ref11, groupPrefixCls + \"-circle-shadow\", {\n    boxShadow: 'none'\n  }), _defineProperty(_ref11, groupPrefixCls + \"-square-shadow\", _defineProperty({\n    boxShadow: token.boxShadowSecondary\n  }, componentCls + \"-square\", _defineProperty({\n    boxShadow: 'none',\n    padding: token.paddingXXS\n  }, componentCls + \"-body\", {\n    width: floatButtonSize - token.paddingXXS * 2,\n    height: floatButtonSize - token.paddingXXS * 2\n  }))), _ref11;\n};\n// ============================== Shared ==============================\nvar sharedFloatButtonStyle = function sharedFloatButtonStyle(token) {\n  var _ref16, _ref19, _ref22;\n  var componentCls = token.componentCls,\n    floatButtonIconSize = token.floatButtonIconSize,\n    floatButtonSize = token.floatButtonSize,\n    borderRadiusLG = token.borderRadiusLG;\n  return _ref22 = {}, _defineProperty(_ref22, componentCls, _extends(_extends({}, resetComponent(token)), _defineProperty({\n    border: 'none',\n    position: 'fixed',\n    cursor: 'pointer',\n    overflow: 'hidden',\n    zIndex: 99,\n    display: 'block',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: floatButtonSize,\n    height: floatButtonSize,\n    insetInlineEnd: token.floatButtonInsetInlineEnd,\n    insetBlockEnd: token.floatButtonInsetBlockEnd,\n    boxShadow: token.boxShadowSecondary,\n    // Pure Panel\n    '&-pure': {\n      position: 'relative',\n      inset: 'auto'\n    },\n    '&:empty': {\n      display: 'none'\n    }\n  }, componentCls + \"-body\", _defineProperty({\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    transition: \"all \" + token.motionDurationMid\n  }, componentCls + \"-content\", _defineProperty({\n    overflow: 'hidden',\n    textAlign: 'center',\n    minHeight: floatButtonSize,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: \"2px 4px\"\n  }, componentCls + \"-icon\", {\n    textAlign: 'center',\n    margin: 'auto',\n    width: floatButtonIconSize,\n    fontSize: floatButtonIconSize,\n    lineHeight: 1\n  }))))), _defineProperty(_ref22, componentCls + \"-circle\", _defineProperty({\n    height: floatButtonSize,\n    borderRadius: '50%'\n  }, componentCls + \"-body\", {\n    borderRadius: '50%'\n  })), _defineProperty(_ref22, componentCls + \"-square\", _defineProperty({\n    height: 'auto',\n    minHeight: floatButtonSize,\n    borderRadius: borderRadiusLG\n  }, componentCls + \"-body\", {\n    height: 'auto',\n    borderRadius: token.borderRadiusSM\n  })), _defineProperty(_ref22, componentCls + \"-default\", _defineProperty({\n    backgroundColor: token.floatButtonBackgroundColor,\n    transition: \"background-color \" + token.motionDurationMid\n  }, componentCls + \"-body\", _defineProperty({\n    backgroundColor: token.floatButtonBackgroundColor,\n    transition: \"background-color \" + token.motionDurationMid,\n    '&:hover': {\n      backgroundColor: token.colorFillContent\n    }\n  }, componentCls + \"-content\", (_ref16 = {}, _defineProperty(_ref16, componentCls + \"-icon\", {\n    color: token.colorText\n  }), _defineProperty(_ref16, componentCls + \"-description\", {\n    display: 'flex',\n    alignItems: 'center',\n    lineHeight: token.fontSizeLG + \"px\",\n    color: token.colorText,\n    fontSize: token.fontSizeSM\n  }), _ref16)))), _defineProperty(_ref22, componentCls + \"-primary\", _defineProperty({\n    backgroundColor: token.colorPrimary\n  }, componentCls + \"-body\", _defineProperty({\n    backgroundColor: token.colorPrimary,\n    transition: \"background-color \" + token.motionDurationMid,\n    '&:hover': {\n      backgroundColor: token.colorPrimaryHover\n    }\n  }, componentCls + \"-content\", (_ref19 = {}, _defineProperty(_ref19, componentCls + \"-icon\", {\n    color: token.colorTextLightSolid\n  }), _defineProperty(_ref19, componentCls + \"-description\", {\n    display: 'flex',\n    alignItems: 'center',\n    lineHeight: token.fontSizeLG + \"px\",\n    color: token.colorTextLightSolid,\n    fontSize: token.fontSizeSM\n  }), _ref19)))), _ref22;\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('FloatButton', function (token) {\n  var colorTextLightSolid = token.colorTextLightSolid,\n    colorBgElevated = token.colorBgElevated,\n    controlHeightLG = token.controlHeightLG,\n    marginXXL = token.marginXXL,\n    marginLG = token.marginLG,\n    fontSize = token.fontSize,\n    fontSizeIcon = token.fontSizeIcon,\n    controlItemBgHover = token.controlItemBgHover;\n  var floatButtonToken = mergeToken(token, {\n    floatButtonBackgroundColor: colorBgElevated,\n    floatButtonColor: colorTextLightSolid,\n    floatButtonHoverBackgroundColor: controlItemBgHover,\n    floatButtonFontSize: fontSize,\n    floatButtonIconSize: fontSizeIcon * 1.5,\n    floatButtonSize: controlHeightLG,\n    floatButtonInsetBlockEnd: marginXXL,\n    floatButtonInsetInlineEnd: marginLG\n  });\n  return [floatButtonGroupStyle(floatButtonToken), sharedFloatButtonStyle(floatButtonToken), initFadeMotion(token), initFloatButtonGroupMotion(floatButtonToken)];\n});","map":null,"metadata":{},"sourceType":"module"}