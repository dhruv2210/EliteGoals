{"ast":null,"code":"import { filter, isNil, isNumber, last } from '@antv/util';\n/**\n * 计算分类 ticks\n * @param cfg 度量的配置项\n * @returns 计算后的 ticks\n */\nexport default function calculateCatTicks(cfg) {\n  var values = cfg.values,\n    tickInterval = cfg.tickInterval,\n    tickCount = cfg.tickCount,\n    showLast = cfg.showLast;\n  if (isNumber(tickInterval)) {\n    var ticks_1 = filter(values, function (__, i) {\n      return i % tickInterval === 0;\n    });\n    var lastValue = last(values);\n    if (showLast && last(ticks_1) !== lastValue) {\n      ticks_1.push(lastValue);\n    }\n    return ticks_1;\n  }\n  var len = values.length;\n  var min = cfg.min,\n    max = cfg.max;\n  if (isNil(min)) {\n    min = 0;\n  }\n  if (isNil(max)) {\n    max = values.length - 1;\n  }\n  if (!isNumber(tickCount) || tickCount >= len) return values.slice(min, max + 1);\n  if (tickCount <= 0 || max <= 0) return [];\n  var interval = tickCount === 1 ? len : Math.floor(len / (tickCount - 1));\n  var ticks = [];\n  var idx = min;\n  for (var i = 0; i < tickCount; i++) {\n    if (idx >= max) break;\n    idx = Math.min(min + i * interval, max);\n    if (i === tickCount - 1 && showLast) ticks.push(values[max]);else ticks.push(values[idx]);\n  }\n  return ticks;\n}","map":null,"metadata":{},"sourceType":"module"}