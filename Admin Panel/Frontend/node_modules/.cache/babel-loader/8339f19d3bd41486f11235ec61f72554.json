{"ast":null,"code":"import { registerShape, Util } from '@antv/g2';\nimport { clamp } from '@antv/util';\n/**\n * 自定义 Shape 部分: 自定义米轨仪表盘\n * 定义 STEP, STEP_RATIO. 可绘制区域: 1 / (STEP + 1) * i -> 1 / (STEP + 1) * i + (STEP_RATIO / (STEP + 1))\n */\nregisterShape('interval', 'meter-gauge', {\n  draw: function draw(cfg, container) {\n    // 使用 customInfo 传递参数\n    var _a = cfg.customInfo.meter,\n      meter = _a === void 0 ? {} : _a;\n    var _b = meter.steps,\n      STEP = _b === void 0 ? 50 : _b,\n      _c = meter.stepRatio,\n      STEP_RATIO = _c === void 0 ? 0.5 : _c;\n    STEP = STEP < 1 ? 1 : STEP;\n    // stepRatio 取值范围: (0, 1]\n    STEP_RATIO = clamp(STEP_RATIO, 0, 1);\n    var _d = this.coordinate,\n      COORD_START_ANGLE = _d.startAngle,\n      COORD_END_ANGLE = _d.endAngle;\n    var GAP = 0;\n    if (STEP_RATIO > 0 && STEP_RATIO < 1) {\n      var TOTAL = COORD_END_ANGLE - COORD_START_ANGLE;\n      GAP = TOTAL / STEP / (STEP_RATIO / (1 - STEP_RATIO) + 1 - 1 / STEP);\n    }\n    var INTERVAL = GAP / (1 - STEP_RATIO) * STEP_RATIO;\n    var group = container.addGroup();\n    // 绘制图形的时候，留下 gap\n    var center = this.coordinate.getCenter();\n    var radius = this.coordinate.getRadius();\n    var _e = Util.getAngle(cfg, this.coordinate),\n      START_ANGLE = _e.startAngle,\n      END_ANGLE = _e.endAngle;\n    for (var startAngle = START_ANGLE; startAngle < END_ANGLE;) {\n      var endAngle = void 0;\n      var r = (startAngle - COORD_START_ANGLE) % (INTERVAL + GAP);\n      if (r < INTERVAL) {\n        endAngle = startAngle + (INTERVAL - r);\n      } else {\n        startAngle += INTERVAL + GAP - r;\n        endAngle = startAngle + INTERVAL;\n      }\n      var path = Util.getSectorPath(center.x, center.y, radius, startAngle, Math.min(endAngle, END_ANGLE), radius * this.coordinate.innerRadius);\n      group.addShape('path', {\n        name: 'meter-gauge',\n        attrs: {\n          path: path,\n          fill: cfg.color,\n          stroke: cfg.color,\n          lineWidth: 0.5\n        }\n      });\n      startAngle = endAngle + GAP;\n    }\n    return group;\n  }\n});","map":null,"metadata":{},"sourceType":"module"}