{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { binHistogram } from '../../utils/transform/histogram';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constant';\nvar Histogram = /** @class */function (_super) {\n  __extends(Histogram, _super);\n  function Histogram() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n    _this.type = 'histogram';\n    return _this;\n  }\n  /**\n   * 获取 默认配置项\n   * 供外部使用\n   */\n  Histogram.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  Histogram.prototype.changeData = function (data) {\n    this.updateOption({\n      data: data\n    });\n    var _a = this.options,\n      binField = _a.binField,\n      binNumber = _a.binNumber,\n      binWidth = _a.binWidth,\n      stackField = _a.stackField;\n    this.chart.changeData(binHistogram(data, binField, binWidth, binNumber, stackField));\n  };\n  /**\n   * 获取直方图的适配器\n   */\n  Histogram.prototype.getDefaultOptions = function () {\n    return Histogram.getDefaultOptions();\n  };\n  /**\n   * 获取直方图的适配器\n   */\n  Histogram.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  return Histogram;\n}(Plot);\nexport { Histogram };","map":null,"metadata":{},"sourceType":"module"}