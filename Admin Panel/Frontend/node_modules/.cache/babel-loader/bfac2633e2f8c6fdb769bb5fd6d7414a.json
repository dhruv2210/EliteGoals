{"ast":null,"code":"import { __assign } from \"tslib\";\nexport function getScaleMax(maxAngle, yField, data) {\n  var yData = data.map(function (item) {\n    return item[yField];\n  }).filter(function (v) {\n    return v !== undefined;\n  });\n  var maxValue = yData.length > 0 ? Math.max.apply(Math, yData) : 0;\n  var formatRadian = Math.abs(maxAngle) % 360;\n  if (!formatRadian) {\n    return maxValue;\n  }\n  return maxValue * 360 / formatRadian;\n}\n/**\n * 获取堆叠之后的数据\n */\nexport function getStackedData(data, xField, yField) {\n  var stackedData = [];\n  data.forEach(function (item) {\n    var valueItem = stackedData.find(function (v) {\n      return v[xField] === item[xField];\n    });\n    if (valueItem) {\n      valueItem[yField] += item[yField] || null;\n    } else {\n      stackedData.push(__assign({}, item));\n    }\n  });\n  return stackedData;\n}","map":null,"metadata":{},"sourceType":"module"}