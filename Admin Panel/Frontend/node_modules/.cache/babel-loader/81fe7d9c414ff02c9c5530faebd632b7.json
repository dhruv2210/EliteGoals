{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isArray } from '@antv/util';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nimport { getRectPath } from './util';\nimport { omit } from '../../../util/helper';\n// 根据数据点生成 Line 的两个关键点\nfunction getLinePoints(pointInfo) {\n  var x = pointInfo.x,\n    y = pointInfo.y,\n    y0 = pointInfo.y0;\n  if (isArray(y)) {\n    return y.map(function (yItem, idx) {\n      return {\n        x: isArray(x) ? x[idx] : x,\n        y: yItem\n      };\n    });\n  }\n  // 起始点从 y0 开始\n  return [{\n    x: x,\n    y: y0\n  }, {\n    x: x,\n    y: y\n  }];\n}\nregisterShape('interval', 'line', {\n  getPoints: function getPoints(shapePoint) {\n    return getLinePoints(shapePoint);\n  },\n  draw: function draw(cfg, container) {\n    var style = getStyle(cfg, true, false, 'lineWidth');\n    var newStyle = omit(__assign({}, style), ['fill']);\n    var path = this.parsePath(getRectPath(cfg.points, false));\n    var shape = container.addShape('path', {\n      attrs: __assign(__assign({}, newStyle), {\n        path: path\n      }),\n      name: 'interval'\n    });\n    return shape;\n  },\n  getMarker: function getMarker(markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: function symbol(x, y, r) {\n        return [['M', x, y - r], ['L', x, y + r]];\n      },\n      style: {\n        r: 5,\n        stroke: color\n      }\n    };\n  }\n});","map":null,"metadata":{},"sourceType":"module"}