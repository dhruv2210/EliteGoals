{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { get } from '@antv/util';\nimport { ellipsisLabel } from './label';\nimport { applyRotate, applyTranslate } from './matrix';\nimport { formatPadding } from './util';\nexport function renderTag(container, tagCfg) {\n  var x = tagCfg.x,\n    y = tagCfg.y,\n    content = tagCfg.content,\n    style = tagCfg.style,\n    id = tagCfg.id,\n    name = tagCfg.name,\n    rotate = tagCfg.rotate,\n    maxLength = tagCfg.maxLength,\n    autoEllipsis = tagCfg.autoEllipsis,\n    isVertical = tagCfg.isVertical,\n    ellipsisPosition = tagCfg.ellipsisPosition,\n    background = tagCfg.background;\n  var tagGroup = container.addGroup({\n    id: id + \"-group\",\n    name: name + \"-group\",\n    attrs: {\n      x: x,\n      y: y\n    }\n  });\n  // Text shape\n  var text = tagGroup.addShape({\n    type: 'text',\n    id: id,\n    name: name,\n    attrs: __assign({\n      x: 0,\n      y: 0,\n      text: content\n    }, style)\n  });\n  // maxLength 应包含 background 中的 padding 值\n  var padding = formatPadding(get(background, 'padding', 0));\n  if (maxLength && autoEllipsis) {\n    var maxTextLength = maxLength - (padding[1] + padding[3]);\n    // 超出自动省略\n    ellipsisLabel(!isVertical, text, maxTextLength, ellipsisPosition);\n  }\n  if (background) {\n    // 渲染文本背景\n    var backgroundStyle = get(background, 'style', {});\n    var _a = text.getCanvasBBox(),\n      minX = _a.minX,\n      minY = _a.minY,\n      width = _a.width,\n      height = _a.height;\n    var tagBg = tagGroup.addShape('rect', {\n      id: id + \"-bg\",\n      name: id + \"-bg\",\n      attrs: __assign({\n        x: minX - padding[3],\n        y: minY - padding[0],\n        width: width + padding[1] + padding[3],\n        height: height + padding[0] + padding[2]\n      }, backgroundStyle)\n    });\n    tagBg.toBack();\n  }\n  applyTranslate(tagGroup, x, y);\n  applyRotate(tagGroup, rotate, x, y);\n}","map":null,"metadata":{},"sourceType":"module"}