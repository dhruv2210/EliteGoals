{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { genFocusStyle, resetComponent } from '../../style';\nvar genBreadcrumbStyle = function genBreadcrumbStyle(token) {\n  var _ref2, _extends2;\n  var componentCls = token.componentCls,\n    iconCls = token.iconCls;\n  return _defineProperty({}, componentCls, _extends(_extends({}, resetComponent(token)), (_extends2 = {\n    color: token.breadcrumbBaseColor,\n    fontSize: token.breadcrumbFontSize\n  }, _defineProperty(_extends2, iconCls, {\n    fontSize: token.breadcrumbIconFontSize\n  }), _defineProperty(_extends2, \"ol\", {\n    display: 'flex',\n    flexWrap: 'wrap',\n    margin: 0,\n    padding: 0,\n    listStyle: 'none'\n  }), _defineProperty(_extends2, \"a\", _extends({\n    color: token.breadcrumbLinkColor,\n    transition: \"color \" + token.motionDurationMid,\n    padding: \"0 \" + token.paddingXXS + \"px\",\n    borderRadius: token.borderRadiusSM,\n    height: token.lineHeight * token.fontSize,\n    display: 'inline-block',\n    marginInline: -token.marginXXS,\n    '&:hover': {\n      color: token.breadcrumbLinkColorHover,\n      backgroundColor: token.colorBgTextHover\n    }\n  }, genFocusStyle(token))), _defineProperty(_extends2, \"li:last-child > \" + componentCls + \"-separator\", {\n    display: 'none'\n  }), _defineProperty(_extends2, componentCls + \"-separator\", {\n    marginInline: token.breadcrumbSeparatorMargin,\n    color: token.breadcrumbSeparatorColor\n  }), _defineProperty(_extends2, componentCls + \"-link\", _defineProperty({}, \"\\n          > \" + iconCls + \" + span,\\n          > \" + iconCls + \" + a\\n        \", {\n    marginInlineStart: token.marginXXS\n  })), _defineProperty(_extends2, componentCls + \"-overlay-link\", (_ref2 = {\n    borderRadius: token.borderRadiusSM,\n    height: token.lineHeight * token.fontSize,\n    display: 'inline-block',\n    padding: \"0 \" + token.paddingXXS + \"px\",\n    marginInline: -token.marginXXS\n  }, _defineProperty(_ref2, \"> \" + iconCls, {\n    marginInlineStart: token.marginXXS,\n    fontSize: token.fontSizeIcon\n  }), _defineProperty(_ref2, '&:hover', {\n    color: token.breadcrumbLinkColorHover,\n    backgroundColor: token.colorBgTextHover,\n    a: {\n      color: token.breadcrumbLinkColorHover\n    }\n  }), _defineProperty(_ref2, \"a\", {\n    '&:hover': {\n      backgroundColor: 'transparent'\n    }\n  }), _ref2)), _defineProperty(_extends2, \"&\" + token.componentCls + \"-rtl\", {\n    direction: 'rtl'\n  }), _extends2)));\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Breadcrumb', function (token) {\n  var BreadcrumbToken = mergeToken(token, {\n    breadcrumbBaseColor: token.colorTextDescription,\n    breadcrumbFontSize: token.fontSize,\n    breadcrumbIconFontSize: token.fontSize,\n    breadcrumbLinkColor: token.colorTextDescription,\n    breadcrumbLinkColorHover: token.colorText,\n    breadcrumbLastItemColor: token.colorText,\n    breadcrumbSeparatorMargin: token.marginXS,\n    breadcrumbSeparatorColor: token.colorTextDescription\n  });\n  return [genBreadcrumbStyle(BreadcrumbToken)];\n});","map":null,"metadata":{},"sourceType":"module"}