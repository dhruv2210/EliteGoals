{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { each } from '@antv/util';\nimport MaskBase from './base';\n/**\n * @ignore\n * 多个点构成的 Path 辅助框 Action\n */\nvar PathMask = /** @class */function (_super) {\n  __extends(PathMask, _super);\n  function PathMask() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  // 生成 mask 的路径\n  PathMask.prototype.getMaskPath = function () {\n    var points = this.points;\n    var path = [];\n    if (points.length) {\n      each(points, function (point, index) {\n        if (index === 0) {\n          path.push(['M', point.x, point.y]);\n        } else {\n          path.push(['L', point.x, point.y]);\n        }\n      });\n      path.push(['L', points[0].x, points[0].y]);\n    }\n    return path;\n  };\n  PathMask.prototype.getMaskAttrs = function () {\n    return {\n      path: this.getMaskPath()\n    };\n  };\n  /**\n   * 添加一个点\n   */\n  PathMask.prototype.addPoint = function () {\n    this.resize();\n  };\n  return PathMask;\n}(MaskBase);\nexport default PathMask;","map":null,"metadata":{},"sourceType":"module"}