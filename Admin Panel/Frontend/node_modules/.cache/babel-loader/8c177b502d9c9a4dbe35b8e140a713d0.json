{"ast":null,"code":"import { assign, isArray } from '@antv/util';\nimport * as d3Hierarchy from 'd3-hierarchy';\nimport { getAllNodes, getField } from './util';\nvar DEFAULT_OPTIONS = {\n  field: 'value',\n  as: ['x', 'y', 'r'],\n  // 默认降序\n  sort: function sort(a, b) {\n    return b.value - a.value;\n  }\n};\nexport function pack(data, options) {\n  options = assign({}, DEFAULT_OPTIONS, options);\n  var as = options.as;\n  if (!isArray(as) || as.length !== 3) {\n    throw new TypeError('Invalid as: it must be an array with 3 strings (e.g. [ \"x\", \"y\", \"r\" ])!');\n  }\n  var field;\n  try {\n    field = getField(options);\n  } catch (e) {\n    console.warn(e);\n  }\n  var packLayout = function packLayout(data) {\n    return d3Hierarchy.pack().size(options.size).padding(options.padding)(d3Hierarchy.hierarchy(data).sum(function (d) {\n      return d[field];\n    }).sort(options.sort));\n  };\n  var root = packLayout(data);\n  var x = as[0];\n  var y = as[1];\n  var r = as[2];\n  root.each(function (node) {\n    node[x] = node.x;\n    node[y] = node.y;\n    node[r] = node.r;\n  });\n  return getAllNodes(root);\n}","map":null,"metadata":{},"sourceType":"module"}