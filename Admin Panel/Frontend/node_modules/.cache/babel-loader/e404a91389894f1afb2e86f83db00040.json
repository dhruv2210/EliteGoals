{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { ext } from '@antv/matrix-util';\nimport { deepMix } from '@antv/util';\nimport { parsePadding } from '../../../util/padding';\nimport Action from '../base';\nvar PADDING_RIGHT = 10;\nvar PADDING_TOP = 5;\n/**\n * Button action\n * @ignore\n */\nvar ButtonAction = /** @class */function (_super) {\n  __extends(ButtonAction, _super);\n  function ButtonAction() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.buttonGroup = null;\n    _this.buttonCfg = {\n      name: 'button',\n      text: 'button',\n      textStyle: {\n        x: 0,\n        y: 0,\n        fontSize: 12,\n        fill: '#333333',\n        cursor: 'pointer'\n      },\n      padding: [8, 10],\n      style: {\n        fill: '#f7f7f7',\n        stroke: '#cccccc',\n        cursor: 'pointer'\n      },\n      activeStyle: {\n        fill: '#e6e6e6'\n      }\n    };\n    return _this;\n  }\n  // mix 默认的配置和用户配置\n  ButtonAction.prototype.getButtonCfg = function () {\n    return deepMix(this.buttonCfg, this.cfg);\n  };\n  // 绘制 Button 和 文本\n  ButtonAction.prototype.drawButton = function () {\n    var config = this.getButtonCfg();\n    var group = this.context.view.foregroundGroup.addGroup({\n      name: config.name\n    });\n    // 添加文本\n    var textShape = group.addShape({\n      type: 'text',\n      name: 'button-text',\n      attrs: __assign({\n        text: config.text\n      }, config.textStyle)\n    });\n    var textBBox = textShape.getBBox();\n    var padding = parsePadding(config.padding);\n    // 添加背景按钮\n    var buttonShape = group.addShape({\n      type: 'rect',\n      name: 'button-rect',\n      attrs: __assign({\n        x: textBBox.x - padding[3],\n        y: textBBox.y - padding[0],\n        width: textBBox.width + padding[1] + padding[3],\n        height: textBBox.height + padding[0] + padding[2]\n      }, config.style)\n    });\n    buttonShape.toBack(); // 在后面\n    // active 效果内置\n    group.on('mouseenter', function () {\n      buttonShape.attr(config.activeStyle);\n    });\n    group.on('mouseleave', function () {\n      buttonShape.attr(config.style);\n    });\n    this.buttonGroup = group;\n  };\n  // 重置位置\n  ButtonAction.prototype.resetPosition = function () {\n    var view = this.context.view;\n    var coord = view.getCoordinate();\n    var point = coord.convert({\n      x: 1,\n      y: 1\n    }); // 后面直接改成左上角\n    var buttonGroup = this.buttonGroup;\n    var bbox = buttonGroup.getBBox();\n    var matrix = ext.transform(null, [['t', point.x - bbox.width - PADDING_RIGHT, point.y + bbox.height + PADDING_TOP]]);\n    buttonGroup.setMatrix(matrix);\n  };\n  /**\n   * 显示\n   */\n  ButtonAction.prototype.show = function () {\n    if (!this.buttonGroup) {\n      this.drawButton();\n    }\n    this.resetPosition();\n    this.buttonGroup.show();\n  };\n  /**\n   * 隐藏\n   */\n  ButtonAction.prototype.hide = function () {\n    if (this.buttonGroup) {\n      this.buttonGroup.hide();\n    }\n  };\n  /**\n   * 销毁\n   */\n  ButtonAction.prototype.destroy = function () {\n    var buttonGroup = this.buttonGroup;\n    if (buttonGroup) {\n      buttonGroup.remove();\n    }\n    _super.prototype.destroy.call(this);\n  };\n  return ButtonAction;\n}(Action);\nexport default ButtonAction;","map":null,"metadata":{},"sourceType":"module"}