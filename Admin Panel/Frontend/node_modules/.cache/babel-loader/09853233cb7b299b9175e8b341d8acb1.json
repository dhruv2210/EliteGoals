{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Action, registerComponentController, TooltipController, Util } from '@antv/g2';\nimport { isNil } from '@antv/util';\nvar RadarTooltipController = /** @class */function (_super) {\n  __extends(RadarTooltipController, _super);\n  function RadarTooltipController() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(RadarTooltipController.prototype, \"name\", {\n    get: function get() {\n      return 'radar-tooltip';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  RadarTooltipController.prototype.getTooltipItems = function (point) {\n    var _a = this.getTooltipCfg(),\n      shared = _a.shared,\n      cfgTitle = _a.title;\n    var hintItems = _super.prototype.getTooltipItems.call(this, point);\n    if (hintItems.length > 0) {\n      var geometry_1 = this.view.geometries[0];\n      var dataArray = geometry_1.dataArray;\n      var title_1 = hintItems[0].name;\n      var result_1 = [];\n      dataArray.forEach(function (mappingData) {\n        mappingData.forEach(function (d) {\n          var items = Util.getTooltipItems(d, geometry_1);\n          var item = items[0];\n          if (!shared && item && item.name === title_1) {\n            var displayTitle = isNil(cfgTitle) ? title_1 : cfgTitle;\n            result_1.push(__assign(__assign({}, item), {\n              name: item.title,\n              title: displayTitle\n            }));\n          } else if (shared && item) {\n            var displayTitle = isNil(cfgTitle) ? item.name || title_1 : cfgTitle;\n            result_1.push(__assign(__assign({}, item), {\n              name: item.title,\n              title: displayTitle\n            }));\n          }\n        });\n      });\n      return result_1;\n    }\n    return [];\n  };\n  return RadarTooltipController;\n}(TooltipController);\nexport { RadarTooltipController };\nregisterComponentController('radar-tooltip', RadarTooltipController);\n/**\n * 雷达图 tooltip 激活 action\n */\nvar RadarTooltipAction = /** @class */function (_super) {\n  __extends(RadarTooltipAction, _super);\n  function RadarTooltipAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  RadarTooltipAction.prototype.init = function () {\n    var view = this.context.view;\n    view.removeInteraction('tooltip');\n  };\n  RadarTooltipAction.prototype.show = function () {\n    var event = this.context.event;\n    var controller = this.getTooltipController();\n    controller.showTooltip({\n      x: event.x,\n      y: event.y\n    });\n  };\n  RadarTooltipAction.prototype.hide = function () {\n    var controller = this.getTooltipController();\n    controller.hideTooltip();\n  };\n  RadarTooltipAction.prototype.getTooltipController = function () {\n    var view = this.context.view;\n    return view.getController('radar-tooltip');\n  };\n  return RadarTooltipAction;\n}(Action);\nexport { RadarTooltipAction };","map":null,"metadata":{},"sourceType":"module"}