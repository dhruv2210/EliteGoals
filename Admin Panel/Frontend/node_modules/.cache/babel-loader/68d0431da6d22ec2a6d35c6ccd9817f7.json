{"ast":null,"code":"import { isFunction } from '@antv/util';\nvar MyWorker = /** @class */function () {\n  function MyWorker(url) {\n    var _this = this;\n    this.queue = [];\n    this.worker = new Worker(url);\n    this.worker.onmessage = function (e) {\n      var _a;\n      (_a = _this.queue.shift()) === null || _a === void 0 ? void 0 : _a.resolve(e);\n    };\n    this.worker.onmessageerror = function (e) {\n      var _a;\n      console.warn('[AntV G2] Web worker is not available');\n      (_a = _this.queue.shift()) === null || _a === void 0 ? void 0 : _a.reject(e);\n    };\n  }\n  MyWorker.prototype.post = function (params, onError) {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      _this.queue.push({\n        resolve: resolve,\n        reject: reject\n      });\n      try {\n        _this.worker.postMessage(params);\n      } catch (e) {\n        console.warn('[AntV G2] Web worker is not available');\n        isFunction(onError) && onError();\n      }\n    });\n  };\n  MyWorker.prototype.destroy = function () {\n    this.worker.terminate();\n  };\n  return MyWorker;\n}();\nexport function createWorker(f) {\n  if (typeof window === 'undefined') return;\n  var blob;\n  try {\n    blob = new Blob([f.toString()], {\n      type: 'application/javascript'\n    });\n  } catch (e) {\n    // @ts-ignore\n    blob = new window.BlobBuilder();\n    blob.append(f.toString());\n    blob = blob.getBlob();\n  }\n  return new MyWorker(URL.createObjectURL(blob));\n}","map":null,"metadata":{},"sourceType":"module"}