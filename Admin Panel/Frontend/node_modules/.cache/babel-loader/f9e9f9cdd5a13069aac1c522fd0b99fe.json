{"ast":null,"code":"import { __extends } from \"tslib\";\nimport EE from '@antv/event-emitter';\nimport { mix } from '../util/util';\nvar Base = /** @class */function (_super) {\n  __extends(Base, _super);\n  function Base(cfg) {\n    var _this = _super.call(this) || this;\n    /**\n     * 是否被销毁\n     * @type {boolean}\n     */\n    _this.destroyed = false;\n    var defaultCfg = _this.getDefaultCfg();\n    _this.cfg = mix(defaultCfg, cfg);\n    return _this;\n  }\n  /**\n   * @protected\n   * 默认的配置项\n   * @returns {object} 默认的配置项\n   */\n  Base.prototype.getDefaultCfg = function () {\n    return {};\n  };\n  // 实现接口的方法\n  Base.prototype.get = function (name) {\n    return this.cfg[name];\n  };\n  // 实现接口的方法\n  Base.prototype.set = function (name, value) {\n    this.cfg[name] = value;\n  };\n  // 实现接口的方法\n  Base.prototype.destroy = function () {\n    this.cfg = {\n      destroyed: true\n    };\n    this.off();\n    this.destroyed = true;\n  };\n  return Base;\n}(EE);\nexport default Base;","map":null,"metadata":{},"sourceType":"module"}