{"ast":null,"code":"import { __extends } from \"tslib\";\nimport Action from '../base';\nimport { distance } from '../util';\nvar DISTANCE = 4; // 移动的最小距离\n/**\n * @ignore\n * View 支持 Drag 的 Action\n */\nvar Drag = /** @class */function (_super) {\n  __extends(Drag, _super);\n  function Drag() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    // Action 开始，不等同于 拖拽开始，需要判定移动的范围\n    _this.starting = false;\n    // 拖拽开始\n    _this.dragStart = false;\n    return _this;\n  }\n  /**\n   * 开始\n   */\n  Drag.prototype.start = function () {\n    this.starting = true;\n    this.startPoint = this.context.getCurrentPoint();\n  };\n  /**\n   * 拖拽\n   */\n  Drag.prototype.drag = function () {\n    if (!this.startPoint) {\n      return;\n    }\n    var current = this.context.getCurrentPoint();\n    var view = this.context.view;\n    var event = this.context.event;\n    if (!this.dragStart) {\n      if (distance(current, this.startPoint) > DISTANCE) {\n        view.emit('dragstart', {\n          target: event.target,\n          x: event.x,\n          y: event.y\n        });\n        this.dragStart = true;\n      }\n    } else {\n      view.emit('drag', {\n        target: event.target,\n        x: event.x,\n        y: event.y\n      });\n    }\n  };\n  /**\n   * 结束\n   */\n  Drag.prototype.end = function () {\n    if (this.dragStart) {\n      var view = this.context.view;\n      var event_1 = this.context.event;\n      view.emit('dragend', {\n        target: event_1.target,\n        x: event_1.x,\n        y: event_1.y\n      });\n    }\n    this.starting = false;\n    this.dragStart = false;\n  };\n  return Drag;\n}(Action);\nexport default Drag;","map":null,"metadata":{},"sourceType":"module"}