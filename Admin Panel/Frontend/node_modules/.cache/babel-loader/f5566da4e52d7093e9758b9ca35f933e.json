{"ast":null,"code":"// 注册黑暗主题\nimport { registerTheme } from './core';\nimport { antvDark } from './theme/style-sheet/dark';\nimport { createThemeByStyleSheet } from './theme/util/create-by-style-sheet';\nregisterTheme('dark', createThemeByStyleSheet(antvDark));\n// 注册 G 渲染引擎\nimport * as CanvasEngine from '@antv/g-canvas';\nimport * as SVGEngine from '@antv/g-svg';\nimport { registerEngine } from './core';\nregisterEngine('canvas', CanvasEngine);\nregisterEngine('svg', SVGEngine);\n// 注册 G2 内置的 geometry\nimport { registerGeometry } from './core';\nimport Area from './geometry/area';\nimport Edge from './geometry/edge';\nimport Heatmap from './geometry/heatmap';\nimport Interval from './geometry/interval';\nimport Line from './geometry/line';\nimport Path from './geometry/path';\nimport Point from './geometry/point';\nimport Polygon from './geometry/polygon';\nimport Schema from './geometry/schema';\nimport Violin from './geometry/violin';\nregisterGeometry('Polygon', Polygon);\nregisterGeometry('Interval', Interval);\nregisterGeometry('Schema', Schema);\nregisterGeometry('Path', Path);\nregisterGeometry('Point', Point);\nregisterGeometry('Line', Line);\nregisterGeometry('Area', Area);\nregisterGeometry('Edge', Edge);\nregisterGeometry('Heatmap', Heatmap);\nregisterGeometry('Violin', Violin);\n// 引入所有内置的 shapes\nimport './geometry/shape/area/line';\nimport './geometry/shape/area/smooth';\nimport './geometry/shape/area/smooth-line';\nimport './geometry/shape/edge/arc';\nimport './geometry/shape/edge/smooth';\nimport './geometry/shape/edge/vhv';\nimport './geometry/shape/interval/funnel';\nimport './geometry/shape/interval/hollow-rect';\nimport './geometry/shape/interval/line';\nimport './geometry/shape/interval/pyramid';\nimport './geometry/shape/interval/tick';\nimport './geometry/shape/line/step';\nimport './geometry/shape/point/hollow';\nimport './geometry/shape/point/image';\nimport './geometry/shape/point/solid';\nimport './geometry/shape/schema/box';\nimport './geometry/shape/schema/candle';\nimport './geometry/shape/polygon/square';\nimport './geometry/shape/violin/smooth';\nimport './geometry/shape/violin/hollow';\n// 注册 Geometry 内置的 label\nimport { registerGeometryLabel } from './core';\nimport GeometryLabel from './geometry/label/base';\nimport IntervalLabel from './geometry/label/interval';\nimport PieLabel from './geometry/label/pie';\nimport PolarLabel from './geometry/label/polar';\nregisterGeometryLabel('base', GeometryLabel);\nregisterGeometryLabel('interval', IntervalLabel);\nregisterGeometryLabel('pie', PieLabel);\nregisterGeometryLabel('polar', PolarLabel);\n// 注册 Geometry label 内置的布局函数\nimport { registerGeometryLabelLayout } from './core';\nimport { distribute } from './geometry/label/layout/pie/distribute';\nimport { pieOuterLabelLayout } from './geometry/label/layout/pie/outer';\nimport { pieSpiderLabelLayout } from './geometry/label/layout/pie/spider';\nimport { limitInCanvas } from './geometry/label/layout/limit-in-canvas';\nimport { limitInShape } from './geometry/label/layout/limit-in-shape';\nimport { fixedOverlap, overlap } from './geometry/label/layout/overlap';\nimport { hideOverlap } from './geometry/label/layout/hide-overlap';\nimport { adjustColor } from './geometry/label/layout/adjust-color';\nimport { intervalAdjustPosition } from './geometry/label/layout/interval/adjust-position';\nimport { intervalHideOverlap } from './geometry/label/layout/interval/hide-overlap';\nimport { pointAdjustPosition } from './geometry/label/layout/point/adjust-position';\nimport { pathAdjustPosition } from './geometry/label/layout/path/adjust-position';\nimport { limitInPlot } from './geometry/label/layout/limit-in-plot';\nregisterGeometryLabelLayout('overlap', overlap);\nregisterGeometryLabelLayout('distribute', distribute);\nregisterGeometryLabelLayout('fixed-overlap', fixedOverlap);\nregisterGeometryLabelLayout('hide-overlap', hideOverlap);\nregisterGeometryLabelLayout('limit-in-shape', limitInShape);\nregisterGeometryLabelLayout('limit-in-canvas', limitInCanvas);\nregisterGeometryLabelLayout('limit-in-plot', limitInPlot);\nregisterGeometryLabelLayout('pie-outer', pieOuterLabelLayout);\nregisterGeometryLabelLayout('adjust-color', adjustColor);\nregisterGeometryLabelLayout('interval-adjust-position', intervalAdjustPosition);\nregisterGeometryLabelLayout('interval-hide-overlap', intervalHideOverlap);\nregisterGeometryLabelLayout('point-adjust-position', pointAdjustPosition);\nregisterGeometryLabelLayout('pie-spider', pieSpiderLabelLayout);\nregisterGeometryLabelLayout('path-adjust-position', pathAdjustPosition);\n// 注册需要的动画执行函数\nimport { fadeIn, fadeOut } from './animate/animation/fade';\nimport { growInX, growInXY, growInY } from './animate/animation/grow-in';\nimport { pathIn } from './animate/animation/path-in';\nimport { positionUpdate } from './animate/animation/position-update';\nimport { scaleInX, scaleInY } from './animate/animation/scale-in';\nimport { sectorPathUpdate } from './animate/animation/sector-path-update';\nimport { waveIn } from './animate/animation/wave-in';\nimport { zoomIn, zoomOut } from './animate/animation/zoom';\nimport { registerAnimation } from './core';\nregisterAnimation('fade-in', fadeIn);\nregisterAnimation('fade-out', fadeOut);\nregisterAnimation('grow-in-x', growInX);\nregisterAnimation('grow-in-xy', growInXY);\nregisterAnimation('grow-in-y', growInY);\nregisterAnimation('scale-in-x', scaleInX);\nregisterAnimation('scale-in-y', scaleInY);\nregisterAnimation('wave-in', waveIn);\nregisterAnimation('zoom-in', zoomIn);\nregisterAnimation('zoom-out', zoomOut);\nregisterAnimation('position-update', positionUpdate);\nregisterAnimation('sector-path-update', sectorPathUpdate);\nregisterAnimation('path-in', pathIn);\n// 注册内置的 Facet\nimport { registerFacet } from './core';\nimport Circle from './facet/circle';\nimport List from './facet/list';\nimport Matrix from './facet/matrix';\nimport Mirror from './facet/mirror';\nimport Rect from './facet/rect';\nimport Tree from './facet/tree';\nregisterFacet('rect', Rect);\nregisterFacet('mirror', Mirror);\nregisterFacet('list', List);\nregisterFacet('matrix', Matrix);\nregisterFacet('circle', Circle);\nregisterFacet('tree', Tree);\n// 注册内置的 Component\nimport { registerComponentController } from './core';\nimport Annotation from './chart/controller/annotation';\nimport Axis from './chart/controller/axis';\nimport Legend from './chart/controller/legend';\nimport Slider from './chart/controller/slider';\nimport Tooltip from './chart/controller/tooltip';\nimport Scrollbar from './chart/controller/scrollbar';\n// register build-in components\nregisterComponentController('axis', Axis);\nregisterComponentController('legend', Legend);\nregisterComponentController('tooltip', Tooltip);\nregisterComponentController('annotation', Annotation);\nregisterComponentController('slider', Slider);\nregisterComponentController('scrollbar', Scrollbar);\n// 注册 Interaction Action\nimport { registerAction } from './core';\nimport ActiveRegion from './interaction/action/active-region';\nimport SiblingTooltip from './interaction/action/component/tooltip/sibling';\nimport TooltipAction from './interaction/action/component/tooltip/geometry';\nimport EllipsisTextAction from './interaction/action/component/tooltip/ellipsis-text';\nimport ElementActive from './interaction/action/element/active';\nimport ElementLinkByColor from './interaction/action/element/link-by-color';\nimport ElementRangeActive from './interaction/action/element/range-active';\nimport ElementSingleActive from './interaction/action/element/single-active';\nimport ElementHighlight from './interaction/action/element/highlight';\nimport ElementHighlightByColor from './interaction/action/element/highlight-by-color';\nimport ElementHighlightByX from './interaction/action/element/highlight-by-x';\nimport ElementRangeHighlight, { ELEMENT_RANGE_HIGHLIGHT_EVENTS } from './interaction/action/element/range-highlight';\nimport ElementSingleHighlight from './interaction/action/element/single-highlight';\nimport ElementRangeSelected from './interaction/action/element/range-selected';\nimport ElementSelected from './interaction/action/element/selected';\nimport ElementSingleSelected from './interaction/action/element/single-selected';\nimport ListActive from './interaction/action/component/list-active';\nimport ListHighlight from './interaction/action/component/list-highlight';\nimport ListSelected from './interaction/action/component/list-selected';\nimport ListUnchecked from './interaction/action/component/list-unchecked';\nimport ListChecked from './interaction/action/component/list-checked';\nimport ListFocus from './interaction/action/component/list-focus';\nimport ListRadio from './interaction/action/component/list-radio';\nimport CircleMask from './interaction/action/mask/circle';\nimport DimMask from './interaction/action/mask/dim-rect';\nimport PathMask from './interaction/action/mask/path';\nimport RectMask from './interaction/action/mask/rect';\nimport SmoothPathMask from './interaction/action/mask/smooth-path';\nimport CursorAction from './interaction/action/cursor';\nimport DataFilter from './interaction/action/data/filter';\nimport DataRangeFilter, { BRUSH_FILTER_EVENTS } from './interaction/action/data/range-filter';\nimport SiblingFilter from './interaction/action/data/sibling-filter';\nimport ElementFilter from './interaction/action/element/filter';\nimport ElementSiblingFilter from './interaction/action/element/sibling-filter';\nimport ButtonAction from './interaction/action/view/button';\nimport ViewDrag from './interaction/action/view/drag';\nimport ViewMove from './interaction/action/view/move';\nimport ScaleTranslate from './interaction/action/view/scale-translate';\nimport ScaleZoom from './interaction/action/view/scale-zoom';\nimport MousewheelScroll from './interaction/action/view/mousewheel-scroll';\nimport AxisDescription from './interaction/action/component/axis/axis-description';\nregisterAction('tooltip', TooltipAction);\nregisterAction('sibling-tooltip', SiblingTooltip);\nregisterAction('ellipsis-text', EllipsisTextAction);\nregisterAction('element-active', ElementActive);\nregisterAction('element-single-active', ElementSingleActive);\nregisterAction('element-range-active', ElementRangeActive);\nregisterAction('element-highlight', ElementHighlight);\nregisterAction('element-highlight-by-x', ElementHighlightByX);\nregisterAction('element-highlight-by-color', ElementHighlightByColor);\nregisterAction('element-single-highlight', ElementSingleHighlight);\nregisterAction('element-range-highlight', ElementRangeHighlight);\nregisterAction('element-sibling-highlight', ElementRangeHighlight, {\n  effectSiblings: true,\n  effectByRecord: true\n});\nregisterAction('element-selected', ElementSelected);\nregisterAction('element-single-selected', ElementSingleSelected);\nregisterAction('element-range-selected', ElementRangeSelected);\nregisterAction('element-link-by-color', ElementLinkByColor);\nregisterAction('active-region', ActiveRegion);\nregisterAction('list-active', ListActive);\nregisterAction('list-selected', ListSelected);\nregisterAction('list-highlight', ListHighlight);\nregisterAction('list-unchecked', ListUnchecked);\nregisterAction('list-checked', ListChecked);\nregisterAction('list-focus', ListFocus);\nregisterAction('list-radio', ListRadio);\nregisterAction('legend-item-highlight', ListHighlight, {\n  componentNames: ['legend']\n});\nregisterAction('axis-label-highlight', ListHighlight, {\n  componentNames: ['axis']\n});\nregisterAction('axis-description', AxisDescription);\nregisterAction('rect-mask', RectMask);\nregisterAction('x-rect-mask', DimMask, {\n  dim: 'x'\n});\nregisterAction('y-rect-mask', DimMask, {\n  dim: 'y'\n});\nregisterAction('circle-mask', CircleMask);\nregisterAction('path-mask', PathMask);\nregisterAction('smooth-path-mask', SmoothPathMask);\nregisterAction('cursor', CursorAction);\nregisterAction('data-filter', DataFilter);\nregisterAction('brush', DataRangeFilter);\nregisterAction('brush-x', DataRangeFilter, {\n  dims: ['x']\n});\nregisterAction('brush-y', DataRangeFilter, {\n  dims: ['y']\n});\nregisterAction('sibling-filter', SiblingFilter);\nregisterAction('sibling-x-filter', SiblingFilter);\nregisterAction('sibling-y-filter', SiblingFilter);\nregisterAction('element-filter', ElementFilter);\nregisterAction('element-sibling-filter', ElementSiblingFilter);\nregisterAction('element-sibling-filter-record', ElementSiblingFilter, {\n  byRecord: true\n});\nregisterAction('view-drag', ViewDrag);\nregisterAction('view-move', ViewMove);\nregisterAction('scale-translate', ScaleTranslate);\nregisterAction('scale-zoom', ScaleZoom);\nregisterAction('reset-button', ButtonAction, {\n  name: 'reset-button',\n  text: 'reset'\n});\nregisterAction('mousewheel-scroll', MousewheelScroll);\n// 注册默认的 Interaction 交互行为\nimport { registerInteraction } from './core';\nfunction isPointInView(context) {\n  return context.isInPlot();\n}\n// 注册 tooltip 的 interaction\nregisterInteraction('tooltip', {\n  start: [{\n    trigger: 'plot:mousemove',\n    action: 'tooltip:show',\n    throttle: {\n      wait: 50,\n      leading: true,\n      trailing: false\n    }\n  }, {\n    trigger: 'plot:touchmove',\n    action: 'tooltip:show',\n    throttle: {\n      wait: 50,\n      leading: true,\n      trailing: false\n    }\n  }],\n  end: [{\n    trigger: 'plot:mouseleave',\n    action: 'tooltip:hide'\n  }, {\n    trigger: 'plot:leave',\n    action: 'tooltip:hide'\n  }, {\n    trigger: 'plot:touchend',\n    action: 'tooltip:hide'\n  }]\n});\nregisterInteraction('ellipsis-text', {\n  start: [{\n    trigger: 'legend-item-name:mousemove',\n    action: 'ellipsis-text:show',\n    throttle: {\n      wait: 50,\n      leading: true,\n      trailing: false\n    }\n  }, {\n    trigger: 'legend-item-name:touchstart',\n    action: 'ellipsis-text:show',\n    throttle: {\n      wait: 50,\n      leading: true,\n      trailing: false\n    }\n  }, {\n    trigger: 'axis-label:mousemove',\n    action: 'ellipsis-text:show',\n    throttle: {\n      wait: 50,\n      leading: true,\n      trailing: false\n    }\n  }, {\n    trigger: 'axis-label:touchstart',\n    action: 'ellipsis-text:show',\n    throttle: {\n      wait: 50,\n      leading: true,\n      trailing: false\n    }\n  }],\n  end: [{\n    trigger: 'legend-item-name:mouseleave',\n    action: 'ellipsis-text:hide'\n  }, {\n    trigger: 'legend-item-name:touchend',\n    action: 'ellipsis-text:hide'\n  }, {\n    trigger: 'axis-label:mouseleave',\n    action: 'ellipsis-text:hide'\n  }, {\n    trigger: 'axis-label:mouseout',\n    action: 'ellipsis-text:hide'\n  }, {\n    trigger: 'axis-label:touchend',\n    action: 'ellipsis-text:hide'\n  }]\n});\n// 移动到 element 上 active\nregisterInteraction('element-active', {\n  start: [{\n    trigger: 'element:mouseenter',\n    action: 'element-active:active'\n  }],\n  end: [{\n    trigger: 'element:mouseleave',\n    action: 'element-active:reset'\n  }]\n});\n// 点击选中，允许取消\nregisterInteraction('element-selected', {\n  start: [{\n    trigger: 'element:click',\n    action: 'element-selected:toggle'\n  }]\n});\n// hover highlight，允许取消\nregisterInteraction('element-highlight', {\n  start: [{\n    trigger: 'element:mouseenter',\n    action: 'element-highlight:highlight'\n  }],\n  end: [{\n    trigger: 'element:mouseleave',\n    action: 'element-highlight:reset'\n  }]\n});\n// hover highlight by x，允许取消\nregisterInteraction('element-highlight-by-x', {\n  start: [{\n    trigger: 'element:mouseenter',\n    action: 'element-highlight-by-x:highlight'\n  }],\n  end: [{\n    trigger: 'element:mouseleave',\n    action: 'element-highlight-by-x:reset'\n  }]\n});\n// hover highlight by y，允许取消\nregisterInteraction('element-highlight-by-color', {\n  start: [{\n    trigger: 'element:mouseenter',\n    action: 'element-highlight-by-color:highlight'\n  }],\n  end: [{\n    trigger: 'element:mouseleave',\n    action: 'element-highlight-by-color:reset'\n  }]\n});\n// legend hover，element active\nregisterInteraction('legend-active', {\n  start: [{\n    trigger: 'legend-item:mouseenter',\n    action: ['list-active:active', 'element-active:active']\n  }],\n  end: [{\n    trigger: 'legend-item:mouseleave',\n    action: ['list-active:reset', 'element-active:reset']\n  }]\n});\n// legend hover，element active\nregisterInteraction('legend-highlight', {\n  start: [{\n    trigger: 'legend-item:mouseenter',\n    action: ['legend-item-highlight:highlight', 'element-highlight:highlight']\n  }],\n  end: [{\n    trigger: 'legend-item:mouseleave',\n    action: ['legend-item-highlight:reset', 'element-highlight:reset']\n  }]\n});\n// legend hover，element active\nregisterInteraction('axis-label-highlight', {\n  start: [{\n    trigger: 'axis-label:mouseenter',\n    action: ['axis-label-highlight:highlight', 'element-highlight:highlight']\n  }],\n  end: [{\n    trigger: 'axis-label:mouseleave',\n    action: ['axis-label-highlight:reset', 'element-highlight:reset']\n  }]\n});\n// legend hover，element active\nregisterInteraction('element-list-highlight', {\n  start: [{\n    trigger: 'element:mouseenter',\n    action: ['list-highlight:highlight', 'element-highlight:highlight']\n  }],\n  end: [{\n    trigger: 'element:mouseleave',\n    action: ['list-highlight:reset', 'element-highlight:reset']\n  }]\n});\n// 框选\nregisterInteraction('element-range-highlight', {\n  showEnable: [{\n    trigger: 'plot:mouseenter',\n    action: 'cursor:crosshair'\n  }, {\n    trigger: 'mask:mouseenter',\n    action: 'cursor:move'\n  }, {\n    trigger: 'plot:mouseleave',\n    action: 'cursor:default'\n  }, {\n    trigger: 'mask:mouseleave',\n    action: 'cursor:crosshair'\n  }],\n  start: [{\n    trigger: 'plot:mousedown',\n    isEnable: function isEnable(context) {\n      // 不要点击在 mask 上重新开始\n      return !context.isInShape('mask');\n    },\n    action: ['rect-mask:start', 'rect-mask:show']\n  }, {\n    trigger: 'mask:dragstart',\n    action: ['rect-mask:moveStart']\n  }],\n  processing: [{\n    trigger: 'plot:mousemove',\n    action: ['rect-mask:resize']\n  }, {\n    trigger: 'mask:drag',\n    action: ['rect-mask:move']\n  }, {\n    trigger: 'mask:change',\n    action: ['element-range-highlight:highlight']\n  }],\n  end: [{\n    trigger: 'plot:mouseup',\n    action: ['rect-mask:end']\n  }, {\n    trigger: 'mask:dragend',\n    action: ['rect-mask:moveEnd']\n  }, {\n    trigger: 'document:mouseup',\n    isEnable: function isEnable(context) {\n      return !context.isInPlot();\n    },\n    action: ['element-range-highlight:clear', 'rect-mask:end', 'rect-mask:hide']\n  }],\n  rollback: [{\n    trigger: 'dblclick',\n    action: ['element-range-highlight:clear', 'rect-mask:hide']\n  }]\n});\nregisterInteraction('brush', {\n  showEnable: [{\n    trigger: 'plot:mouseenter',\n    action: 'cursor:crosshair'\n  }, {\n    trigger: 'plot:mouseleave',\n    action: 'cursor:default'\n  }],\n  start: [{\n    trigger: 'mousedown',\n    isEnable: isPointInView,\n    action: ['brush:start', 'rect-mask:start', 'rect-mask:show']\n  }],\n  processing: [{\n    trigger: 'mousemove',\n    isEnable: isPointInView,\n    action: ['rect-mask:resize']\n  }],\n  end: [{\n    trigger: 'mouseup',\n    isEnable: isPointInView,\n    action: ['brush:filter', 'brush:end', 'rect-mask:end', 'rect-mask:hide', 'reset-button:show']\n  }],\n  rollback: [{\n    trigger: 'reset-button:click',\n    action: ['brush:reset', 'reset-button:hide', 'cursor:crosshair']\n  }]\n});\nregisterInteraction('brush-visible', {\n  showEnable: [{\n    trigger: 'plot:mouseenter',\n    action: 'cursor:crosshair'\n  }, {\n    trigger: 'plot:mouseleave',\n    action: 'cursor:default'\n  }],\n  start: [{\n    trigger: 'plot:mousedown',\n    action: ['rect-mask:start', 'rect-mask:show']\n  }],\n  processing: [{\n    trigger: 'plot:mousemove',\n    action: ['rect-mask:resize']\n  }, {\n    trigger: 'mask:change',\n    action: ['element-range-highlight:highlight']\n  }],\n  end: [{\n    trigger: 'plot:mouseup',\n    action: ['rect-mask:end', 'rect-mask:hide', 'element-filter:filter', 'element-range-highlight:clear']\n  }],\n  rollback: [{\n    trigger: 'dblclick',\n    action: ['element-filter:clear']\n  }]\n});\nregisterInteraction('brush-x', {\n  showEnable: [{\n    trigger: 'plot:mouseenter',\n    action: 'cursor:crosshair'\n  }, {\n    trigger: 'plot:mouseleave',\n    action: 'cursor:default'\n  }],\n  start: [{\n    trigger: 'mousedown',\n    isEnable: isPointInView,\n    action: ['brush-x:start', 'x-rect-mask:start', 'x-rect-mask:show']\n  }],\n  processing: [{\n    trigger: 'mousemove',\n    isEnable: isPointInView,\n    action: ['x-rect-mask:resize']\n  }],\n  end: [{\n    trigger: 'mouseup',\n    isEnable: isPointInView,\n    action: ['brush-x:filter', 'brush-x:end', 'x-rect-mask:end', 'x-rect-mask:hide']\n  }],\n  rollback: [{\n    trigger: 'dblclick',\n    action: ['brush-x:reset']\n  }]\n});\nregisterInteraction('element-path-highlight', {\n  showEnable: [{\n    trigger: 'plot:mouseenter',\n    action: 'cursor:crosshair'\n  }, {\n    trigger: 'plot:mouseleave',\n    action: 'cursor:default'\n  }],\n  start: [{\n    trigger: 'mousedown',\n    isEnable: isPointInView,\n    action: 'path-mask:start'\n  }, {\n    trigger: 'mousedown',\n    isEnable: isPointInView,\n    action: 'path-mask:show'\n  }],\n  processing: [{\n    trigger: 'mousemove',\n    action: 'path-mask:addPoint'\n  }],\n  end: [{\n    trigger: 'mouseup',\n    action: 'path-mask:end'\n  }],\n  rollback: [{\n    trigger: 'dblclick',\n    action: 'path-mask:hide'\n  }]\n});\n// 点击选中，允许取消\nregisterInteraction('element-single-selected', {\n  start: [{\n    trigger: 'element:click',\n    action: 'element-single-selected:toggle'\n  }]\n});\n// 筛选数据\nregisterInteraction('legend-filter', {\n  showEnable: [{\n    trigger: 'legend-item:mouseenter',\n    action: ['cursor:pointer', 'list-radio:show']\n  }, {\n    trigger: 'legend-item:mouseleave',\n    action: ['cursor:default', 'list-radio:hide']\n  }],\n  start: [{\n    trigger: 'legend-item:click',\n    isEnable: function isEnable(context) {\n      return !context.isInShape('legend-item-radio');\n    },\n    action: ['legend-item-highlight:reset', 'element-highlight:reset', 'list-unchecked:toggle', 'data-filter:filter', 'list-radio:show']\n  },\n  //  正反选数据: 只有当 radio === truthy 的时候才会有 legend-item-radio 这个元素\n  {\n    trigger: 'legend-item-radio:mouseenter',\n    action: ['list-radio:showTip']\n  }, {\n    trigger: 'legend-item-radio:mouseleave',\n    action: ['list-radio:hideTip']\n  }, {\n    trigger: 'legend-item-radio:click',\n    action: ['list-focus:toggle', 'data-filter:filter', 'list-radio:show']\n  }]\n});\n// 筛选数据\nregisterInteraction('continuous-filter', {\n  start: [{\n    trigger: 'legend:valuechanged',\n    action: 'data-filter:filter'\n  }]\n});\n// 筛选数据\nregisterInteraction('continuous-visible-filter', {\n  start: [{\n    trigger: 'legend:valuechanged',\n    action: 'element-filter:filter'\n  }]\n});\n// 筛选图形\nregisterInteraction('legend-visible-filter', {\n  showEnable: [{\n    trigger: 'legend-item:mouseenter',\n    action: 'cursor:pointer'\n  }, {\n    trigger: 'legend-item:mouseleave',\n    action: 'cursor:default'\n  }],\n  start: [{\n    trigger: 'legend-item:click',\n    action: ['legend-item-highlight:reset', 'element-highlight:reset', 'list-unchecked:toggle', 'element-filter:filter']\n  }]\n});\n// 出现背景框\nregisterInteraction('active-region', {\n  start: [{\n    trigger: 'plot:mousemove',\n    action: 'active-region:show'\n  }],\n  end: [{\n    trigger: 'plot:mouseleave',\n    action: 'active-region:hide'\n  }]\n});\n// 显示坐标轴标题详情信息\nregisterInteraction('axis-description', {\n  start: [{\n    trigger: 'axis-description:mousemove',\n    action: 'axis-description:show'\n  }],\n  end: [{\n    trigger: 'axis-description:mouseleave',\n    action: 'axis-description:hide'\n  }]\n});\nfunction isWheelDown(event) {\n  event.gEvent.preventDefault();\n  return event.gEvent.originalEvent.deltaY > 0;\n}\nregisterInteraction('view-zoom', {\n  start: [{\n    trigger: 'plot:mousewheel',\n    isEnable: function isEnable(context) {\n      return isWheelDown(context.event);\n    },\n    action: 'scale-zoom:zoomOut',\n    throttle: {\n      wait: 100,\n      leading: true,\n      trailing: false\n    }\n  }, {\n    trigger: 'plot:mousewheel',\n    isEnable: function isEnable(context) {\n      return !isWheelDown(context.event);\n    },\n    action: 'scale-zoom:zoomIn',\n    throttle: {\n      wait: 100,\n      leading: true,\n      trailing: false\n    }\n  }]\n});\nregisterInteraction('sibling-tooltip', {\n  start: [{\n    trigger: 'plot:mousemove',\n    action: 'sibling-tooltip:show'\n  }],\n  end: [{\n    trigger: 'plot:mouseleave',\n    action: 'sibling-tooltip:hide'\n  }]\n});\nregisterInteraction('plot-mousewheel-scroll', {\n  start: [{\n    trigger: 'plot:mousewheel',\n    action: 'mousewheel-scroll:scroll'\n  }]\n});\n// 暴露一些常量\nexport { VIEW_LIFE_CIRCLE } from './constant';\n/** brush 范围筛选的一些事件常量 */\nexport { BRUSH_FILTER_EVENTS, ELEMENT_RANGE_HIGHLIGHT_EVENTS };\nexport * from './core';","map":null,"metadata":{},"sourceType":"module"}