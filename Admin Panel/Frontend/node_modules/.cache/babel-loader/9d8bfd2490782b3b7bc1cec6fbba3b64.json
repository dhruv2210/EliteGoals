{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken, PresetColors } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nvar antStatusProcessing = new Keyframes('antStatusProcessing', {\n  '0%': {\n    transform: 'scale(0.8)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(2.4)',\n    opacity: 0\n  }\n});\nvar antZoomBadgeIn = new Keyframes('antZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  }\n});\nvar antZoomBadgeOut = new Keyframes('antZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  },\n  '100%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  }\n});\nvar antNoWrapperZoomBadgeIn = new Keyframes('antNoWrapperZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nvar antNoWrapperZoomBadgeOut = new Keyframes('antNoWrapperZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '100%': {\n    transform: 'scale(0)',\n    opacity: 0\n  }\n});\nvar antBadgeLoadingCircle = new Keyframes('antBadgeLoadingCircle', {\n  '0%': {\n    transformOrigin: '50%'\n  },\n  '100%': {\n    transform: 'translate(50%, -50%) rotate(360deg)',\n    transformOrigin: '50%'\n  }\n});\nvar genSharedBadgeStyle = function genSharedBadgeStyle(token) {\n  var _extends4, _ref2, _ref4, _extends6, _extends7, _extends8, _ref7;\n  var componentCls = token.componentCls,\n    iconCls = token.iconCls,\n    antCls = token.antCls,\n    badgeFontHeight = token.badgeFontHeight,\n    badgeShadowSize = token.badgeShadowSize,\n    badgeHeightSm = token.badgeHeightSm,\n    motionDurationSlow = token.motionDurationSlow,\n    badgeStatusSize = token.badgeStatusSize,\n    marginXS = token.marginXS,\n    badgeRibbonOffset = token.badgeRibbonOffset;\n  var numberPrefixCls = antCls + \"-scroll-number\";\n  var ribbonPrefixCls = antCls + \"-ribbon\";\n  var ribbonWrapperPrefixCls = antCls + \"-ribbon-wrapper\";\n  var statusPreset = PresetColors.reduce(function (prev, colorKey) {\n    var darkColor = token[colorKey + \"-6\"];\n    return _extends(_extends({}, prev), _defineProperty({}, componentCls + \"-status-\" + colorKey, {\n      background: darkColor\n    }));\n  }, {});\n  var statusRibbonPreset = PresetColors.reduce(function (prev, colorKey) {\n    var darkColor = token[colorKey + \"-6\"];\n    return _extends(_extends({}, prev), _defineProperty({}, \"&\" + ribbonPrefixCls + \"-color-\" + colorKey, {\n      background: darkColor,\n      color: darkColor\n    }));\n  }, {});\n  return _ref7 = {}, _defineProperty(_ref7, componentCls, _extends(_extends({}, resetComponent(token)), (_extends6 = {\n    position: 'relative',\n    display: 'inline-block',\n    lineHeight: 1\n  }, _defineProperty(_extends6, componentCls + \"-count\", {\n    zIndex: token.badgeZIndex,\n    minWidth: token.badgeHeight,\n    height: token.badgeHeight,\n    color: token.badgeTextColor,\n    fontWeight: token.badgeFontWeight,\n    fontSize: token.badgeFontSize,\n    lineHeight: token.badgeHeight + \"px\",\n    whiteSpace: 'nowrap',\n    textAlign: 'center',\n    background: token.badgeColor,\n    borderRadius: token.badgeHeight / 2,\n    boxShadow: \"0 0 0 \" + badgeShadowSize + \"px \" + token.badgeShadowColor,\n    transition: \"background \" + token.motionDurationMid,\n    a: {\n      color: token.badgeTextColor\n    },\n    'a:hover': {\n      color: token.badgeTextColor\n    },\n    'a:hover &': {\n      background: token.badgeColorHover\n    }\n  }), _defineProperty(_extends6, componentCls + \"-count-sm\", {\n    minWidth: badgeHeightSm,\n    height: badgeHeightSm,\n    fontSize: token.badgeFontSizeSm,\n    lineHeight: badgeHeightSm + \"px\",\n    borderRadius: badgeHeightSm / 2\n  }), _defineProperty(_extends6, componentCls + \"-multiple-words\", {\n    padding: \"0 \" + token.paddingXS + \"px\"\n  }), _defineProperty(_extends6, componentCls + \"-dot\", {\n    zIndex: token.badgeZIndex,\n    width: token.badgeDotSize,\n    minWidth: token.badgeDotSize,\n    height: token.badgeDotSize,\n    background: token.badgeColor,\n    borderRadius: '100%',\n    boxShadow: \"0 0 0 \" + badgeShadowSize + \"px \" + token.badgeShadowColor\n  }), _defineProperty(_extends6, componentCls + \"-dot\" + numberPrefixCls, {\n    transition: \"background \" + motionDurationSlow\n  }), _defineProperty(_extends6, componentCls + \"-count, \" + componentCls + \"-dot, \" + numberPrefixCls + \"-custom-component\", _defineProperty({\n    position: 'absolute',\n    top: 0,\n    insetInlineEnd: 0,\n    transform: 'translate(50%, -50%)',\n    transformOrigin: '100% 0%'\n  }, iconCls + \"-spin\", {\n    animationName: antBadgeLoadingCircle,\n    animationDuration: token.motionDurationMid,\n    animationIterationCount: 'infinite',\n    animationTimingFunction: 'linear'\n  })), _defineProperty(_extends6, \"&\" + componentCls + \"-status\", _extends(_extends((_extends4 = {\n    lineHeight: 'inherit',\n    verticalAlign: 'baseline'\n  }, _defineProperty(_extends4, componentCls + \"-status-dot\", {\n    position: 'relative',\n    top: -1,\n    display: 'inline-block',\n    width: badgeStatusSize,\n    height: badgeStatusSize,\n    verticalAlign: 'middle',\n    borderRadius: '50%'\n  }), _defineProperty(_extends4, componentCls + \"-status-success\", {\n    backgroundColor: token.colorSuccess\n  }), _defineProperty(_extends4, componentCls + \"-status-processing\", {\n    position: 'relative',\n    color: token.colorPrimary,\n    backgroundColor: token.colorPrimary,\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      insetInlineStart: 0,\n      width: '100%',\n      height: '100%',\n      borderWidth: badgeShadowSize,\n      borderStyle: 'solid',\n      borderColor: 'inherit',\n      borderRadius: '50%',\n      animationName: antStatusProcessing,\n      animationDuration: token.badgeProcessingDuration,\n      animationIterationCount: 'infinite',\n      animationTimingFunction: 'ease-in-out',\n      content: '\"\"'\n    }\n  }), _defineProperty(_extends4, componentCls + \"-status-default\", {\n    backgroundColor: token.colorTextPlaceholder\n  }), _defineProperty(_extends4, componentCls + \"-status-error\", {\n    backgroundColor: token.colorError\n  }), _defineProperty(_extends4, componentCls + \"-status-warning\", {\n    backgroundColor: token.colorWarning\n  }), _extends4), statusPreset), _defineProperty({}, componentCls + \"-status-text\", {\n    marginInlineStart: marginXS,\n    color: token.colorText,\n    fontSize: token.fontSize\n  }))), _defineProperty(_extends6, componentCls + \"-zoom-appear, \" + componentCls + \"-zoom-enter\", {\n    animationName: antZoomBadgeIn,\n    animationDuration: token.motionDurationSlow,\n    animationTimingFunction: token.motionEaseOutBack,\n    animationFillMode: 'both'\n  }), _defineProperty(_extends6, componentCls + \"-zoom-leave\", {\n    animationName: antZoomBadgeOut,\n    animationDuration: token.motionDurationSlow,\n    animationTimingFunction: token.motionEaseOutBack,\n    animationFillMode: 'both'\n  }), _defineProperty(_extends6, \"&\" + componentCls + \"-not-a-wrapper\", (_ref2 = {}, _defineProperty(_ref2, componentCls + \"-zoom-appear, \" + componentCls + \"-zoom-enter\", {\n    animationName: antNoWrapperZoomBadgeIn,\n    animationDuration: token.motionDurationSlow,\n    animationTimingFunction: token.motionEaseOutBack\n  }), _defineProperty(_ref2, componentCls + \"-zoom-leave\", {\n    animationName: antNoWrapperZoomBadgeOut,\n    animationDuration: token.motionDurationSlow,\n    animationTimingFunction: token.motionEaseOutBack\n  }), _defineProperty(_ref2, \"&:not(\" + componentCls + \"-status)\", {\n    verticalAlign: 'middle'\n  }), _defineProperty(_ref2, numberPrefixCls + \"-custom-component, \" + componentCls + \"-count\", {\n    transform: 'none'\n  }), _defineProperty(_ref2, numberPrefixCls + \"-custom-component, \" + numberPrefixCls, {\n    position: 'relative',\n    top: 'auto',\n    display: 'block',\n    transformOrigin: '50% 50%'\n  }), _ref2)), _defineProperty(_extends6, \"\" + numberPrefixCls, (_ref4 = {\n    overflow: 'hidden',\n    direction: 'ltr'\n  }, _defineProperty(_ref4, numberPrefixCls + \"-only\", _defineProperty({\n    position: 'relative',\n    display: 'inline-block',\n    height: token.badgeHeight,\n    transition: \"all \" + token.motionDurationSlow + \" \" + token.motionEaseOutBack,\n    WebkitTransformStyle: 'preserve-3d',\n    WebkitBackfaceVisibility: 'hidden'\n  }, \"> p\" + numberPrefixCls + \"-only-unit\", {\n    height: token.badgeHeight,\n    margin: 0,\n    WebkitTransformStyle: 'preserve-3d',\n    WebkitBackfaceVisibility: 'hidden'\n  })), _defineProperty(_ref4, numberPrefixCls + \"-symbol\", {\n    verticalAlign: 'top'\n  }), _ref4)), _defineProperty(_extends6, '&-rtl', _defineProperty({\n    direction: 'rtl'\n  }, componentCls + \"-count, \" + componentCls + \"-dot, \" + numberPrefixCls + \"-custom-component\", {\n    insetInlineEnd: 'auto'\n  })), _extends6))), _defineProperty(_ref7, \"\" + ribbonWrapperPrefixCls, {\n    position: 'relative'\n  }), _defineProperty(_ref7, \"\" + ribbonPrefixCls, _extends(_extends(_extends(_extends({}, resetComponent(token)), (_extends7 = {\n    position: 'absolute',\n    top: marginXS,\n    height: badgeFontHeight,\n    padding: \"0 \" + token.paddingXS + \"px\",\n    color: token.colorPrimary,\n    lineHeight: badgeFontHeight + \"px\",\n    whiteSpace: 'nowrap',\n    backgroundColor: token.colorPrimary,\n    borderRadius: token.borderRadiusSM\n  }, _defineProperty(_extends7, ribbonPrefixCls + \"-text\", {\n    color: token.colorTextLightSolid\n  }), _defineProperty(_extends7, ribbonPrefixCls + \"-corner\", {\n    position: 'absolute',\n    top: '100%',\n    width: badgeRibbonOffset,\n    height: badgeRibbonOffset,\n    color: 'currentcolor',\n    border: badgeRibbonOffset / 2 + \"px solid\",\n    transform: token.badgeRibbonCornerTransform,\n    transformOrigin: 'top',\n    filter: token.badgeRibbonCornerFilter\n  }), _extends7)), statusRibbonPreset), (_extends8 = {}, _defineProperty(_extends8, \"&\" + ribbonPrefixCls + \"-placement-end\", _defineProperty({\n    insetInlineEnd: -badgeRibbonOffset,\n    borderEndEndRadius: 0\n  }, ribbonPrefixCls + \"-corner\", {\n    insetInlineEnd: 0,\n    borderInlineEndColor: 'transparent',\n    borderBlockEndColor: 'transparent'\n  })), _defineProperty(_extends8, \"&\" + ribbonPrefixCls + \"-placement-start\", _defineProperty({\n    insetInlineStart: -badgeRibbonOffset,\n    borderEndStartRadius: 0\n  }, ribbonPrefixCls + \"-corner\", {\n    insetInlineStart: 0,\n    borderBlockEndColor: 'transparent',\n    borderInlineStartColor: 'transparent'\n  })), _defineProperty(_extends8, '&-rtl', {\n    direction: 'rtl'\n  }), _extends8))), _ref7;\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Badge', function (token) {\n  var fontSize = token.fontSize,\n    lineHeight = token.lineHeight,\n    fontSizeSM = token.fontSizeSM,\n    lineWidth = token.lineWidth,\n    marginXS = token.marginXS,\n    colorBorderBg = token.colorBorderBg;\n  var badgeFontHeight = Math.round(fontSize * lineHeight);\n  var badgeShadowSize = lineWidth;\n  var badgeZIndex = 'auto';\n  var badgeHeight = badgeFontHeight - 2 * badgeShadowSize;\n  var badgeTextColor = token.colorBgContainer;\n  var badgeFontWeight = 'normal';\n  var badgeFontSize = fontSizeSM;\n  var badgeColor = token.colorError;\n  var badgeColorHover = token.colorErrorHover;\n  var badgeHeightSm = fontSize;\n  var badgeDotSize = fontSizeSM / 2;\n  var badgeFontSizeSm = fontSizeSM;\n  var badgeStatusSize = fontSizeSM / 2;\n  var badgeToken = mergeToken(token, {\n    badgeFontHeight: badgeFontHeight,\n    badgeShadowSize: badgeShadowSize,\n    badgeZIndex: badgeZIndex,\n    badgeHeight: badgeHeight,\n    badgeTextColor: badgeTextColor,\n    badgeFontWeight: badgeFontWeight,\n    badgeFontSize: badgeFontSize,\n    badgeColor: badgeColor,\n    badgeColorHover: badgeColorHover,\n    badgeShadowColor: colorBorderBg,\n    badgeHeightSm: badgeHeightSm,\n    badgeDotSize: badgeDotSize,\n    badgeFontSizeSm: badgeFontSizeSm,\n    badgeStatusSize: badgeStatusSize,\n    badgeProcessingDuration: '1.2s',\n    badgeRibbonOffset: marginXS,\n    // Follow token just by Design. Not related with token\n    badgeRibbonCornerTransform: 'scaleY(0.75)',\n    badgeRibbonCornerFilter: \"brightness(75%)\"\n  });\n  return [genSharedBadgeStyle(badgeToken)];\n});","map":null,"metadata":{},"sourceType":"module"}