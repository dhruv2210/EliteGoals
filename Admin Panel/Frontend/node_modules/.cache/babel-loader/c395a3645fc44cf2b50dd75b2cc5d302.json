{"ast":null,"code":"import { getLogPositiveMin, log } from '../util/math';\n/**\n * 计算 log 的 ticks，考虑 min = 0 的场景\n * @param cfg 度量的配置项\n * @returns 计算后的 ticks\n */\nexport default function calculateLogTicks(cfg) {\n  var base = cfg.base,\n    tickCount = cfg.tickCount,\n    min = cfg.min,\n    max = cfg.max,\n    values = cfg.values;\n  var minTick;\n  var maxTick = log(base, max);\n  if (min > 0) {\n    minTick = Math.floor(log(base, min));\n  } else {\n    var positiveMin = getLogPositiveMin(values, base, max);\n    minTick = Math.floor(log(base, positiveMin));\n  }\n  var count = maxTick - minTick;\n  var avg = Math.ceil(count / tickCount);\n  var ticks = [];\n  for (var i = minTick; i < maxTick + avg; i = i + avg) {\n    ticks.push(Math.pow(base, i));\n  }\n  if (min <= 0) {\n    // 最小值 <= 0 时显示 0\n    ticks.unshift(0);\n  }\n  return ticks;\n}","map":null,"metadata":{},"sourceType":"module"}