{"ast":null,"code":"import { BBox } from '../../../../util/bbox';\nimport { findLabelTextShape } from '../../util';\nfunction shouldInShapeSingle(geometry, label, shape) {\n  var coordinate = geometry.coordinate;\n  var textShape = findLabelTextShape(label);\n  var textBBox = BBox.fromObject(textShape.getCanvasBBox());\n  var shapeBBox = BBox.fromObject(shape.getBBox());\n  return coordinate.isTransposed ? shapeBBox.height >= textBBox.height : shapeBBox.width >= textBBox.width;\n}\nfunction shouldInShape(geometry, labels, shapes) {\n  var isStack = !!geometry.getAdjust('stack');\n  return isStack || labels.every(function (label, index) {\n    var shape = shapes[index];\n    return shouldInShapeSingle(geometry, label, shape);\n  });\n}\nfunction moveInShape(geometry, label, shape) {\n  var coordinate = geometry.coordinate;\n  var shapeBBox = BBox.fromObject(shape.getBBox());\n  var textShape = findLabelTextShape(label);\n  if (coordinate.isTransposed) {\n    // 水平方向：条形图系列\n    textShape.attr({\n      x: shapeBBox.minX + shapeBBox.width / 2,\n      textAlign: 'center'\n    });\n  } else {\n    // 垂直方向：柱形图系列\n    textShape.attr({\n      y: shapeBBox.minY + shapeBBox.height / 2,\n      textBaseline: 'middle'\n    });\n  }\n}\n/**\n * 适用于 interval geometry 的数据标签位置自动调整布局方法\n * @param items\n * @param labels\n * @param shapes\n */\nexport function intervalAdjustPosition(items, labels, shapes) {\n  var _a;\n  if (shapes.length === 0) {\n    return;\n  }\n  var element = (_a = shapes[0]) === null || _a === void 0 ? void 0 : _a.get('element');\n  var geometry = element === null || element === void 0 ? void 0 : element.geometry;\n  if (!geometry || geometry.type !== 'interval') {\n    return;\n  }\n  var inShape = shouldInShape(geometry, labels, shapes);\n  if (inShape) {\n    shapes.forEach(function (shape, index) {\n      var label = labels[index];\n      moveInShape(geometry, label, shape);\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module"}