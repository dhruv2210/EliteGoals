{"ast":null,"code":"import { __assign, __extends, __read } from \"tslib\";\nimport { deepMix, each, filter, get } from '@antv/util';\nimport { DIRECTION } from '../constant';\nimport { getFactTitleConfig } from '../util/facet';\nimport { Facet } from './facet';\n/**\n * @ignore\n * 镜像分面\n */\nvar Mirror = /** @class */function (_super) {\n  __extends(Mirror, _super);\n  function Mirror() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Mirror.prototype.getDefaultCfg = function () {\n    return deepMix({}, _super.prototype.getDefaultCfg.call(this), {\n      type: 'mirror',\n      showTitle: true,\n      title: _super.prototype.getDefaultTitleCfg.call(this),\n      transpose: false\n    });\n  };\n  Mirror.prototype.render = function () {\n    _super.prototype.render.call(this);\n    if (this.cfg.showTitle) {\n      this.renderTitle();\n    }\n  };\n  Mirror.prototype.beforeEachView = function (view, facet) {\n    // 做一下坐标系转化\n    if (this.cfg.transpose) {\n      if (facet.columnIndex % 2 === 0) {\n        view.coordinate().transpose().reflect('x');\n      } else {\n        view.coordinate().transpose();\n      }\n    } else {\n      if (facet.rowIndex % 2 !== 0) {\n        view.coordinate().reflect('y');\n      }\n    }\n  };\n  Mirror.prototype.afterEachView = function (view, facet) {\n    this.processAxis(view, facet);\n  };\n  Mirror.prototype.generateFacets = function (data) {\n    var _this = this;\n    var _a = __read(this.cfg.fields, 1),\n      f = _a[0];\n    var rst = [];\n    var columnValuesLength = 1;\n    var rowValuesLength = 1;\n    var columnValues = [''];\n    var rowValues = [''];\n    var columnField;\n    var rowField;\n    if (this.cfg.transpose) {\n      columnField = f;\n      columnValues = this.getFieldValues(data, columnField).slice(0, 2); // 镜像最多两个\n      columnValuesLength = columnValues.length;\n    } else {\n      rowField = f;\n      rowValues = this.getFieldValues(data, rowField).slice(0, 2); // 镜像最多两个\n      rowValuesLength = rowValues.length;\n    }\n    // 获取每个维度对应的数据配置片段\n    columnValues.forEach(function (xVal, xIndex) {\n      rowValues.forEach(function (yVal, yIndex) {\n        var conditions = [{\n          field: columnField,\n          value: xVal,\n          values: columnValues\n        }, {\n          field: rowField,\n          value: yVal,\n          values: rowValues\n        }];\n        var facetData = filter(data, _this.getFacetDataFilter(conditions));\n        var facet = {\n          type: _this.cfg.type,\n          data: facetData,\n          region: _this.getRegion(rowValuesLength, columnValuesLength, xIndex, yIndex),\n          columnValue: xVal,\n          rowValue: yVal,\n          columnField: columnField,\n          rowField: rowField,\n          columnIndex: xIndex,\n          rowIndex: yIndex,\n          columnValuesLength: columnValuesLength,\n          rowValuesLength: rowValuesLength\n        };\n        rst.push(facet);\n      });\n    });\n    return rst;\n  };\n  /**\n   * 设置 x 坐标轴的文本、title 是否显示\n   * @param x\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  Mirror.prototype.getXAxisOption = function (x, axes, option, facet) {\n    // 非最后一行\n    // 当是最后一行或者下面没有 view 时文本不显示\n    if (facet.columnIndex === 1 || facet.rowIndex === 1) {\n      return __assign(__assign({}, option), {\n        label: null,\n        title: null\n      });\n    }\n    return option;\n  };\n  /**\n   * 设置 y 坐标轴的文本、title 是否显示\n   * @param y\n   * @param axes\n   * @param option\n   * @param facet\n   */\n  Mirror.prototype.getYAxisOption = function (y, axes, option, facet) {\n    // do nothing\n    return option;\n  };\n  Mirror.prototype.renderTitle = function () {\n    var _this = this;\n    each(this.facets, function (facet, facetIndex) {\n      var columnValue = facet.columnValue,\n        rowValue = facet.rowValue,\n        view = facet.view;\n      var formatter = get(_this.cfg.title, 'formatter');\n      if (_this.cfg.transpose) {\n        var config = deepMix({\n          position: ['50%', '0%'],\n          content: formatter ? formatter(columnValue) : columnValue\n        }, getFactTitleConfig(DIRECTION.TOP), _this.cfg.title);\n        view.annotation().text(config);\n      } else {\n        var config = deepMix({\n          position: ['100%', '50%'],\n          content: formatter ? formatter(rowValue) : rowValue\n        }, getFactTitleConfig(DIRECTION.RIGHT), _this.cfg.title);\n        view.annotation().text(config);\n      }\n    });\n  };\n  return Mirror;\n}(Facet);\nexport default Mirror;","map":null,"metadata":{},"sourceType":"module"}