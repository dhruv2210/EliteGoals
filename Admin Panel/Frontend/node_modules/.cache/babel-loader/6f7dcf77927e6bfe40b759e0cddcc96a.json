{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { clearFix, resetComponent, textEllipsis } from '../../style';\n// ============================== Styles ==============================\n// ============================== Head ==============================\nvar genCardHeadStyle = function genCardHeadStyle(token) {\n  var antCls = token.antCls,\n    componentCls = token.componentCls,\n    cardHeadHeight = token.cardHeadHeight,\n    cardHeadPadding = token.cardHeadPadding,\n    cardPaddingBase = token.cardPaddingBase,\n    cardHeadTabsMarginBottom = token.cardHeadTabsMarginBottom;\n  return _extends(_extends({\n    minHeight: cardHeadHeight,\n    marginBottom: -1,\n    padding: \"0 \" + cardPaddingBase + \"px\",\n    color: token.colorTextHeading,\n    fontWeight: token.fontWeightStrong,\n    fontSize: token.fontSizeLG,\n    background: 'transparent',\n    borderBottom: token.lineWidth + \"px \" + token.lineType + \" \" + token.colorBorderSecondary,\n    borderRadius: token.borderRadiusLG + \"px \" + token.borderRadiusLG + \"px 0 0\"\n  }, clearFix()), _defineProperty({\n    '&-wrapper': {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    '&-title': _extends(_extends({\n      display: 'inline-block',\n      flex: 1,\n      padding: cardHeadPadding + \"px 0\"\n    }, textEllipsis), _defineProperty({}, \"\\n          > \" + componentCls + \"-typography,\\n          > \" + componentCls + \"-typography-edit-content\\n        \", {\n      insetInlineStart: 0,\n      marginTop: 0,\n      marginBottom: 0\n    }))\n  }, antCls + \"-tabs-top\", {\n    clear: 'both',\n    marginBottom: cardHeadTabsMarginBottom,\n    color: token.colorText,\n    fontWeight: 'normal',\n    fontSize: token.fontSize,\n    '&-bar': {\n      borderBottom: token.lineWidth + \"px \" + token.lineType + \" \" + token.colorBorderSecondary\n    }\n  }));\n};\n// ============================== Grid ==============================\nvar genCardGridStyle = function genCardGridStyle(token) {\n  var cardPaddingBase = token.cardPaddingBase,\n    colorBorderSecondary = token.colorBorderSecondary,\n    cardShadow = token.cardShadow,\n    lineWidth = token.lineWidth;\n  return {\n    width: '33.33%',\n    padding: cardPaddingBase,\n    border: 0,\n    borderRadius: 0,\n    boxShadow: \"\\n      \" + lineWidth + \"px 0 0 0 \" + colorBorderSecondary + \",\\n      0 \" + lineWidth + \"px 0 0 \" + colorBorderSecondary + \",\\n      \" + lineWidth + \"px \" + lineWidth + \"px 0 0 \" + colorBorderSecondary + \",\\n      \" + lineWidth + \"px 0 0 0 \" + colorBorderSecondary + \" inset,\\n      0 \" + lineWidth + \"px 0 0 \" + colorBorderSecondary + \" inset;\\n    \",\n    transition: \"all \" + token.motionDurationMid,\n    '&-hoverable:hover': {\n      position: 'relative',\n      zIndex: 1,\n      boxShadow: cardShadow\n    }\n  };\n};\n// ============================== Actions ==============================\nvar genCardActionsStyle = function genCardActionsStyle(token) {\n  var _span;\n  var componentCls = token.componentCls,\n    iconCls = token.iconCls,\n    cardActionsLiMargin = token.cardActionsLiMargin,\n    cardActionsIconSize = token.cardActionsIconSize,\n    colorBorderSecondary = token.colorBorderSecondary;\n  return _extends(_extends({\n    margin: 0,\n    padding: 0,\n    listStyle: 'none',\n    background: token.colorBgContainer,\n    borderTop: token.lineWidth + \"px \" + token.lineType + \" \" + colorBorderSecondary,\n    display: 'flex',\n    borderRadius: \"0 0 \" + token.borderRadiusLG + \"px \" + token.borderRadiusLG + \"px \"\n  }, clearFix()), {\n    '& > li': {\n      margin: cardActionsLiMargin,\n      color: token.colorTextDescription,\n      textAlign: 'center',\n      '> span': (_span = {\n        position: 'relative',\n        display: 'block',\n        minWidth: token.cardActionsIconSize * 2,\n        fontSize: token.fontSize,\n        lineHeight: token.lineHeight,\n        cursor: 'pointer',\n        '&:hover': {\n          color: token.colorPrimary,\n          transition: \"color \" + token.motionDurationMid\n        }\n      }, _defineProperty(_span, \"a:not(\" + componentCls + \"-btn), > \" + iconCls, {\n        display: 'inline-block',\n        width: '100%',\n        color: token.colorTextDescription,\n        lineHeight: token.fontSize * token.lineHeight + \"px\",\n        transition: \"color \" + token.motionDurationMid,\n        '&:hover': {\n          color: token.colorPrimary\n        }\n      }), _defineProperty(_span, \"> \" + iconCls, {\n        fontSize: cardActionsIconSize,\n        lineHeight: cardActionsIconSize * token.lineHeight + \"px\"\n      }), _span),\n      '&:not(:last-child)': {\n        borderInlineEnd: token.lineWidth + \"px \" + token.lineType + \" \" + colorBorderSecondary\n      }\n    }\n  });\n};\n// ============================== Meta ==============================\nvar genCardMetaStyle = function genCardMetaStyle(token) {\n  return _extends(_extends({\n    margin: \"-\" + token.marginXXS + \"px 0\",\n    display: 'flex'\n  }, clearFix()), {\n    '&-avatar': {\n      paddingInlineEnd: token.padding\n    },\n    '&-detail': {\n      overflow: 'hidden',\n      flex: 1,\n      '> div:not(:last-child)': {\n        marginBottom: token.marginXS\n      }\n    },\n    '&-title': _extends({\n      color: token.colorTextHeading,\n      fontWeight: token.fontWeightStrong,\n      fontSize: token.fontSizeLG\n    }, textEllipsis),\n    '&-description': {\n      color: token.colorTextDescription\n    }\n  });\n};\n// ============================== Inner ==============================\nvar genCardTypeInnerStyle = function genCardTypeInnerStyle(token) {\n  var _ref;\n  var componentCls = token.componentCls,\n    cardPaddingBase = token.cardPaddingBase,\n    colorFillAlter = token.colorFillAlter,\n    cardInnerHeadPadding = token.cardInnerHeadPadding;\n  return _ref = {}, _defineProperty(_ref, componentCls + \"-head\", {\n    padding: \"0 \" + cardPaddingBase + \"px\",\n    background: colorFillAlter,\n    '&-title': {\n      padding: cardInnerHeadPadding + \"px 0\",\n      fontSize: token.fontSize\n    }\n  }), _defineProperty(_ref, componentCls + \"-body\", {\n    padding: token.padding + \"px \" + cardPaddingBase + \"px\"\n  }), _defineProperty(_ref, componentCls + \"-extra\", {\n    padding: cardInnerHeadPadding + 1.5 + \"px 0\"\n  }), _ref;\n};\n// ============================== Loading ==============================\nvar genCardLoadingStyle = function genCardLoadingStyle(token) {\n  var componentCls = token.componentCls;\n  return _defineProperty({\n    overflow: 'hidden'\n  }, componentCls + \"-body\", {\n    userSelect: 'none'\n  });\n};\n// ============================== Basic ==============================\nvar genCardStyle = function genCardStyle(token) {\n  var _extends4, _ref4, _ref5, _ref7;\n  var componentCls = token.componentCls,\n    cardShadow = token.cardShadow,\n    cardHeadHeight = token.cardHeadHeight,\n    cardHeadPadding = token.cardHeadPadding,\n    colorBorderSecondary = token.colorBorderSecondary,\n    boxShadow = token.boxShadow,\n    cardPaddingBase = token.cardPaddingBase;\n  return _ref7 = {}, _defineProperty(_ref7, componentCls, _extends(_extends({}, resetComponent(token)), (_extends4 = {\n    position: 'relative',\n    background: token.colorBgContainer,\n    borderRadius: token.borderRadiusLG\n  }, _defineProperty(_extends4, \"&:not(\" + componentCls + \"-bordered)\", {\n    boxShadow: boxShadow\n  }), _defineProperty(_extends4, componentCls + \"-head\", genCardHeadStyle(token)), _defineProperty(_extends4, componentCls + \"-extra\", {\n    // https://stackoverflow.com/a/22429853/3040605\n    marginInlineStart: 'auto',\n    padding: '',\n    color: '',\n    fontWeight: 'normal',\n    fontSize: token.fontSize\n  }), _defineProperty(_extends4, componentCls + \"-body\", _extends({\n    padding: cardPaddingBase,\n    borderRadius: \" 0 0 \" + token.borderRadiusLG + \"px \" + token.borderRadiusLG + \"px\"\n  }, clearFix())), _defineProperty(_extends4, componentCls + \"-grid\", genCardGridStyle(token)), _defineProperty(_extends4, componentCls + \"-cover\", {\n    '> *': {\n      display: 'block',\n      width: '100%'\n    },\n    img: {\n      borderRadius: token.borderRadiusLG + \"px \" + token.borderRadiusLG + \"px 0 0\"\n    }\n  }), _defineProperty(_extends4, componentCls + \"-actions\", genCardActionsStyle(token)), _defineProperty(_extends4, componentCls + \"-meta\", genCardMetaStyle(token)), _extends4))), _defineProperty(_ref7, componentCls + \"-bordered\", _defineProperty({\n    border: token.lineWidth + \"px \" + token.lineType + \" \" + colorBorderSecondary\n  }, componentCls + \"-cover\", {\n    marginTop: -1,\n    marginInlineStart: -1,\n    marginInlineEnd: -1\n  })), _defineProperty(_ref7, componentCls + \"-hoverable\", {\n    cursor: 'pointer',\n    transition: \"box-shadow \" + token.motionDurationMid + \", border-color \" + token.motionDurationMid,\n    '&:hover': {\n      borderColor: 'transparent',\n      boxShadow: cardShadow\n    }\n  }), _defineProperty(_ref7, componentCls + \"-contain-grid\", (_ref4 = {}, _defineProperty(_ref4, componentCls + \"-body\", {\n    display: 'flex',\n    flexWrap: 'wrap'\n  }), _defineProperty(_ref4, \"&:not(\" + componentCls + \"-loading) \" + componentCls + \"-body\", {\n    marginBlockStart: -token.lineWidth,\n    marginInlineStart: -token.lineWidth,\n    padding: 0\n  }), _ref4)), _defineProperty(_ref7, componentCls + \"-contain-tabs\", _defineProperty({}, \"> \" + componentCls + \"-head\", (_ref5 = {}, _defineProperty(_ref5, componentCls + \"-head-title\", {\n    minHeight: cardHeadHeight - cardHeadPadding,\n    paddingBottom: 0\n  }), _defineProperty(_ref5, componentCls + \"-extra\", {\n    paddingBottom: 0\n  }), _ref5))), _defineProperty(_ref7, componentCls + \"-type-inner\", genCardTypeInnerStyle(token)), _defineProperty(_ref7, componentCls + \"-loading\", genCardLoadingStyle(token)), _defineProperty(_ref7, componentCls + \"-rtl\", {\n    direction: 'rtl'\n  }), _ref7;\n};\n// ============================== Size ==============================\nvar genCardSizeStyle = function genCardSizeStyle(token) {\n  var _ref8, _ref10;\n  var componentCls = token.componentCls,\n    cardPaddingSM = token.cardPaddingSM,\n    fontSize = token.fontSize,\n    lineHeight = token.lineHeight,\n    cardHeaderHeightSM = token.cardHeaderHeightSM;\n  var cardHeadPaddingSM = (cardHeaderHeightSM - fontSize * lineHeight) / 2;\n  return _defineProperty({}, componentCls + \"-small\", (_ref10 = {}, _defineProperty(_ref10, \"> \" + componentCls + \"-head\", _defineProperty({\n    minHeight: cardHeaderHeightSM,\n    padding: \"0 \" + cardPaddingSM + \"px\",\n    fontSize: token.fontSize\n  }, \"> \" + componentCls + \"-head-wrapper\", (_ref8 = {}, _defineProperty(_ref8, \"> \" + componentCls + \"-head-title\", {\n    padding: cardHeadPaddingSM + \"px 0\"\n  }), _defineProperty(_ref8, \"> \" + componentCls + \"-extra\", {\n    padding: cardHeadPaddingSM + \"px 0\",\n    fontSize: token.fontSize\n  }), _ref8))), _defineProperty(_ref10, \"> \" + componentCls + \"-body\", {\n    padding: cardPaddingSM\n  }), _ref10));\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Card', function (token) {\n  var cardToken = mergeToken(token, {\n    cardShadow: token.boxShadowCard,\n    cardHeaderHeight: token.fontSizeLG * token.lineHeightLG + token.padding * 2,\n    cardHeaderHeightSM: token.fontSize * token.lineHeight + token.paddingXS * 2,\n    cardHeadPadding: token.padding,\n    cardPaddingBase: token.paddingLG,\n    cardHeadTabsMarginBottom: -token.padding - token.lineWidth,\n    cardInnerHeadPadding: token.paddingSM,\n    cardActionsLiMargin: token.paddingSM + \"px 0\",\n    cardActionsIconSize: token.fontSize,\n    cardPaddingSM: 12 // Fixed padding.\n  });\n\n  return [\n  // Style\n  genCardStyle(cardToken),\n  // Size\n  genCardSizeStyle(cardToken)];\n});","map":null,"metadata":{},"sourceType":"module"}