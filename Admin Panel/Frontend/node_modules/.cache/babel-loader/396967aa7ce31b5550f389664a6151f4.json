{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { isEqual, get } from '@antv/util';\nimport Action from '../../base';\n/**\n * Tooltip 展示隐藏的 Action\n * @ignore\n */\nvar TooltipAction = /** @class */function (_super) {\n  __extends(TooltipAction, _super);\n  function TooltipAction() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.timeStamp = 0;\n    return _this;\n  }\n  /**\n   * 显示 Tooltip\n   * @returns\n   */\n  TooltipAction.prototype.show = function () {\n    var context = this.context;\n    var ev = context.event;\n    var view = context.view;\n    var isTooltipLocked = view.isTooltipLocked();\n    if (isTooltipLocked) {\n      // 锁定时不移动 tooltip\n      return;\n    }\n    var lastTimeStamp = this.timeStamp;\n    var timeStamp = +new Date();\n    // 在 showDelay 毫秒（默认 16ms）内到 tooltip 上可以实现 enterable（调参工程师）\n    var showDelay = get(context.view.getOptions(), 'tooltip.showDelay', 16);\n    if (timeStamp - lastTimeStamp > showDelay) {\n      var preLoc = this.location;\n      var curLoc = {\n        x: ev.x,\n        y: ev.y\n      };\n      if (!preLoc || !isEqual(preLoc, curLoc)) {\n        this.showTooltip(view, curLoc);\n      }\n      this.timeStamp = timeStamp;\n      this.location = curLoc;\n    }\n  };\n  /**\n   * 隐藏 Tooltip。\n   * @returns\n   */\n  TooltipAction.prototype.hide = function () {\n    var view = this.context.view;\n    var tooltip = view.getController('tooltip');\n    var _a = this.context.event,\n      clientX = _a.clientX,\n      clientY = _a.clientY;\n    // 如果已经 enterable + 已经在 tooltip 上，那么不隐藏\n    if (tooltip.isCursorEntered({\n      x: clientX,\n      y: clientY\n    })) {\n      return;\n    }\n    // 锁定 tooltip 时不隐藏\n    if (view.isTooltipLocked()) {\n      return;\n    }\n    this.hideTooltip(view);\n    this.location = null;\n  };\n  TooltipAction.prototype.showTooltip = function (view, point) {\n    // 相同位置不重复展示\n    view.showTooltip(point);\n  };\n  TooltipAction.prototype.hideTooltip = function (view) {\n    view.hideTooltip();\n  };\n  return TooltipAction;\n}(Action);\nexport default TooltipAction;","map":null,"metadata":{},"sourceType":"module"}