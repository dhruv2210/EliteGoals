{"ast":null,"code":"import { get, isArray, isNumber, map } from '@antv/util';\nimport { geometry as baseGeometry } from '../../../adaptor/geometries/base';\nimport { deepAssign, flow } from '../../../utils';\nimport { getTooltipMapping } from '../../../utils/tooltip';\nimport { FUNNEL_CONVERSATION, FUNNEL_MAPPING_VALUE, FUNNEL_PERCENT } from '../constant';\nimport { conversionTagComponent, transformData } from './common';\n/**\n * 处理字段数据\n * @param params\n */\nfunction field(params) {\n  var _a;\n  var chart = params.chart,\n    options = params.options;\n  var _b = options.data,\n    data = _b === void 0 ? [] : _b,\n    yField = options.yField;\n  // 绘制漏斗图\n  chart.data(data);\n  chart.scale((_a = {}, _a[yField] = {\n    sync: true\n  }, _a));\n  return params;\n}\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var data = options.data,\n    xField = options.xField,\n    yField = options.yField,\n    color = options.color,\n    compareField = options.compareField,\n    isTransposed = options.isTransposed,\n    tooltip = options.tooltip,\n    maxSize = options.maxSize,\n    minSize = options.minSize,\n    label = options.label,\n    funnelStyle = options.funnelStyle,\n    state = options.state,\n    showFacetTitle = options.showFacetTitle;\n  chart.facet('mirror', {\n    fields: [compareField],\n    // 漏斗图的转置规则与分面相反，默认是垂直布局\n    transpose: !isTransposed,\n    padding: isTransposed ? 0 : [32, 0, 0, 0],\n    showTitle: showFacetTitle,\n    eachView: function eachView(view, facet) {\n      var index = isTransposed ? facet.rowIndex : facet.columnIndex;\n      if (!isTransposed) {\n        view.coordinate({\n          type: 'rect',\n          actions: [['transpose'], ['scale', index === 0 ? -1 : 1, -1]]\n        });\n      }\n      var formatterData = transformData(facet.data, data, {\n        yField: yField,\n        maxSize: maxSize,\n        minSize: minSize\n      });\n      view.data(formatterData);\n      // 绘制图形\n      var _a = getTooltipMapping(tooltip, [xField, yField, compareField]),\n        fields = _a.fields,\n        formatter = _a.formatter;\n      var defaultFacetLabel = isTransposed ? {\n        offset: index === 0 ? 10 : -23,\n        position: index === 0 ? 'bottom' : 'top'\n      } : {\n        offset: 10,\n        position: 'left',\n        style: {\n          textAlign: index === 0 ? 'end' : 'start'\n        }\n      };\n      baseGeometry({\n        chart: view,\n        options: {\n          type: 'interval',\n          xField: xField,\n          yField: FUNNEL_MAPPING_VALUE,\n          colorField: xField,\n          tooltipFields: isArray(fields) && fields.concat([FUNNEL_PERCENT, FUNNEL_CONVERSATION]),\n          mapping: {\n            // todo 暂时不提供 金字塔 shape，后续需要自定义下形状\n            shape: 'funnel',\n            tooltip: formatter,\n            color: color,\n            style: funnelStyle\n          },\n          label: label === false ? false : deepAssign({}, defaultFacetLabel, label),\n          state: state\n        }\n      });\n    }\n  });\n  return params;\n}\nexport function compareConversionTag(params) {\n  // @ts-ignore\n  var chart = params.chart,\n    index = params.index,\n    options = params.options;\n  var conversionTag = options.conversionTag,\n    isTransposed = options.isTransposed;\n  (isNumber(index) ? [chart] : chart.views).forEach(function (view, viewIndex) {\n    // 获取形状位置，再转化为需要的转化率位置\n    var dataArray = get(view, ['geometries', '0', 'dataArray'], []);\n    var size = get(view, ['options', 'data', 'length']);\n    var x = map(dataArray, function (item) {\n      return get(item, ['0', 'nextPoints', '0', 'x']) * size - 0.5;\n    });\n    var getLineCoordinate = function getLineCoordinate(datum, datumIndex, data, initLineOption) {\n      var ratio = (index || viewIndex) === 0 ? -1 : 1;\n      return deepAssign({}, initLineOption, {\n        start: [x[datumIndex - 1] || datumIndex - 0.5, datum[FUNNEL_MAPPING_VALUE]],\n        end: [x[datumIndex - 1] || datumIndex - 0.5, datum[FUNNEL_MAPPING_VALUE] + 0.05],\n        text: isTransposed ? {\n          style: {\n            textAlign: 'start'\n          }\n        } : {\n          offsetX: conversionTag !== false ? ratio * conversionTag.offsetX : 0,\n          style: {\n            textAlign: (index || viewIndex) === 0 ? 'end' : 'start'\n          }\n        }\n      });\n    };\n    conversionTagComponent(getLineCoordinate)(deepAssign({}, {\n      chart: view,\n      options: options\n    }));\n  });\n}\n/**\n * 转化率组件\n * @param params\n */\nfunction conversionTag(params) {\n  var chart = params.chart;\n  // @ts-ignore\n  chart.once('beforepaint', function () {\n    return compareConversionTag(params);\n  });\n  return params;\n}\n/**\n * 对比漏斗\n * @param chart\n * @param options\n */\nexport function compareFunnel(params) {\n  return flow(field, geometry, conversionTag)(params);\n}","map":null,"metadata":{},"sourceType":"module"}