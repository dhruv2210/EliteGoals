{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"visible\", \"onVisibleChange\", \"getContainer\", \"current\", \"countRender\"];\nimport * as React from 'react';\nimport { useState } from 'react';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Preview from \"./Preview\";\n\n/* istanbul ignore next */\nexport var context = /*#__PURE__*/React.createContext({\n  previewUrls: new Map(),\n  setPreviewUrls: function setPreviewUrls() {\n    return null;\n  },\n  current: null,\n  setCurrent: function setCurrent() {\n    return null;\n  },\n  setShowPreview: function setShowPreview() {\n    return null;\n  },\n  setMousePosition: function setMousePosition() {\n    return null;\n  },\n  registerImage: function registerImage() {\n    return function () {\n      return null;\n    };\n  },\n  rootClassName: ''\n});\nvar Provider = context.Provider;\nvar Group = function Group(_ref) {\n  var _ref$previewPrefixCls = _ref.previewPrefixCls,\n    previewPrefixCls = _ref$previewPrefixCls === void 0 ? 'rc-image-preview' : _ref$previewPrefixCls,\n    children = _ref.children,\n    _ref$icons = _ref.icons,\n    icons = _ref$icons === void 0 ? {} : _ref$icons,\n    preview = _ref.preview;\n  var _ref2 = _typeof(preview) === 'object' ? preview : {},\n    _ref2$visible = _ref2.visible,\n    previewVisible = _ref2$visible === void 0 ? undefined : _ref2$visible,\n    _ref2$onVisibleChange = _ref2.onVisibleChange,\n    onPreviewVisibleChange = _ref2$onVisibleChange === void 0 ? undefined : _ref2$onVisibleChange,\n    _ref2$getContainer = _ref2.getContainer,\n    getContainer = _ref2$getContainer === void 0 ? undefined : _ref2$getContainer,\n    _ref2$current = _ref2.current,\n    currentIndex = _ref2$current === void 0 ? 0 : _ref2$current,\n    _ref2$countRender = _ref2.countRender,\n    countRender = _ref2$countRender === void 0 ? undefined : _ref2$countRender,\n    dialogProps = _objectWithoutProperties(_ref2, _excluded);\n  var _useState = useState(new Map()),\n    _useState2 = _slicedToArray(_useState, 2),\n    previewUrls = _useState2[0],\n    setPreviewUrls = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    current = _useState4[0],\n    setCurrent = _useState4[1];\n  var _useMergedState = useMergedState(!!previewVisible, {\n      value: previewVisible,\n      onChange: onPreviewVisibleChange\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    isShowPreview = _useMergedState2[0],\n    setShowPreview = _useMergedState2[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    mousePosition = _useState6[0],\n    setMousePosition = _useState6[1];\n  var isControlled = previewVisible !== undefined;\n  var previewUrlsKeys = Array.from(previewUrls.keys());\n  var currentControlledKey = previewUrlsKeys[currentIndex];\n  var canPreviewUrls = new Map(Array.from(previewUrls).filter(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      canPreview = _ref4[1].canPreview;\n    return !!canPreview;\n  }).map(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n      id = _ref6[0],\n      url = _ref6[1].url;\n    return [id, url];\n  }));\n  var registerImage = function registerImage(id, url) {\n    var canPreview = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var unRegister = function unRegister() {\n      setPreviewUrls(function (oldPreviewUrls) {\n        var clonePreviewUrls = new Map(oldPreviewUrls);\n        var deleteResult = clonePreviewUrls.delete(id);\n        return deleteResult ? clonePreviewUrls : oldPreviewUrls;\n      });\n    };\n    setPreviewUrls(function (oldPreviewUrls) {\n      return new Map(oldPreviewUrls).set(id, {\n        url: url,\n        canPreview: canPreview\n      });\n    });\n    return unRegister;\n  };\n  var onPreviewClose = function onPreviewClose(e) {\n    e.stopPropagation();\n    setShowPreview(false);\n    setMousePosition(null);\n  };\n  React.useEffect(function () {\n    setCurrent(currentControlledKey);\n  }, [currentControlledKey]);\n  React.useEffect(function () {\n    if (!isShowPreview && isControlled) {\n      setCurrent(currentControlledKey);\n    }\n  }, [currentControlledKey, isControlled, isShowPreview]);\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: {\n      isPreviewGroup: true,\n      previewUrls: canPreviewUrls,\n      setPreviewUrls: setPreviewUrls,\n      current: current,\n      setCurrent: setCurrent,\n      setShowPreview: setShowPreview,\n      setMousePosition: setMousePosition,\n      registerImage: registerImage\n    }\n  }, children, /*#__PURE__*/React.createElement(Preview, _extends({\n    \"aria-hidden\": !isShowPreview,\n    visible: isShowPreview,\n    prefixCls: previewPrefixCls,\n    onClose: onPreviewClose,\n    mousePosition: mousePosition,\n    src: canPreviewUrls.get(current),\n    icons: icons,\n    getContainer: getContainer,\n    countRender: countRender\n  }, dialogProps)));\n};\nexport default Group;","map":null,"metadata":{},"sourceType":"module"}