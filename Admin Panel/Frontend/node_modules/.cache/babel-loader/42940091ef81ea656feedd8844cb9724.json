{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constant';\nimport { transformData } from './utils';\n/**\n * 瀑布图\n */\nvar Waterfall = /** @class */function (_super) {\n  __extends(Waterfall, _super);\n  function Waterfall() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n    _this.type = 'waterfall';\n    return _this;\n  }\n  /**\n   * 获取 瀑布图 默认配置项\n   * 供外部使用\n   */\n  Waterfall.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * @override\n   * @param data\n   */\n  Waterfall.prototype.changeData = function (data) {\n    var _a = this.options,\n      xField = _a.xField,\n      yField = _a.yField,\n      total = _a.total;\n    this.updateOption({\n      data: data\n    });\n    this.chart.changeData(transformData(data, xField, yField, total));\n  };\n  /**\n   * 获取 瀑布图 的适配器\n   */\n  Waterfall.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  /**\n   * 获取 瀑布图 的默认配置\n   */\n  Waterfall.prototype.getDefaultOptions = function () {\n    return Waterfall.getDefaultOptions();\n  };\n  return Waterfall;\n}(Plot);\nexport { Waterfall };","map":null,"metadata":{},"sourceType":"module"}