{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genComponentStyleHook } from '../../theme/internal';\nimport { textEllipsis } from '../../style';\nimport { genCompactItemStyle } from '../../style/compact-item';\n// =============================== Base ===============================\nvar genBaseStyle = function genBaseStyle(token) {\n  var _extends2;\n  var prefixCls = token.prefixCls,\n    componentCls = token.componentCls,\n    antCls = token.antCls;\n  var cascaderMenuItemCls = componentCls + \"-menu-item\";\n  var iconCls = \"\\n    &\" + cascaderMenuItemCls + \"-expand \" + cascaderMenuItemCls + \"-expand-icon,\\n    \" + cascaderMenuItemCls + \"-loading-icon\\n  \";\n  var itemPaddingVertical = Math.round((token.controlHeight - token.fontSize * token.lineHeight) / 2);\n  return [\n  // =====================================================\n  // ==                     Control                     ==\n  // =====================================================\n  _defineProperty({}, componentCls, {\n    width: token.controlWidth\n  }),\n  // =====================================================\n  // ==                      Popup                      ==\n  // =====================================================\n  _defineProperty({}, componentCls + \"-dropdown\", [\n  // ==================== Checkbox ====================\n  getCheckboxStyle(prefixCls + \"-checkbox\", token), _defineProperty({}, \"&\" + antCls + \"-select-dropdown\", {\n    padding: 0\n  }), _defineProperty({}, componentCls, {\n    // ================== Checkbox ==================\n    '&-checkbox': {\n      top: 0,\n      marginInlineEnd: token.paddingXS\n    },\n    // ==================== Menu ====================\n    // >>> Menus\n    '&-menus': _defineProperty({\n      display: 'flex',\n      flexWrap: 'nowrap',\n      alignItems: 'flex-start'\n    }, \"&\" + componentCls + \"-menu-empty\", _defineProperty({}, componentCls + \"-menu\", _defineProperty({\n      width: '100%',\n      height: 'auto'\n    }, cascaderMenuItemCls, {\n      color: token.colorTextDisabled,\n      cursor: 'default',\n      pointerEvents: 'none'\n    }))),\n    // >>> Menu\n    '&-menu': {\n      flexGrow: 1,\n      minWidth: token.controlItemWidth,\n      height: token.dropdownHeight,\n      margin: 0,\n      padding: token.paddingXXS,\n      overflow: 'auto',\n      verticalAlign: 'top',\n      listStyle: 'none',\n      '-ms-overflow-style': '-ms-autohiding-scrollbar',\n      '&:not(:last-child)': {\n        borderInlineEnd: token.lineWidth + \"px \" + token.lineType + \" \" + token.colorSplit\n      },\n      '&-item': _extends(_extends({}, textEllipsis), (_extends2 = {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        alignItems: 'center',\n        padding: itemPaddingVertical + \"px \" + token.paddingSM + \"px\",\n        lineHeight: token.lineHeight,\n        cursor: 'pointer',\n        transition: \"all \" + token.motionDurationMid,\n        borderRadius: token.borderRadiusSM,\n        '&:hover': {\n          background: token.controlItemBgHover\n        },\n        ' &-disabled': _defineProperty({\n          color: token.colorTextDisabled,\n          cursor: 'not-allowed',\n          '&:hover': {\n            background: 'transparent'\n          }\n        }, iconCls, {\n          color: token.colorTextDisabled\n        })\n      }, _defineProperty(_extends2, \"&-active:not(\" + cascaderMenuItemCls + \"-disabled)\", _defineProperty({}, \"&, &:hover\", {\n        fontWeight: token.fontWeightStrong,\n        backgroundColor: token.controlItemBgActive\n      })), _defineProperty(_extends2, '&-content', {\n        flex: 'auto'\n      }), _defineProperty(_extends2, iconCls, {\n        marginInlineStart: token.paddingXXS,\n        color: token.colorTextDescription,\n        fontSize: token.fontSizeIcon\n      }), _defineProperty(_extends2, '&-keyword', {\n        color: token.colorHighlight\n      }), _extends2))\n    }\n  })]),\n  // =====================================================\n  // ==                       RTL                       ==\n  // =====================================================\n  _defineProperty({}, componentCls + \"-dropdown-rtl\", {\n    direction: 'rtl'\n  }),\n  // =====================================================\n  // ==             Space Compact                       ==\n  // =====================================================\n  genCompactItemStyle(token)];\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Cascader', function (token) {\n  return [genBaseStyle(token)];\n}, {\n  controlWidth: 184,\n  controlItemWidth: 111,\n  dropdownHeight: 180\n});","map":null,"metadata":{},"sourceType":"module"}