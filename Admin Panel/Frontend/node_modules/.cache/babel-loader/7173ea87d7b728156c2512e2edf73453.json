{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { createDom, getOuterHeight, getOuterWidth, modifyCSS } from '@antv/dom-util';\nimport { isElement, isFunction, isNumber, isString } from '@antv/util';\nimport HtmlComponent from '../abstract/html-component';\nimport { clearDom } from '../util/util';\nvar HtmlAnnotation = /** @class */function (_super) {\n  __extends(HtmlAnnotation, _super);\n  function HtmlAnnotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  HtmlAnnotation.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'annotation',\n      type: 'html',\n      locationType: 'point',\n      x: 0,\n      y: 0,\n      containerTpl: \"<div class=\\\"g2-html-annotation\\\" style=\\\"position:absolute\\\"></div>\",\n      alignX: 'left',\n      alignY: 'top',\n      html: '',\n      zIndex: 7\n    });\n  };\n  HtmlAnnotation.prototype.render = function () {\n    var container = this.getContainer();\n    var html = this.get('html');\n    clearDom(container);\n    var rst = isFunction(html) ? html(container) : html;\n    if (isElement(rst)) {\n      container.appendChild(rst);\n    } else if (isString(rst) || isNumber(rst)) {\n      var dom = createDom(\"\" + rst);\n      if (dom) {\n        container.appendChild(dom);\n      }\n    }\n    this.resetPosition();\n  };\n  HtmlAnnotation.prototype.resetPosition = function () {\n    var container = this.getContainer();\n    var _a = this.getLocation(),\n      x = _a.x,\n      y = _a.y;\n    var alignX = this.get('alignX');\n    var alignY = this.get('alignY');\n    var offsetX = this.get('offsetX');\n    var offsetY = this.get('offsetY');\n    var domWidth = getOuterWidth(container);\n    var domHeight = getOuterHeight(container);\n    var position = {\n      x: x,\n      y: y\n    };\n    if (alignX === 'middle') {\n      position.x -= Math.round(domWidth / 2);\n    } else if (alignX === 'right') {\n      position.x -= Math.round(domWidth);\n    }\n    if (alignY === 'middle') {\n      position.y -= Math.round(domHeight / 2);\n    } else if (alignY === 'bottom') {\n      position.y -= Math.round(domHeight);\n    }\n    if (offsetX) {\n      position.x += offsetX;\n    }\n    if (offsetY) {\n      position.y += offsetY;\n    }\n    modifyCSS(container, {\n      position: 'absolute',\n      left: position.x + \"px\",\n      top: position.y + \"px\",\n      zIndex: this.get('zIndex')\n    });\n  };\n  return HtmlAnnotation;\n}(HtmlComponent);\nexport default HtmlAnnotation;","map":null,"metadata":{},"sourceType":"module"}