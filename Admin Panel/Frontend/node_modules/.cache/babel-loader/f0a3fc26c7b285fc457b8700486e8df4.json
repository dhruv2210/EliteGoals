{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Action } from '@antv/g2';\nimport { each, filter, get, map } from '@antv/util';\nimport { conversionTag as basicConversionTag } from '../geometries/basic';\nimport { CONVERSION_TAG_NAME, transformData } from '../geometries/common';\nimport { compareConversionTag } from '../geometries/compare';\n/**\n * Funnel 转化率跟随 legend 变化事件\n */\nvar ConversionTagAction = /** @class */function (_super) {\n  __extends(ConversionTagAction, _super);\n  function ConversionTagAction() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.rendering = false;\n    return _this;\n  }\n  ConversionTagAction.prototype.change = function (options) {\n    var _this = this;\n    // 防止多次重复渲染\n    if (!this.rendering) {\n      var seriesField = options.seriesField,\n        compareField = options.compareField;\n      var conversionTag_1 = compareField ? compareConversionTag : basicConversionTag;\n      var view = this.context.view;\n      // 兼容分面漏斗图\n      var views = seriesField || compareField ? view.views : [view];\n      map(views, function (v, index) {\n        // 防止影响其他 annotations 被去除\n        var annotationController = v.getController('annotation');\n        var annotations = filter(get(annotationController, ['option'], []), function (_a) {\n          var name = _a.name;\n          return name !== CONVERSION_TAG_NAME;\n        });\n        annotationController.clear(true);\n        each(annotations, function (annotation) {\n          if (typeof annotation === 'object') {\n            v.annotation()[annotation.type](annotation);\n          }\n        });\n        var data = get(v, ['filteredData'], v.getOptions().data);\n        conversionTag_1({\n          chart: v,\n          index: index,\n          options: __assign(__assign({}, options), {\n            // @ts-ignore\n            filteredData: transformData(data, data, options)\n          })\n        });\n        v.filterData(data);\n        _this.rendering = true;\n        v.render(true);\n      });\n    }\n    this.rendering = false;\n  };\n  return ConversionTagAction;\n}(Action);\nexport { ConversionTagAction };","map":null,"metadata":{},"sourceType":"module"}