{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport { ConfigContext } from '../config-provider';\nimport Dropdown from '../dropdown/dropdown';\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var customizePrefixCls = props.prefixCls,\n    _props$separator = props.separator,\n    separator = _props$separator === void 0 ? '/' : _props$separator,\n    children = props.children,\n    menu = props.menu,\n    overlay = props.overlay,\n    dropdownProps = props.dropdownProps,\n    restProps = __rest(props, [\"prefixCls\", \"separator\", \"children\", \"menu\", \"overlay\", \"dropdownProps\"]);\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var prefixCls = getPrefixCls('breadcrumb', customizePrefixCls);\n  // Warning for deprecated usage\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!('overlay' in props), 'Breadcrumb.Item', '`overlay` is deprecated. Please use `menu` instead.') : void 0;\n  }\n  /** If overlay is have Wrap a Dropdown */\n  var renderBreadcrumbNode = function renderBreadcrumbNode(breadcrumbItem) {\n    if (menu || overlay) {\n      return /*#__PURE__*/React.createElement(Dropdown, _extends({\n        menu: menu,\n        overlay: overlay,\n        placement: \"bottom\"\n      }, dropdownProps), /*#__PURE__*/React.createElement(\"span\", {\n        className: prefixCls + \"-overlay-link\"\n      }, breadcrumbItem, /*#__PURE__*/React.createElement(DownOutlined, null)));\n    }\n    return breadcrumbItem;\n  };\n  var link;\n  if ('href' in restProps) {\n    link = /*#__PURE__*/React.createElement(\"a\", _extends({\n      className: prefixCls + \"-link\"\n    }, restProps), children);\n  } else {\n    link = /*#__PURE__*/React.createElement(\"span\", _extends({\n      className: prefixCls + \"-link\"\n    }, restProps), children);\n  }\n  // wrap to dropDown\n  link = renderBreadcrumbNode(link);\n  if (children !== undefined && children !== null) {\n    return /*#__PURE__*/React.createElement(\"li\", null, link, separator && /*#__PURE__*/React.createElement(\"span\", {\n      className: prefixCls + \"-separator\"\n    }, separator));\n  }\n  return null;\n};\nBreadcrumbItem.__ANT_BREADCRUMB_ITEM = true;\nexport default BreadcrumbItem;","map":null,"metadata":{},"sourceType":"module"}