{"ast":null,"code":"import CallbackAction from './callback';\nimport { get } from '@antv/util';\n// Action 类的缓存\nvar ActionCache = {};\n/**\n * 根据名称获取 Action 实例\n * @param actionName - action 的名称\n * @param context 上下文\n * @returns Action 实例\n */\nexport function createAction(actionName, context) {\n  var actionOption = ActionCache[actionName];\n  var action = null;\n  if (actionOption) {\n    var ActionClass = actionOption.ActionClass,\n      cfg = actionOption.cfg;\n    action = new ActionClass(context, cfg);\n    action.name = actionName;\n    action.init();\n  }\n  return action;\n}\n/**\n * 根据 action 的 name 获取定义的类\n * @param actionName action 的 name\n */\nexport function getActionClass(actionName) {\n  var actionOption = ActionCache[actionName];\n  return get(actionOption, 'ActionClass');\n}\n/**\n * 注册 Action\n * @param actionName - action 的名称\n * @param ActionClass - 继承自 action 的类\n */\nexport function registerAction(actionName, ActionClass, cfg) {\n  ActionCache[actionName] = {\n    ActionClass: ActionClass,\n    cfg: cfg\n  };\n}\n/**\n * 取消注册 Action\n * @param actionName action 名称\n */\nexport function unregisterAction(actionName) {\n  delete ActionCache[actionName];\n}\n/**\n * 根据回调函数获取 Action 实例\n * @param callback - action 的回调函数\n * @param context 上下文\n * @returns Action 实例\n */\nexport function createCallbackAction(callback, context) {\n  var action = new CallbackAction(context);\n  action.callback = callback;\n  action.name = 'callback';\n  return action;\n}","map":null,"metadata":{},"sourceType":"module"}