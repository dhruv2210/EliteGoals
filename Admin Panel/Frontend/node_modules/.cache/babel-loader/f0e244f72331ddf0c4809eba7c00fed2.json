{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { clone, each } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { regionToBBox } from '../util/util';\nvar RegionFilterAnnotation = /** @class */function (_super) {\n  __extends(RegionFilterAnnotation, _super);\n  function RegionFilterAnnotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 默认的配置项\n   * @returns {object} 默认的配置项\n   */\n  RegionFilterAnnotation.prototype.getDefaultCfg = function () {\n    var cfg = _super.prototype.getDefaultCfg.call(this);\n    return __assign(__assign({}, cfg), {\n      name: 'annotation',\n      type: 'regionFilter',\n      locationType: 'region',\n      start: null,\n      end: null,\n      color: null,\n      shape: []\n    });\n  };\n  RegionFilterAnnotation.prototype.renderInner = function (group) {\n    var _this = this;\n    var start = this.get('start');\n    var end = this.get('end');\n    // 1. add region layer\n    var layer = this.addGroup(group, {\n      id: this.getElementId('region-filter'),\n      capture: false\n    });\n    // 2. clone shape & color it\n    each(this.get('shapes'), function (shape, shapeIdx) {\n      var type = shape.get('type');\n      var attrs = clone(shape.attr());\n      _this.adjustShapeAttrs(attrs);\n      _this.addShape(layer, {\n        id: _this.getElementId(\"shape-\" + type + \"-\" + shapeIdx),\n        capture: false,\n        type: type,\n        attrs: attrs\n      });\n    });\n    // 3. clip\n    var clipBBox = regionToBBox({\n      start: start,\n      end: end\n    });\n    layer.setClip({\n      type: 'rect',\n      attrs: {\n        x: clipBBox.minX,\n        y: clipBBox.minY,\n        width: clipBBox.width,\n        height: clipBBox.height\n      }\n    });\n  };\n  RegionFilterAnnotation.prototype.adjustShapeAttrs = function (attr) {\n    var color = this.get('color');\n    if (attr.fill) {\n      attr.fill = attr.fillStyle = color;\n    }\n    attr.stroke = attr.strokeStyle = color;\n  };\n  return RegionFilterAnnotation;\n}(GroupComponent);\nexport default RegionFilterAnnotation;","map":null,"metadata":{},"sourceType":"module"}