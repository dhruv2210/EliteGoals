{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Action, Util } from '@antv/g2';\nimport { isEqual } from '@antv/util';\nimport { transform } from '../../../../utils/matrix';\n/**\n * 饼图 图例激活 action\n */\nvar PieLegendAction = /** @class */function (_super) {\n  __extends(PieLegendAction, _super);\n  function PieLegendAction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 获取激活的图形元素\n   */\n  PieLegendAction.prototype.getActiveElements = function () {\n    var delegateObject = Util.getDelegationObject(this.context);\n    if (delegateObject) {\n      var view = this.context.view;\n      var component = delegateObject.component,\n        item_1 = delegateObject.item;\n      var field_1 = component.get('field');\n      if (field_1) {\n        var elements = view.geometries[0].elements;\n        return elements.filter(function (ele) {\n          return ele.getModel().data[field_1] === item_1.value;\n        });\n      }\n    }\n    return [];\n  };\n  /**\n   * 获取激活的标签\n   */\n  PieLegendAction.prototype.getActiveElementLabels = function () {\n    var view = this.context.view;\n    var elements = this.getActiveElements();\n    var labels = view.geometries[0].labelsContainer.getChildren();\n    return labels.filter(function (label) {\n      return elements.find(function (ele) {\n        return isEqual(ele.getData(), label.get('data'));\n      });\n    });\n  };\n  PieLegendAction.prototype.transfrom = function (offset) {\n    if (offset === void 0) {\n      offset = 7.5;\n    }\n    var elements = this.getActiveElements();\n    var elementLabels = this.getActiveElementLabels();\n    elements.forEach(function (element, idx) {\n      var labelShape = elementLabels[idx];\n      var coordinate = element.geometry.coordinate;\n      if (coordinate.isPolar && coordinate.isTransposed) {\n        var _a = Util.getAngle(element.getModel(), coordinate),\n          startAngle = _a.startAngle,\n          endAngle = _a.endAngle;\n        var middleAngle = (startAngle + endAngle) / 2;\n        var r = offset;\n        var x = r * Math.cos(middleAngle);\n        var y = r * Math.sin(middleAngle);\n        element.shape.setMatrix(transform([['t', x, y]]));\n        labelShape.setMatrix(transform([['t', x, y]]));\n      }\n    });\n  };\n  PieLegendAction.prototype.active = function () {\n    this.transfrom();\n  };\n  /**\n   * 激活态还原\n   */\n  PieLegendAction.prototype.reset = function () {\n    this.transfrom(0);\n  };\n  return PieLegendAction;\n}(Action);\nexport { PieLegendAction };","map":null,"metadata":{},"sourceType":"module"}