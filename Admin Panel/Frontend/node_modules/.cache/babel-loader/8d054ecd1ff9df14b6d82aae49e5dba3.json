{"ast":null,"code":"import { each } from '@antv/util';\nimport { MarkerSymbols } from '../../../util/marker';\nimport { registerShape, registerShapeFactory } from '../base';\nimport { splitPoints } from '../util/split-points';\nimport { drawPoints, SHAPES } from './util';\nvar PointShapeFactory = registerShapeFactory('point', {\n  defaultShapeType: 'hollow-circle',\n  getDefaultPoints: function getDefaultPoints(pointInfo) {\n    return splitPoints(pointInfo);\n  }\n});\neach(SHAPES, function (shapeName) {\n  // 添加该 shape 对应的 hollow-shape\n  registerShape('point', \"hollow-\".concat(shapeName), {\n    draw: function draw(cfg, container) {\n      return drawPoints(this, cfg, container, shapeName, true);\n    },\n    getMarker: function getMarker(markerCfg) {\n      var color = markerCfg.color;\n      return {\n        symbol: MarkerSymbols[shapeName] || shapeName,\n        style: {\n          r: 4.5,\n          stroke: color,\n          fill: null\n        }\n      };\n    }\n  });\n});\nexport default PointShapeFactory;","map":null,"metadata":{},"sourceType":"module"}