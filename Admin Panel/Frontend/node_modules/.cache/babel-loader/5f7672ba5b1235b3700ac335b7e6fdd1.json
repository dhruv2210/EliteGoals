{"ast":null,"code":"/**\n * @fileoverview marker\n * @author dengfuping_develop@163.com\n */\nimport { __extends } from \"tslib\";\nimport { isArray, isFunction } from '@antv/util';\nimport ShapeBase from '../base';\nimport symbolsFactory from './symbols';\nvar Marker = /** @class */function (_super) {\n  __extends(Marker, _super);\n  function Marker() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'marker';\n    _this.canFill = true;\n    _this.canStroke = true;\n    return _this;\n  }\n  Marker.prototype.createPath = function (context) {\n    var el = this.get('el');\n    el.setAttribute('d', this._assembleMarker());\n  };\n  Marker.prototype._assembleMarker = function () {\n    var d = this._getPath();\n    if (isArray(d)) {\n      return d.map(function (path) {\n        return path.join(' ');\n      }).join('');\n    }\n    return d;\n  };\n  Marker.prototype._getPath = function () {\n    var attrs = this.attr();\n    var x = attrs.x,\n      y = attrs.y;\n    // 兼容 r 和 radius 两种写法，推荐使用 r\n    var r = attrs.r || attrs.radius;\n    var symbol = attrs.symbol || 'circle';\n    var method;\n    if (isFunction(symbol)) {\n      method = symbol;\n    } else {\n      method = symbolsFactory.get(symbol);\n    }\n    if (!method) {\n      console.warn(method + \" symbol is not exist.\");\n      return null;\n    }\n    return method(x, y, r);\n  };\n  // 作为其静态属性\n  Marker.symbolsFactory = symbolsFactory;\n  return Marker;\n}(ShapeBase);\nexport default Marker;","map":null,"metadata":{},"sourceType":"module"}