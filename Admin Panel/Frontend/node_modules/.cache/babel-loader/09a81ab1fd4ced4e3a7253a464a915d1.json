{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport hash from '@emotion/hash';\nimport devWarning from \"rc-util/es/warning\";\nimport { updateCSS, removeCSS } from \"rc-util/es/Dom/dynamicCSS\";\nimport canUseDom from \"rc-util/es/Dom/canUseDom\";\nexport function flattenToken(token) {\n  var str = '';\n  Object.keys(token).forEach(function (key) {\n    var value = token[key];\n    str += key;\n    if (value && _typeof(value) === 'object') {\n      str += flattenToken(value);\n    } else {\n      str += value;\n    }\n  });\n  return str;\n}\n/**\n * Convert derivative token to key string\n */\nexport function token2key(token, slat) {\n  return hash(\"\".concat(slat, \"_\").concat(flattenToken(token)));\n}\nexport function warning(message, path) {\n  devWarning(false, \"[Ant Design CSS-in-JS] \".concat(path ? \"Error in '\".concat(path, \"': \") : '').concat(message));\n}\nexport var styleValidate = function styleValidate(key, value) {\n  var info = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var path = info.path,\n    hashId = info.hashId;\n  switch (key) {\n    case 'content':\n      // From emotion: https://github.com/emotion-js/emotion/blob/main/packages/serialize/src/index.js#L63\n      var contentValuePattern = /(attr|counters?|url|(((repeating-)?(linear|radial))|conic)-gradient)\\(|(no-)?(open|close)-quote/;\n      var contentValues = ['normal', 'none', 'initial', 'inherit', 'unset'];\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        warning(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\".concat(value, \"\\\"'`\"), path);\n      }\n      return;\n    case 'marginLeft':\n    case 'marginRight':\n    case 'paddingLeft':\n    case 'paddingRight':\n    case 'left':\n    case 'right':\n    case 'borderLeft':\n    case 'borderLeftWidth':\n    case 'borderLeftStyle':\n    case 'borderLeftColor':\n    case 'borderRight':\n    case 'borderRightWidth':\n    case 'borderRightStyle':\n    case 'borderRightColor':\n    case 'borderTopLeftRadius':\n    case 'borderTopRightRadius':\n    case 'borderBottomLeftRadius':\n    case 'borderBottomRightRadius':\n      warning(\"You seem to be using non-logical property '\".concat(key, \"' which is not compatible with RTL mode. Please use logical properties and values instead. For more information: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties.\"), path);\n      return;\n    case 'margin':\n    case 'padding':\n    case 'borderWidth':\n    case 'borderStyle':\n      // case 'borderColor':\n      if (typeof value === 'string') {\n        var valueArr = value.split(' ').map(function (item) {\n          return item.trim();\n        });\n        if (valueArr.length === 4 && valueArr[1] !== valueArr[3]) {\n          warning(\"You seem to be using '\".concat(key, \"' property with different left \").concat(key, \" and right \").concat(key, \", which is not compatible with RTL mode. Please use logical properties and values instead. For more information: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties.\"), path);\n        }\n      }\n      return;\n    case 'clear':\n    case 'textAlign':\n      if (value === 'left' || value === 'right') {\n        warning(\"You seem to be using non-logical value '\".concat(value, \"' of \").concat(key, \", which is not compatible with RTL mode. Please use logical properties and values instead. For more information: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties.\"), path);\n      }\n      return;\n    case 'borderRadius':\n      if (typeof value === 'string') {\n        var radiusGroups = value.split('/').map(function (item) {\n          return item.trim();\n        });\n        var invalid = radiusGroups.reduce(function (result, group) {\n          if (result) {\n            return result;\n          }\n          var radiusArr = group.split(' ').map(function (item) {\n            return item.trim();\n          });\n          // borderRadius: '2px 4px'\n          if (radiusArr.length >= 2 && radiusArr[0] !== radiusArr[1]) {\n            return true;\n          }\n          // borderRadius: '4px 4px 2px'\n          if (radiusArr.length === 3 && radiusArr[1] !== radiusArr[2]) {\n            return true;\n          }\n          // borderRadius: '4px 4px 2px 4px'\n          if (radiusArr.length === 4 && radiusArr[2] !== radiusArr[3]) {\n            return true;\n          }\n          return result;\n        }, false);\n        if (invalid) {\n          warning(\"You seem to be using non-logical value '\".concat(value, \"' of \").concat(key, \", which is not compatible with RTL mode. Please use logical properties and values instead. For more information: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties.\"), path);\n        }\n      }\n      return;\n    case 'animation':\n      if (hashId && value !== 'none') {\n        warning(\"You seem to be using hashed animation '\".concat(value, \"', in which case 'animationName' with Keyframe as value is recommended.\"), path);\n      }\n    default:\n      return;\n  }\n};\nvar layerKey = \"layer-\".concat(Date.now(), \"-\").concat(Math.random()).replace(/\\./g, '');\nvar layerWidth = '903px';\nfunction supportSelector(styleStr, handleElement) {\n  if (canUseDom()) {\n    var _ele$parentNode;\n    updateCSS(styleStr, layerKey);\n    var ele = document.createElement('div');\n    ele.style.position = 'fixed';\n    ele.style.left = '0';\n    ele.style.top = '0';\n    handleElement === null || handleElement === void 0 ? void 0 : handleElement(ele);\n    document.body.appendChild(ele);\n    if (process.env.NODE_ENV !== 'production') {\n      ele.innerHTML = 'Test';\n      ele.style.zIndex = '9999999';\n    }\n    var support = getComputedStyle(ele).width === layerWidth;\n    (_ele$parentNode = ele.parentNode) === null || _ele$parentNode === void 0 ? void 0 : _ele$parentNode.removeChild(ele);\n    removeCSS(layerKey);\n    return support;\n  }\n  return false;\n}\nvar canLayer = undefined;\nexport function supportLayer() {\n  if (canLayer === undefined) {\n    canLayer = supportSelector(\"@layer \".concat(layerKey, \" { .\").concat(layerKey, \" { width: \").concat(layerWidth, \"!important; } }\"), function (ele) {\n      ele.className = layerKey;\n    });\n  }\n  return canLayer;\n}","map":null,"metadata":{},"sourceType":"module"}