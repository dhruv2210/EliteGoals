{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { genComponentStyleHook, mergeToken, PresetColors } from '../../theme/internal';\nimport capitalize from '../../_util/capitalize';\nimport { resetComponent } from '../../style';\nvar genTagStatusStyle = function genTagStatusStyle(token, status, cssVariableType) {\n  var capitalizedCssVariableType = capitalize(cssVariableType);\n  return _defineProperty({}, token.componentCls + \"-\" + status, {\n    color: token[\"color\" + cssVariableType],\n    background: token[\"color\" + capitalizedCssVariableType + \"Bg\"],\n    borderColor: token[\"color\" + capitalizedCssVariableType + \"Border\"]\n  });\n};\n// FIXME: special preset colors\nvar genTagColorStyle = function genTagColorStyle(token) {\n  return PresetColors.reduce(function (prev, colorKey) {\n    var _extends2;\n    var lightColor = token[colorKey + \"-1\"];\n    var lightBorderColor = token[colorKey + \"-3\"];\n    var darkColor = token[colorKey + \"-6\"];\n    var textColor = token[colorKey + \"-7\"];\n    return _extends(_extends({}, prev), (_extends2 = {}, _defineProperty(_extends2, token.componentCls + \"-\" + colorKey, {\n      color: textColor,\n      background: lightColor,\n      borderColor: lightBorderColor\n    }), _defineProperty(_extends2, token.componentCls + \"-\" + colorKey + \"-inverse\", {\n      color: token.colorTextLightSolid,\n      background: darkColor,\n      borderColor: darkColor\n    }), _extends2));\n  }, {});\n};\nvar genBaseStyle = function genBaseStyle(token) {\n  var _extends3;\n  var paddingXXS = token.paddingXXS,\n    lineWidth = token.lineWidth,\n    tagPaddingHorizontal = token.tagPaddingHorizontal;\n  var paddingInline = tagPaddingHorizontal - lineWidth;\n  var iconMarginInline = paddingXXS - lineWidth;\n  return _defineProperty({}, token.componentCls, _extends(_extends({}, resetComponent(token)), (_extends3 = {\n    display: 'inline-block',\n    height: 'auto',\n    marginInlineEnd: token.marginXS,\n    paddingInline: paddingInline,\n    fontSize: token.tagFontSize,\n    lineHeight: token.tagLineHeight + \"px\",\n    whiteSpace: 'nowrap',\n    background: token.tagDefaultBg,\n    border: token.lineWidth + \"px \" + token.lineType + \" \" + token.colorBorder,\n    borderRadius: token.borderRadiusSM,\n    opacity: 1,\n    transition: \"all \" + token.motionDurationMid,\n    textAlign: 'start',\n    // RTL\n    '&&-rtl': {\n      direction: 'rtl'\n    },\n    '&, a, a:hover': {\n      color: token.tagDefaultColor\n    }\n  }, _defineProperty(_extends3, token.componentCls + \"-close-icon\", {\n    marginInlineStart: iconMarginInline,\n    color: token.colorTextDescription,\n    fontSize: token.tagIconSize,\n    cursor: 'pointer',\n    transition: \"all \" + token.motionDurationMid,\n    '&:hover': {\n      color: token.colorTextHeading\n    }\n  }), _defineProperty(_extends3, \"&&-has-color\", _defineProperty({\n    borderColor: 'transparent'\n  }, \"&, a, a:hover, \" + token.iconCls + \"-close, \" + token.iconCls + \"-close:hover\", {\n    color: token.colorTextLightSolid\n  })), _defineProperty(_extends3, \"&-checkable\", {\n    backgroundColor: 'transparent',\n    borderColor: 'transparent',\n    cursor: 'pointer',\n    '&:not(&-checked):hover': {\n      color: token.colorPrimary,\n      backgroundColor: token.colorFillSecondary\n    },\n    '&:active, &-checked': {\n      color: token.colorTextLightSolid\n    },\n    '&-checked': {\n      backgroundColor: token.colorPrimary,\n      '&:hover': {\n        backgroundColor: token.colorPrimaryHover\n      }\n    },\n    '&:active': {\n      backgroundColor: token.colorPrimaryActive\n    }\n  }), _defineProperty(_extends3, \"&-hidden\", {\n    display: 'none'\n  }), _defineProperty(_extends3, \"> \" + token.iconCls + \" + span, > span + \" + token.iconCls, {\n    marginInlineStart: paddingInline\n  }), _extends3)));\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tag', function (token) {\n  var fontSize = token.fontSize,\n    lineHeight = token.lineHeight,\n    lineWidth = token.lineWidth,\n    fontSizeIcon = token.fontSizeIcon;\n  var tagHeight = Math.round(fontSize * lineHeight);\n  var tagFontSize = token.fontSizeSM;\n  var tagLineHeight = tagHeight - lineWidth * 2;\n  var tagDefaultBg = token.colorFillAlter;\n  var tagDefaultColor = token.colorText;\n  var tagToken = mergeToken(token, {\n    tagFontSize: tagFontSize,\n    tagLineHeight: tagLineHeight,\n    tagDefaultBg: tagDefaultBg,\n    tagDefaultColor: tagDefaultColor,\n    tagIconSize: fontSizeIcon - 2 * lineWidth,\n    tagPaddingHorizontal: 8 // Fixed padding.\n  });\n\n  return [genBaseStyle(tagToken), genTagColorStyle(tagToken), genTagStatusStyle(tagToken, 'success', 'Success'), genTagStatusStyle(tagToken, 'processing', 'Info'), genTagStatusStyle(tagToken, 'error', 'Error'), genTagStatusStyle(tagToken, 'warning', 'Warning')];\n});","map":null,"metadata":{},"sourceType":"module"}