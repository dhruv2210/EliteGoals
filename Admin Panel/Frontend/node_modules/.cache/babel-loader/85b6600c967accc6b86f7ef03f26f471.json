{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nvar antProgressActive = new Keyframes('antProgressActive', {\n  '0%': {\n    transform: 'translateX(-100%) scaleX(0)',\n    opacity: 0.1\n  },\n  '20%': {\n    transform: 'translateX(-100%) scaleX(0)',\n    opacity: 0.5\n  },\n  to: {\n    transform: 'translateX(0) scaleX(1)',\n    opacity: 0\n  }\n});\nvar genBaseStyle = function genBaseStyle(token) {\n  var _ref5, _ref7, _extends2;\n  var progressCls = token.componentCls,\n    iconPrefixCls = token.iconCls;\n  return _defineProperty({}, progressCls, _extends(_extends({}, resetComponent(token)), (_extends2 = {\n    display: 'inline-block',\n    '&-rtl': {\n      direction: 'rtl'\n    },\n    '&-line': {\n      position: 'relative',\n      width: '100%',\n      fontSize: token.fontSize,\n      marginInlineEnd: token.marginXS,\n      marginBottom: token.marginXS\n    }\n  }, _defineProperty(_extends2, progressCls + \"-outer\", {\n    display: 'inline-block',\n    width: '100%'\n  }), _defineProperty(_extends2, \"&\" + progressCls + \"-show-info\", _defineProperty({}, progressCls + \"-outer\", {\n    marginInlineEnd: \"calc(-2em - \" + token.marginXS + \"px)\",\n    paddingInlineEnd: \"calc(2em + \" + token.paddingXS + \"px)\"\n  })), _defineProperty(_extends2, progressCls + \"-inner\", {\n    position: 'relative',\n    display: 'inline-block',\n    width: '100%',\n    overflow: 'hidden',\n    verticalAlign: 'middle',\n    backgroundColor: token.progressRemainingColor,\n    borderRadius: token.progressLineRadius\n  }), _defineProperty(_extends2, progressCls + \"-inner:not(\" + progressCls + \"-circle-gradient)\", _defineProperty({}, progressCls + \"-circle-path\", {\n    stroke: token.colorInfo\n  })), _defineProperty(_extends2, \"&\" + progressCls + \"-success-bg, \" + progressCls + \"-bg\", {\n    position: 'relative',\n    backgroundColor: token.colorInfo,\n    borderRadius: token.progressLineRadius,\n    transition: \"all \" + token.motionDurationSlow + \" \" + token.motionEaseInOutCirc\n  }), _defineProperty(_extends2, progressCls + \"-success-bg\", {\n    position: 'absolute',\n    insetBlockStart: 0,\n    insetInlineStart: 0,\n    backgroundColor: token.colorSuccess\n  }), _defineProperty(_extends2, progressCls + \"-text\", _defineProperty({\n    display: 'inline-block',\n    width: '2em',\n    marginInlineStart: token.marginXS,\n    color: token.progressInfoTextColor,\n    lineHeight: 1,\n    whiteSpace: 'nowrap',\n    textAlign: 'start',\n    verticalAlign: 'middle',\n    wordBreak: 'normal'\n  }, iconPrefixCls, {\n    fontSize: token.fontSize\n  })), _defineProperty(_extends2, \"&\" + progressCls + \"-status-active\", _defineProperty({}, progressCls + \"-bg::before\", {\n    position: 'absolute',\n    inset: 0,\n    backgroundColor: token.colorBgContainer,\n    borderRadius: token.progressLineRadius,\n    opacity: 0,\n    animationName: antProgressActive,\n    animationDuration: token.progressActiveMotionDuration,\n    animationTimingFunction: token.motionEaseOutQuint,\n    animationIterationCount: 'infinite',\n    content: '\"\"'\n  })), _defineProperty(_extends2, \"&\" + progressCls + \"-status-exception\", (_ref5 = {}, _defineProperty(_ref5, progressCls + \"-bg\", {\n    backgroundColor: token.colorError\n  }), _defineProperty(_ref5, progressCls + \"-text\", {\n    color: token.colorError\n  }), _ref5)), _defineProperty(_extends2, \"&\" + progressCls + \"-status-exception \" + progressCls + \"-inner:not(\" + progressCls + \"-circle-gradient)\", _defineProperty({}, progressCls + \"-circle-path\", {\n    stroke: token.colorError\n  })), _defineProperty(_extends2, \"&\" + progressCls + \"-status-success\", (_ref7 = {}, _defineProperty(_ref7, progressCls + \"-bg\", {\n    backgroundColor: token.colorSuccess\n  }), _defineProperty(_ref7, progressCls + \"-text\", {\n    color: token.colorSuccess\n  }), _ref7)), _defineProperty(_extends2, \"&\" + progressCls + \"-status-success \" + progressCls + \"-inner:not(\" + progressCls + \"-circle-gradient)\", _defineProperty({}, progressCls + \"-circle-path\", {\n    stroke: token.colorSuccess\n  })), _extends2)));\n};\nvar genCircleStyle = function genCircleStyle(token) {\n  var _progressCls, _ref14;\n  var progressCls = token.componentCls,\n    iconPrefixCls = token.iconCls;\n  return _ref14 = {}, _defineProperty(_ref14, progressCls, (_progressCls = {}, _defineProperty(_progressCls, progressCls + \"-circle-trail\", {\n    stroke: token.progressRemainingColor\n  }), _defineProperty(_progressCls, \"&\" + progressCls + \"-circle \" + progressCls + \"-inner\", {\n    position: 'relative',\n    lineHeight: 1,\n    backgroundColor: 'transparent'\n  }), _defineProperty(_progressCls, \"&\" + progressCls + \"-circle \" + progressCls + \"-text\", _defineProperty({\n    position: 'absolute',\n    insetBlockStart: '50%',\n    insetInlineStart: '50%',\n    width: '100%',\n    margin: 0,\n    padding: 0,\n    color: token.colorText,\n    lineHeight: 1,\n    whiteSpace: 'normal',\n    textAlign: 'center',\n    transform: \"translate(-50%, -50%)\"\n  }, iconPrefixCls, {\n    fontSize: token.fontSize / token.fontSizeSM + \"em\"\n  })), _defineProperty(_progressCls, progressCls + \"-circle&-status-exception\", _defineProperty({}, progressCls + \"-text\", {\n    color: token.colorError\n  })), _defineProperty(_progressCls, progressCls + \"-circle&-status-success\", _defineProperty({}, progressCls + \"-text\", {\n    color: token.colorSuccess\n  })), _progressCls)), _defineProperty(_ref14, progressCls + \"-inline-circle\", _defineProperty({\n    lineHeight: 1\n  }, progressCls + \"-inner\", {\n    verticalAlign: 'bottom'\n  })), _ref14;\n};\nvar genStepStyle = function genStepStyle(token) {\n  var progressCls = token.componentCls;\n  return _defineProperty({}, progressCls, _defineProperty({}, progressCls + \"-steps\", {\n    display: 'inline-block',\n    '&-outer': {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    '&-item': {\n      flexShrink: 0,\n      minWidth: token.progressStepMinWidth,\n      marginInlineEnd: token.progressStepMarginInlineEnd,\n      backgroundColor: token.progressRemainingColor,\n      transition: \"all \" + token.motionDurationSlow,\n      '&-active': {\n        backgroundColor: token.colorInfo\n      }\n    }\n  }));\n};\nvar genSmallLine = function genSmallLine(token) {\n  var progressCls = token.componentCls,\n    iconPrefixCls = token.iconCls;\n  return _defineProperty({}, progressCls, _defineProperty({}, progressCls + \"-small&-line, \" + progressCls + \"-small&-line \" + progressCls + \"-text \" + iconPrefixCls, {\n    fontSize: token.fontSizeSM\n  }));\n};\nexport default genComponentStyleHook('Progress', function (token) {\n  var progressStepMarginInlineEnd = token.marginXXS / 2;\n  var progressToken = mergeToken(token, {\n    progressLineRadius: 100,\n    progressInfoTextColor: token.colorText,\n    progressDefaultColor: token.colorInfo,\n    progressRemainingColor: token.colorFillSecondary,\n    progressStepMarginInlineEnd: progressStepMarginInlineEnd,\n    progressStepMinWidth: progressStepMarginInlineEnd,\n    progressActiveMotionDuration: '2.4s'\n  });\n  return [genBaseStyle(progressToken), genCircleStyle(progressToken), genStepStyle(progressToken), genSmallLine(progressToken)];\n});","map":null,"metadata":{},"sourceType":"module"}