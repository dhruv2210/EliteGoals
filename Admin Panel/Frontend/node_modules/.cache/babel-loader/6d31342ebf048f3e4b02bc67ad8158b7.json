{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { get, isFunction, isNumber, map, maxBy } from '@antv/util';\nimport { FUNNEL_CONVERSATION, FUNNEL_MAPPING_VALUE, FUNNEL_PERCENT } from '../constant';\nexport var CONVERSION_TAG_NAME = 'CONVERSION_TAG_NAME';\n/**\n * 漏斗图 transform\n * @param geometry\n */\nexport function transformData(data, originData, options) {\n  var formatData = [];\n  var yField = options.yField,\n    maxSize = options.maxSize,\n    minSize = options.minSize;\n  var maxYFieldValue = get(maxBy(originData, yField), [yField]);\n  var max = isNumber(maxSize) ? maxSize : 1;\n  var min = isNumber(minSize) ? minSize : 0;\n  // format 数据\n  formatData = map(data, function (row, index) {\n    var percent = (row[yField] || 0) / maxYFieldValue;\n    row[FUNNEL_PERCENT] = percent;\n    row[FUNNEL_MAPPING_VALUE] = (max - min) * percent + min;\n    // 转化率数据存储前后数据\n    row[FUNNEL_CONVERSATION] = [get(data, [index - 1, yField]), row[yField]];\n    return row;\n  });\n  return formatData;\n}\n/**\n * 漏斗图通用转化率组件\n * @param getLineCoordinate 用于获取特定的 line 的位置及配置\n */\nexport function conversionTagComponent(getLineCoordinate) {\n  return function (params) {\n    var chart = params.chart,\n      options = params.options;\n    // @ts-ignore\n    var conversionTag = options.conversionTag,\n      filteredData = options.filteredData;\n    var data = filteredData || chart.getOptions().data;\n    if (conversionTag) {\n      var formatter_1 = conversionTag.formatter;\n      data.forEach(function (obj, index) {\n        if (index <= 0 || Number.isNaN(obj[FUNNEL_MAPPING_VALUE])) return;\n        var lineOption = getLineCoordinate(obj, index, data, {\n          top: true,\n          name: CONVERSION_TAG_NAME,\n          text: {\n            content: isFunction(formatter_1) ? formatter_1(obj, data) : formatter_1,\n            offsetX: conversionTag.offsetX,\n            offsetY: conversionTag.offsetY,\n            position: 'end',\n            autoRotate: false,\n            style: __assign({\n              textAlign: 'start',\n              textBaseline: 'middle'\n            }, conversionTag.style)\n          }\n        });\n        chart.annotation().line(lineOption);\n      });\n    }\n    return params;\n  };\n}","map":null,"metadata":{},"sourceType":"module"}