{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { get, isArray } from '@antv/util';\nimport { deepAssign } from '../../../utils';\nimport { DEFAULT_LEFT_YAXIS_CONFIG, DEFAULT_RIGHT_YAXIS_CONFIG } from '../constant';\nimport { AxisType, DualAxesGeometry } from '../types';\n/**\n * 根据 GeometryOption 判断 geometry 是否为 line\n */\nexport function isLine(geometryOption) {\n  return get(geometryOption, 'geometry') === DualAxesGeometry.Line;\n}\n/**\n * 根据 GeometryOption 判断 geometry 是否为 Column\n */\nexport function isColumn(geometryOption) {\n  return get(geometryOption, 'geometry') === DualAxesGeometry.Column;\n}\n/**\n * 获取 GeometryOption\n * @param geometryOption\n * @param axis\n */\nexport function getGeometryOption(xField, yField, geometryOption) {\n  // 空默认为线\n  return isColumn(geometryOption) ? deepAssign({}, {\n    geometry: DualAxesGeometry.Column,\n    label: geometryOption.label && geometryOption.isRange ? {\n      content: function content(item) {\n        var _a;\n        return (_a = item[yField]) === null || _a === void 0 ? void 0 : _a.join('-');\n      }\n    } : undefined\n  }, geometryOption) : __assign({\n    geometry: DualAxesGeometry.Line\n  }, geometryOption);\n}\n/**\n * 兼容一些属性 为 arr 和 obj 的两种情况， 如 yAxis，annotations\n * 为了防止左右 yField 相同，导致变成 object 之后被覆盖，所以都转变成数组的形式\n * @param yField\n * @param transformAttribute\n */\nexport function transformObjectToArray(yField, transformAttribute) {\n  var y1 = yField[0],\n    y2 = yField[1];\n  if (isArray(transformAttribute)) {\n    // 将数组补齐为两个\n    var a1_1 = transformAttribute[0],\n      a2_1 = transformAttribute[1];\n    return [a1_1, a2_1];\n  }\n  var a1 = get(transformAttribute, y1);\n  var a2 = get(transformAttribute, y2);\n  return [a1, a2];\n}\n/**\n * 获取默认值\n * @param yAxis\n * @param axisType\n */\nexport function getYAxisWithDefault(yAxis, axisType) {\n  if (axisType === AxisType.Left) {\n    return yAxis === false ? false : deepAssign({}, DEFAULT_LEFT_YAXIS_CONFIG, yAxis);\n  } else if (axisType === AxisType.Right) {\n    return yAxis === false ? false : deepAssign({}, DEFAULT_RIGHT_YAXIS_CONFIG, yAxis);\n  }\n  return yAxis;\n}","map":null,"metadata":{},"sourceType":"module"}