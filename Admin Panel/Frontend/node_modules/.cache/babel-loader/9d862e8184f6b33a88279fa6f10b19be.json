{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { get, isNumber, isObject, isUndefined, reduce } from '@antv/util';\nimport { LEVEL, log } from '../../utils';\nimport { ABSOLUTE_FIELD, DIFF_FIELD, IS_TOTAL, Y_FIELD } from './constant';\n/**\n * @desc 数据处理函数，统一将数据处理成[start, end]\n * @param data\n * @param xField\n * @param yField\n * @param totalLabel\n */\nexport function processData(data, xField, yField, newYField, total) {\n  var _a;\n  var newData = [];\n  reduce(data, function (r, d) {\n    var _a;\n    // 校验数据合法性\n    log(LEVEL.WARN, isNumber(d[yField]), d[yField] + \" is not a valid number\");\n    var value = isUndefined(d[yField]) ? null : d[yField];\n    newData.push(__assign(__assign({}, d), (_a = {}, _a[newYField] = [r, r + value], _a)));\n    return r + value;\n  }, 0);\n  // 如果需要展示总和\n  if (newData.length && total) {\n    var sum = get(newData, [[data.length - 1], newYField, [1]]);\n    newData.push((_a = {}, _a[xField] = total.label, _a[yField] = sum, _a[newYField] = [0, sum], _a));\n  }\n  return newData;\n}\n/**\n * 处理为 瀑布图 数据\n */\nexport function transformData(data, xField, yField, total) {\n  var processed = processData(data, xField, yField, Y_FIELD, total);\n  return processed.map(function (d, dIdx) {\n    var _a;\n    if (!isObject(d)) {\n      return d;\n    }\n    return __assign(__assign({}, d), (_a = {}, _a[ABSOLUTE_FIELD] = d[Y_FIELD][1], _a[DIFF_FIELD] = d[Y_FIELD][1] - d[Y_FIELD][0], _a[IS_TOTAL] = dIdx === data.length, _a));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}