{"ast":null,"code":"import { __assign, __read, __spreadArray } from \"tslib\";\nimport { each, isNil, some } from '@antv/util';\nimport { getCoordinate } from '../../dependents';\n/**\n * coordinate controller，职责：\n * 1. 创建实例\n * 2. 暂存配置\n */\nvar CoordinateController = /** @class */function () {\n  function CoordinateController(option) {\n    // 设置默认值，并存储配置\n    this.option = this.wrapperOption(option);\n  }\n  /**\n   * 更新配置\n   * @param option\n   */\n  CoordinateController.prototype.update = function (option) {\n    this.option = this.wrapperOption(option);\n    return this;\n  };\n  /**\n   * 是否存在某一个 action\n   * @param actionName\n   */\n  CoordinateController.prototype.hasAction = function (actionName) {\n    var actions = this.option.actions;\n    return some(actions, function (action) {\n      return action[0] === actionName;\n    });\n  };\n  /**\n   * 创建坐标系对象\n   * @param start 起始位置\n   * @param end   结束位置\n   * @return 坐标系实例\n   */\n  CoordinateController.prototype.create = function (start, end) {\n    var _a = this.option,\n      type = _a.type,\n      cfg = _a.cfg;\n    var isTheta = type === 'theta';\n    // 1. 起始位置\n    var props = __assign({\n      start: start,\n      end: end\n    }, cfg);\n    // 2. 创建实例\n    var C = getCoordinate(isTheta ? 'polar' : type);\n    this.coordinate = new C(props);\n    // @ts-ignore FIXME coordinate 包问题导致 type 不正确\n    this.coordinate.type = type;\n    // 3. 添加默认 action\n    if (isTheta) {\n      // 不存在 transpose，为其自动设置一个 action\n      if (!this.hasAction('transpose')) {\n        this.transpose();\n      }\n    }\n    // 4. 执行 action\n    this.execActions();\n    return this.coordinate;\n  };\n  /**\n   * 更新坐标系对象\n   * @param start 起始位置\n   * @param end   结束位置\n   * @return 坐标系实例\n   */\n  CoordinateController.prototype.adjust = function (start, end) {\n    this.coordinate.update({\n      start: start,\n      end: end\n    });\n    // 更新坐标系大小的时候，需要：\n    // 1. 重置 matrix\n    // 2. 重新执行作用于 matrix 的 action\n    this.coordinate.resetMatrix();\n    this.execActions(['scale', 'rotate', 'translate']);\n    return this.coordinate;\n  };\n  /**\n   * 旋转弧度\n   * @param angle\n   */\n  CoordinateController.prototype.rotate = function (angle) {\n    this.option.actions.push(['rotate', angle]);\n    return this;\n  };\n  /**\n   * 镜像\n   * @param dim\n   */\n  CoordinateController.prototype.reflect = function (dim) {\n    this.option.actions.push(['reflect', dim]);\n    return this;\n  };\n  /**\n   * scale\n   * @param sx\n   * @param sy\n   */\n  CoordinateController.prototype.scale = function (sx, sy) {\n    this.option.actions.push(['scale', sx, sy]);\n    return this;\n  };\n  /**\n   * 对角变换\n   */\n  CoordinateController.prototype.transpose = function () {\n    this.option.actions.push(['transpose']);\n    return this;\n  };\n  /**\n   * 获取配置\n   */\n  CoordinateController.prototype.getOption = function () {\n    return this.option;\n  };\n  /**\n   * 获得 coordinate 实例\n   */\n  CoordinateController.prototype.getCoordinate = function () {\n    return this.coordinate;\n  };\n  /**\n   * 包装配置的默认值\n   * @param option\n   */\n  CoordinateController.prototype.wrapperOption = function (option) {\n    return __assign({\n      type: 'rect',\n      actions: [],\n      cfg: {}\n    }, option);\n  };\n  /**\n   * coordinate 实例执行 actions\n   * @params includeActions 如果没有指定，则执行全部，否则，执行指定的 action\n   */\n  CoordinateController.prototype.execActions = function (includeActions) {\n    var _this = this;\n    var actions = this.option.actions;\n    each(actions, function (action) {\n      var _a;\n      var _b = __read(action),\n        actionName = _b[0],\n        args = _b.slice(1);\n      var shouldExec = isNil(includeActions) ? true : includeActions.includes(actionName);\n      if (shouldExec) {\n        (_a = _this.coordinate)[actionName].apply(_a, __spreadArray([], __read(args), false));\n      }\n    });\n  };\n  return CoordinateController;\n}();\nexport default CoordinateController;","map":null,"metadata":{},"sourceType":"module"}