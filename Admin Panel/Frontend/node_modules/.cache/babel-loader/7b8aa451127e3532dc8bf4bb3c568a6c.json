{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constant';\nimport './interactions';\n/**\n *  CirclePacking\n * @usage hierarchy, proportions\n */\nvar CirclePacking = /** @class */function (_super) {\n  __extends(CirclePacking, _super);\n  function CirclePacking() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n    _this.type = 'circle-packing';\n    return _this;\n  }\n  /**\n   * 获取 面积图 默认配置项\n   * 供外部使用\n   */\n  CirclePacking.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  CirclePacking.prototype.getDefaultOptions = function () {\n    return CirclePacking.getDefaultOptions();\n  };\n  /**\n   * 获取适配器\n   */\n  CirclePacking.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  /**\n   * 覆写父类的方法\n   */\n  CirclePacking.prototype.triggerResize = function () {\n    if (!this.chart.destroyed) {\n      // 首先自适应容器的宽高\n      this.chart.forceFit(); // g2 内部执行 changeSize，changeSize 中执行 render(true)\n      this.chart.clear();\n      this.execAdaptor(); // 核心：宽高更新之后计算padding\n      // 渲染\n      this.chart.render(true);\n    }\n  };\n  return CirclePacking;\n}(Plot);\nexport { CirclePacking };","map":null,"metadata":{},"sourceType":"module"}