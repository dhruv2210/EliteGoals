{"ast":null,"code":"export var roundedArrow = function roundedArrow(width, innerRadius, outerRadius, bgColor, boxShadow) {\n  var unitWidth = width / 2;\n  var ax = unitWidth - outerRadius * (Math.sqrt(2) - 1);\n  var ay = unitWidth;\n  var bx = unitWidth + outerRadius * (1 - 1 / Math.sqrt(2));\n  var by = unitWidth - outerRadius * (1 - 1 / Math.sqrt(2));\n  var cx = 2 * unitWidth - innerRadius * (1 / Math.sqrt(2));\n  var cy = innerRadius * (1 / Math.sqrt(2));\n  var dx = 4 * unitWidth - cx;\n  var dy = cy;\n  var ex = 4 * unitWidth - bx;\n  var ey = by;\n  var fx = 4 * unitWidth - ax;\n  var fy = ay;\n  return {\n    borderRadius: {\n      _skip_check_: true,\n      value: \"0 0 \" + innerRadius + \"px\"\n    },\n    pointerEvents: 'none',\n    width: width * 2,\n    height: width * 2,\n    overflow: 'hidden',\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      width: width / Math.sqrt(2),\n      height: width / Math.sqrt(2),\n      bottom: 0,\n      insetInline: 0,\n      margin: 'auto',\n      borderRadius: {\n        _skip_check_: true,\n        value: \"0 0 \" + innerRadius + \"px 0\"\n      },\n      transform: 'translateY(50%) rotate(-135deg)',\n      boxShadow: boxShadow,\n      zIndex: 0,\n      background: 'transparent'\n    },\n    '&::before': {\n      position: 'absolute',\n      bottom: 0,\n      insetInlineStart: 0,\n      width: width * 2,\n      height: width / 2,\n      background: bgColor,\n      clipPath: \"path('M \" + ax + \" \" + ay + \" A \" + outerRadius + \" \" + outerRadius + \" 0 0 0 \" + bx + \" \" + by + \" L \" + cx + \" \" + cy + \" A \" + innerRadius + \" \" + innerRadius + \" 0 0 1 \" + dx + \" \" + dy + \" L \" + ex + \" \" + ey + \" A \" + outerRadius + \" \" + outerRadius + \" 0 0 0 \" + fx + \" \" + fy + \" Z')\",\n      content: '\"\"'\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module"}