{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport { cloneElement } from '../_util/reactNode';\nimport TimelineItem from './TimelineItem';\n// CSSINJS\nimport useStyle from './style';\nvar Timeline = function Timeline(props) {\n  var _classNames;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var customizePrefixCls = props.prefixCls,\n    _props$pending = props.pending,\n    pending = _props$pending === void 0 ? null : _props$pending,\n    pendingDot = props.pendingDot,\n    children = props.children,\n    className = props.className,\n    _props$reverse = props.reverse,\n    reverse = _props$reverse === void 0 ? false : _props$reverse,\n    _props$mode = props.mode,\n    mode = _props$mode === void 0 ? '' : _props$mode,\n    restProps = __rest(props, [\"prefixCls\", \"pending\", \"pendingDot\", \"children\", \"className\", \"reverse\", \"mode\"]);\n  var prefixCls = getPrefixCls('timeline', customizePrefixCls);\n  var pendingNode = typeof pending === 'boolean' ? null : pending;\n  // Style\n  var _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    wrapSSR = _useStyle2[0],\n    hashId = _useStyle2[1];\n  var pendingItem = pending ? /*#__PURE__*/React.createElement(TimelineItem, {\n    pending: !!pending,\n    dot: pendingDot || /*#__PURE__*/React.createElement(LoadingOutlined, null)\n  }, pendingNode) : null;\n  var timeLineItems = React.Children.toArray(children);\n  timeLineItems.push(pendingItem);\n  if (reverse) {\n    timeLineItems.reverse();\n  }\n  var getPositionCls = function getPositionCls(ele, idx) {\n    if (mode === 'alternate') {\n      if (ele.props.position === 'right') return prefixCls + \"-item-right\";\n      if (ele.props.position === 'left') return prefixCls + \"-item-left\";\n      return idx % 2 === 0 ? prefixCls + \"-item-left\" : prefixCls + \"-item-right\";\n    }\n    if (mode === 'left') return prefixCls + \"-item-left\";\n    if (mode === 'right') return prefixCls + \"-item-right\";\n    if (ele.props.position === 'right') return prefixCls + \"-item-right\";\n    return '';\n  };\n  // Remove falsy items\n  var truthyItems = timeLineItems.filter(function (item) {\n    return !!item;\n  });\n  var itemsCount = React.Children.count(truthyItems);\n  var lastCls = prefixCls + \"-item-last\";\n  var items = React.Children.map(truthyItems, function (ele, idx) {\n    var pendingClass = idx === itemsCount - 2 ? lastCls : '';\n    var readyClass = idx === itemsCount - 1 ? lastCls : '';\n    return cloneElement(ele, {\n      className: classNames([ele.props.className, !reverse && !!pending ? pendingClass : readyClass, getPositionCls(ele, idx)])\n    });\n  });\n  var hasLabelItem = timeLineItems.some(function (item) {\n    var _a;\n    return !!((_a = item === null || item === void 0 ? void 0 : item.props) === null || _a === void 0 ? void 0 : _a.label);\n  });\n  var classString = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, prefixCls + \"-pending\", !!pending), _defineProperty(_classNames, prefixCls + \"-reverse\", !!reverse), _defineProperty(_classNames, prefixCls + \"-\" + mode, !!mode && !hasLabelItem), _defineProperty(_classNames, prefixCls + \"-label\", hasLabelItem), _defineProperty(_classNames, prefixCls + \"-rtl\", direction === 'rtl'), _classNames), className);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"ul\", _extends({}, restProps, {\n    className: classNames(classString, hashId)\n  }), items));\n};\nTimeline.Item = TimelineItem;\nexport default Timeline;","map":null,"metadata":{},"sourceType":"module"}