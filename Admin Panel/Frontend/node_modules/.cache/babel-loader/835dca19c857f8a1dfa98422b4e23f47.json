{"ast":null,"code":"import { prettyNumber } from './pretty-number';\nexport default function pretty(min, max, m) {\n  if (m === void 0) {\n    m = 5;\n  }\n  if (min === max) {\n    return {\n      max: max,\n      min: min,\n      ticks: [min]\n    };\n  }\n  var n = m < 0 ? 0 : Math.round(m);\n  if (n === 0) return {\n    max: max,\n    min: min,\n    ticks: []\n  };\n  /*\n    R pretty:\n    https://svn.r-project.org/R/trunk/src/appl/pretty.c\n    https://www.rdocumentation.org/packages/base/versions/3.5.2/topics/pretty\n    */\n  var h = 1.5; // high.u.bias\n  var h5 = 0.5 + 1.5 * h; // u5.bias\n  // 反正我也不会调参，跳过所有判断步骤\n  var d = max - min;\n  var c = d / n;\n  // 当d非常小的时候触发，但似乎没什么用\n  // const min_n = Math.floor(n / 3);\n  // const shrink_sml = Math.pow(2, 5);\n  // if (Math.log10(d) < -2) {\n  //   c = (_.max([ Math.abs(max), Math.abs(min) ]) * shrink_sml) / min_n;\n  // }\n  var base = Math.pow(10, Math.floor(Math.log10(c)));\n  var unit = base;\n  if (2 * base - c < h * (c - unit)) {\n    unit = 2 * base;\n    if (5 * base - c < h5 * (c - unit)) {\n      unit = 5 * base;\n      if (10 * base - c < h * (c - unit)) {\n        unit = 10 * base;\n      }\n    }\n  }\n  var nu = Math.ceil(max / unit);\n  var ns = Math.floor(min / unit);\n  var hi = Math.max(nu * unit, max);\n  var lo = Math.min(ns * unit, min);\n  var size = Math.floor((hi - lo) / unit) + 1;\n  var ticks = new Array(size);\n  for (var i = 0; i < size; i++) {\n    ticks[i] = prettyNumber(lo + i * unit);\n  }\n  return {\n    min: lo,\n    max: hi,\n    ticks: ticks\n  };\n}","map":null,"metadata":{},"sourceType":"module"}