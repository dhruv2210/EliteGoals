{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { TOOLTIP_CSS_CONST } from '@antv/component';\nimport { deepMix } from '@antv/util';\nimport { HtmlTooltip } from '../../../../dependents';\nimport Action from '../../base';\nimport { getDelegationObject } from '../../util';\nvar AXIS_DESCRIPTION_TOOLTIP = 'aixs-description-tooltip';\nvar AxisDescription = /** @class */function (_super) {\n  __extends(AxisDescription, _super);\n  function AxisDescription() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AxisDescription.prototype.show = function () {\n    var context = this.context;\n    var axis = getDelegationObject(context).axis;\n    var _a = axis.cfg.title,\n      description = _a.description,\n      text = _a.text,\n      descriptionTooltipStyle = _a.descriptionTooltipStyle;\n    var _b = context.event,\n      x = _b.x,\n      y = _b.y;\n    if (!this.tooltip) {\n      this.renderTooltip();\n    }\n    this.tooltip.update({\n      title: text || '',\n      customContent: function customContent() {\n        return \"\\n          <div class=\\\"\".concat(TOOLTIP_CSS_CONST.CONTAINER_CLASS, \"\\\" style={\").concat(descriptionTooltipStyle, \"}>\\n            <div class=\\\"\").concat(TOOLTIP_CSS_CONST.TITLE_CLASS, \"\\\">\\n              \\u5B57\\u6BB5\\u8BF4\\u660E\\uFF1A\").concat(description, \"\\n            </div>\\n          </div>\\n        \");\n      },\n      x: x,\n      y: y\n    });\n    this.tooltip.show();\n  };\n  AxisDescription.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n    this.tooltip && this.tooltip.destroy();\n  };\n  AxisDescription.prototype.hide = function () {\n    this.tooltip && this.tooltip.hide();\n  };\n  AxisDescription.prototype.renderTooltip = function () {\n    var _a;\n    var view = this.context.view;\n    var canvas = view.canvas;\n    var region = {\n      start: {\n        x: 0,\n        y: 0\n      },\n      end: {\n        x: canvas.get('width'),\n        y: canvas.get('height')\n      }\n    };\n    var tooltip = new HtmlTooltip({\n      parent: canvas.get('el').parentNode,\n      region: region,\n      visible: false,\n      containerId: AXIS_DESCRIPTION_TOOLTIP,\n      domStyles: __assign({}, deepMix({}, (_a = {},\n      // 超长的时候，tooltip tip 最大宽度为 50%，然后可以换行\n      _a[TOOLTIP_CSS_CONST.CONTAINER_CLASS] = {\n        'max-width': '50%',\n        padding: '10px',\n        'line-height': '15px',\n        'font-size': '12px',\n        color: 'rgba(0, 0, 0, .65)'\n      }, _a[TOOLTIP_CSS_CONST.TITLE_CLASS] = {\n        'word-break': 'break-all',\n        'margin-bottom': '3px'\n      }, _a)))\n    });\n    tooltip.init();\n    tooltip.setCapture(false);\n    this.tooltip = tooltip;\n  };\n  return AxisDescription;\n}(Action);\nexport default AxisDescription;","map":null,"metadata":{},"sourceType":"module"}