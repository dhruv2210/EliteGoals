{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Dhruv\\\\Desktop\\\\sdp\\\\InvestInGoals\\\\Admin Panel\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport ValidationError from '../ValidationError';\nvar once = function once(cb) {\n  var fired = false;\n  return function () {\n    if (fired) return;\n    fired = true;\n    cb.apply(void 0, arguments);\n  };\n};\nexport default function runTests(options, cb) {\n  var endEarly = options.endEarly,\n    tests = options.tests,\n    args = options.args,\n    value = options.value,\n    errors = options.errors,\n    sort = options.sort,\n    path = options.path;\n  var callback = once(cb);\n  var count = tests.length;\n  var nestedErrors = [];\n  errors = errors ? errors : [];\n  if (!count) return errors.length ? callback(new ValidationError(errors, value, path)) : callback(null, value);\n  for (var i = 0; i < tests.length; i++) {\n    var test = tests[i];\n    test(args, function finishTestRun(err) {\n      if (err) {\n        // always return early for non validation errors\n        if (!ValidationError.isError(err)) {\n          return callback(err, value);\n        }\n        if (endEarly) {\n          err.value = value;\n          return callback(err, value);\n        }\n        nestedErrors.push(err);\n      }\n      if (--count <= 0) {\n        if (nestedErrors.length) {\n          if (sort) nestedErrors.sort(sort); //show parent errors after the nested ones: name.first, name\n\n          if (errors.length) nestedErrors.push.apply(nestedErrors, _toConsumableArray(errors));\n          errors = nestedErrors;\n        }\n        if (errors.length) {\n          callback(new ValidationError(errors, value, path), value);\n          return;\n        }\n        callback(null, value);\n      }\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module"}