{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { map, reduce } from '@antv/util';\nimport { isRealNumber } from '../number';\n/**\n * 对数据进行百分比化\n * @param data\n * @param measure\n * @param groupField\n * @param as\n */\nexport function percent(data, measure, groupField, as) {\n  // 1. 先计算每一个分组的 max 值\n  var sumMap = reduce(data, function (map, datum) {\n    var groupValue = datum[groupField];\n    var sum = map.has(groupValue) ? map.get(groupValue) : 0;\n    var v = datum[measure];\n    sum = isRealNumber(v) ? sum + v : sum;\n    map.set(groupValue, sum);\n    return map;\n  }, new Map());\n  // 2. 循环数组，计算占比\n  return map(data, function (datum) {\n    var _a;\n    var v = datum[measure];\n    var groupValue = datum[groupField];\n    var percentage = isRealNumber(v) && sumMap.get(groupValue) !== 0 ? v / sumMap.get(groupValue) : 0;\n    return __assign(__assign({}, datum), (_a = {}, _a[as] = percentage, _a));\n  });\n}\n/**\n * 对数据进行深层百分比化\n * @param data\n * @param measure  // 数值\n * @param fields // 需要分组的 field值\n * @param as // 存储percent 百分比的值\n */\nexport function getDeepPercent(data, measure, fields, percent) {\n  var sumMap = reduce(data, function (map, datum) {\n    // 获取分组得到的枚举key值\n    var groupValue = reduce(fields, function (value, field) {\n      return \"\" + value + datum[field];\n    }, '');\n    var sum = map.has(groupValue) ? map.get(groupValue) : 0;\n    var v = datum[measure];\n    sum = isRealNumber(v) ? sum + v : sum;\n    map.set(groupValue, sum);\n    return map;\n  }, new Map());\n  // 2. 循环数组，计算占比\n  return map(data, function (datum) {\n    var _a;\n    var v = datum[measure];\n    // 获取分组得到的枚举key值\n    var groupValue = reduce(fields, function (value, field) {\n      return \"\" + value + datum[field];\n    }, '');\n    var percentage = isRealNumber(v) && sumMap.get(groupValue) !== 0 ? v / sumMap.get(groupValue) : 0;\n    return __assign(__assign({}, datum), (_a = {}, _a[percent] = percentage, _a));\n  });\n}\n/**\n * 获取数据，如果是百分比，进行数据转换 (适用于面积图、柱状图、条形图)\n * @param isPercent 是否百分比\n */\nexport function getDataWhetherPercentage(data, yField, groupField, asField, isPercent) {\n  return !isPercent ? data : percent(data, yField, groupField, asField);\n}","map":null,"metadata":{},"sourceType":"module"}