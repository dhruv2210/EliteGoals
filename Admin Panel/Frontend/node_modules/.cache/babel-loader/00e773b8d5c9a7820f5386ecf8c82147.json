{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { clone, each, isFunction } from '@antv/util';\nimport { animation, annotation, scale, theme, tooltip } from '../../adaptor/common';\nimport { getLocale } from '../../core/locale';\nimport { deepAssign, flow } from '../../utils';\nimport { conversionTagFormatter } from '../../utils/conversion';\nimport { FUNNEL_CONVERSATION, FUNNEL_PERCENT } from './constant';\nimport { basicFunnel } from './geometries/basic';\nimport { compareFunnel } from './geometries/compare';\nimport { dynamicHeightFunnel } from './geometries/dynamic-height';\nimport { facetFunnel } from './geometries/facet';\nimport { FUNNEL_LEGEND_FILTER, interactionStart } from './interactions';\n/**\n *\n * 各式漏斗图geometry实现细节有较大不同,\n * 1. 普通漏斗图：interval.shape('funnel')\n * 2. 对比漏斗图：分面\n * 3. 动态高度漏斗图：polypon\n * 4. 分面漏斗图：普通 + list 分面\n* /\n\n/**\n * options 处理\n * @param params\n */\nfunction defaultOptions(params) {\n  var options = params.options;\n  var compareField = options.compareField,\n    xField = options.xField,\n    yField = options.yField,\n    locale = options.locale,\n    funnelStyle = options.funnelStyle,\n    data = options.data;\n  var i18n = getLocale(locale);\n  var defaultOption = {\n    label: compareField ? {\n      fields: [xField, yField, compareField, FUNNEL_PERCENT, FUNNEL_CONVERSATION],\n      formatter: function formatter(datum) {\n        return \"\" + datum[yField];\n      }\n    } : {\n      fields: [xField, yField, FUNNEL_PERCENT, FUNNEL_CONVERSATION],\n      offset: 0,\n      position: 'middle',\n      formatter: function formatter(datum) {\n        return datum[xField] + \" \" + datum[yField];\n      }\n    },\n    tooltip: {\n      title: xField,\n      formatter: function formatter(datum) {\n        return {\n          name: datum[xField],\n          value: datum[yField]\n        };\n      }\n    },\n    conversionTag: {\n      // conversionTag 的计算和显示逻辑统一保持一致\n      formatter: function formatter(datum) {\n        return i18n.get(['conversionTag', 'label']) + \": \" + conversionTagFormatter.apply(void 0, datum[FUNNEL_CONVERSATION]);\n      }\n    }\n  };\n  // 漏斗图样式\n  var style;\n  if (compareField || funnelStyle) {\n    style = function style(datum) {\n      return deepAssign({},\n      // 对比漏斗图默认描边\n      compareField && {\n        lineWidth: 1,\n        stroke: '#fff'\n      }, isFunction(funnelStyle) ? funnelStyle(datum) : funnelStyle);\n    };\n  }\n  return deepAssign({\n    options: defaultOption\n  }, params, {\n    options: {\n      funnelStyle: style,\n      data: clone(data)\n    }\n  });\n}\n/**\n * geometry处理\n * @param params\n */\nfunction geometry(params) {\n  var options = params.options;\n  var compareField = options.compareField,\n    dynamicHeight = options.dynamicHeight,\n    seriesField = options.seriesField;\n  if (seriesField) {\n    return facetFunnel(params);\n  }\n  if (compareField) {\n    return compareFunnel(params);\n  }\n  if (dynamicHeight) {\n    return dynamicHeightFunnel(params);\n  }\n  return basicFunnel(params);\n}\n/**\n * meta 配置\n * @param params\n */\nexport function meta(params) {\n  var _a;\n  var options = params.options;\n  var xAxis = options.xAxis,\n    yAxis = options.yAxis,\n    xField = options.xField,\n    yField = options.yField;\n  return flow(scale((_a = {}, _a[xField] = xAxis, _a[yField] = yAxis, _a)))(params);\n}\n/**\n * 坐标轴\n * @param params\n */\nfunction axis(params) {\n  var chart = params.chart;\n  chart.axis(false);\n  return params;\n}\n/**\n * legend 配置\n * @param params\n */\nfunction legend(params) {\n  var chart = params.chart,\n    options = params.options;\n  var legend = options.legend;\n  if (legend === false) {\n    chart.legend(false);\n  } else {\n    chart.legend(legend);\n    // TODO FIX: legend-click 时间和转化率组件之间的关联\n  }\n\n  return params;\n}\n/**\n * Interaction 配置\n * @param params\n */\nexport function interaction(params) {\n  var chart = params.chart,\n    options = params.options;\n  // @ts-ignore\n  var interactions = options.interactions,\n    dynamicHeight = options.dynamicHeight;\n  each(interactions, function (i) {\n    if (i.enable === false) {\n      chart.removeInteraction(i.type);\n    } else {\n      chart.interaction(i.type, i.cfg || {});\n    }\n  });\n  // 动态高度  不进行交互操作\n  if (!dynamicHeight) {\n    chart.interaction(FUNNEL_LEGEND_FILTER, {\n      start: [__assign(__assign({}, interactionStart), {\n        arg: options\n      })]\n    });\n  } else {\n    chart.removeInteraction(FUNNEL_LEGEND_FILTER);\n  }\n  return params;\n}\n/**\n * 漏斗图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  return flow(defaultOptions, geometry, meta, axis, tooltip, interaction, legend, animation, theme, annotation())(params);\n}","map":null,"metadata":{},"sourceType":"module"}