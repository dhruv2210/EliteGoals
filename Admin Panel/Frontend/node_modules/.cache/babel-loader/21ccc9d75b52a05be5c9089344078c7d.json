{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport Button from '../button';\nimport defaultLocale from '../locale/en_US';\nvar panelRender = function panelRender(props, current, type) {\n  var prefixCls = props.prefixCls,\n    _props$total = props.total,\n    total = _props$total === void 0 ? 1 : _props$total,\n    title = props.title,\n    onClose = props.onClose,\n    onPrev = props.onPrev,\n    onNext = props.onNext,\n    onFinish = props.onFinish,\n    cover = props.cover,\n    description = props.description,\n    nextButtonProps = props.nextButtonProps,\n    prevButtonProps = props.prevButtonProps,\n    stepRender = props.stepRender;\n  var isLastStep = current === total - 1;\n  var prevBtnClick = function prevBtnClick() {\n    onPrev === null || onPrev === void 0 ? void 0 : onPrev();\n    if (typeof (prevButtonProps === null || prevButtonProps === void 0 ? void 0 : prevButtonProps.onClick) === 'function') {\n      prevButtonProps === null || prevButtonProps === void 0 ? void 0 : prevButtonProps.onClick();\n    }\n  };\n  var nextBtnClick = function nextBtnClick() {\n    if (isLastStep) {\n      onFinish === null || onFinish === void 0 ? void 0 : onFinish();\n    } else {\n      onNext === null || onNext === void 0 ? void 0 : onNext();\n    }\n    if (typeof (nextButtonProps === null || nextButtonProps === void 0 ? void 0 : nextButtonProps.onClick) === 'function') {\n      nextButtonProps === null || nextButtonProps === void 0 ? void 0 : nextButtonProps.onClick();\n    }\n  };\n  var headerNode;\n  if (title) {\n    headerNode = /*#__PURE__*/React.createElement(\"div\", {\n      className: prefixCls + \"-header\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: prefixCls + \"-title\"\n    }, title));\n  }\n  var descriptionNode;\n  if (description) {\n    descriptionNode = /*#__PURE__*/React.createElement(\"div\", {\n      className: prefixCls + \"-description\"\n    }, description);\n  }\n  var coverNode;\n  if (cover) {\n    coverNode = /*#__PURE__*/React.createElement(\"div\", {\n      className: prefixCls + \"-cover\"\n    }, cover);\n  }\n  var mergedSlickNode = typeof stepRender === 'function' && stepRender(current, total) || _toConsumableArray(Array.from({\n    length: total\n  }).keys()).map(function (stepItem, index) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: stepItem,\n      className: classNames(index === current && prefixCls + \"-slider-active\", prefixCls + \"-slider\")\n    });\n  });\n  var slickNode = total > 1 ? mergedSlickNode : null;\n  var mainBtnType = type === 'primary' ? 'default' : 'primary';\n  var secondaryBtnProps = {\n    type: 'default',\n    ghost: type === 'primary'\n  };\n  return /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Tour\",\n    defaultLocale: defaultLocale.Tour\n  }, function (contextLocale) {\n    var _a, _b;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CloseOutlined, {\n      className: prefixCls + \"-close\",\n      onClick: onClose\n    }), coverNode, headerNode, descriptionNode, /*#__PURE__*/React.createElement(\"div\", {\n      className: prefixCls + \"-footer\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: prefixCls + \"-sliders\"\n    }, slickNode), /*#__PURE__*/React.createElement(\"div\", {\n      className: prefixCls + \"-buttons\"\n    }, current !== 0 ? /*#__PURE__*/React.createElement(Button, _extends({}, secondaryBtnProps, prevButtonProps, {\n      onClick: prevBtnClick,\n      size: \"small\",\n      className: prefixCls + \"-prev-btn\"\n    }), (_a = prevButtonProps === null || prevButtonProps === void 0 ? void 0 : prevButtonProps.children) !== null && _a !== void 0 ? _a : contextLocale.Previous) : null, /*#__PURE__*/React.createElement(Button, _extends({\n      type: mainBtnType\n    }, nextButtonProps, {\n      onClick: nextBtnClick,\n      size: \"small\",\n      className: prefixCls + \"-next-btn\"\n    }), (_b = nextButtonProps === null || nextButtonProps === void 0 ? void 0 : nextButtonProps.children) !== null && _b !== void 0 ? _b : isLastStep ? contextLocale.Finish : contextLocale.Next))));\n  });\n};\nexport default panelRender;","map":null,"metadata":{},"sourceType":"module"}