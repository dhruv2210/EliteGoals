{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isEmpty, clamp } from '@antv/util';\nimport { registerShape } from '../base';\nimport { getStyle } from '../util/get-style';\nfunction getRectAttrs(points, size) {\n  var width = Math.abs(points[0].x - points[2].x);\n  var height = Math.abs(points[0].y - points[2].y);\n  var len = Math.min(width, height);\n  if (size) {\n    len = clamp(size, 0, Math.min(width, height));\n  }\n  len = len / 2;\n  var centerX = (points[0].x + points[2].x) / 2;\n  var centerY = (points[0].y + points[2].y) / 2;\n  return {\n    x: centerX - len,\n    y: centerY - len,\n    width: len * 2,\n    height: len * 2\n  };\n}\nregisterShape('polygon', 'square', {\n  draw: function draw(cfg, container) {\n    if (!isEmpty(cfg.points)) {\n      var shapeAttrs = getStyle(cfg, true, true);\n      var points = this.parsePoints(cfg.points); // 转换为画布坐标\n      return container.addShape('rect', {\n        attrs: __assign(__assign({}, shapeAttrs), getRectAttrs(points, cfg.size)),\n        name: 'polygon'\n      });\n    }\n  },\n  getMarker: function getMarker(markerCfg) {\n    var color = markerCfg.color;\n    return {\n      symbol: 'square',\n      style: {\n        r: 4,\n        fill: color\n      }\n    };\n  }\n});","map":null,"metadata":{},"sourceType":"module"}