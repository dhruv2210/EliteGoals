{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Event, VIEW_LIFE_CIRCLE } from '@antv/g2';\nimport { Plot } from '../../core/plot';\nimport { adaptor, statistic } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\n// register liquid shape\nimport './shapes/liquid';\nimport { getLiquidData } from './utils';\nexport { addWaterWave } from './shapes/liquid';\n/**\n * 传说中的水波图\n */\nvar Liquid = /** @class */function (_super) {\n  __extends(Liquid, _super);\n  function Liquid() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n    _this.type = 'liquid';\n    return _this;\n  }\n  /**\n   * 获取 饼图 默认配置项\n   * 供外部使用\n   */\n  Liquid.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * 获取 水波图 默认配置项, 供 base 获取\n   */\n  Liquid.prototype.getDefaultOptions = function () {\n    return Liquid.getDefaultOptions();\n  };\n  /**\n   * 更新数据\n   * @param percent\n   */\n  Liquid.prototype.changeData = function (percent) {\n    this.chart.emit(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, Event.fromData(this.chart, VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, null));\n    this.updateOption({\n      percent: percent\n    });\n    this.chart.data(getLiquidData(percent));\n    statistic({\n      chart: this.chart,\n      options: this.options\n    }, true);\n    this.chart.emit(VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, Event.fromData(this.chart, VIEW_LIFE_CIRCLE.AFTER_CHANGE_DATA, null));\n  };\n  /**\n   * 获取适配器\n   */\n  Liquid.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  return Liquid;\n}(Plot);\nexport { Liquid };","map":null,"metadata":{},"sourceType":"module"}