{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport genNotificationPlacementStyle from './placement';\nimport { resetComponent } from '../../style';\nvar genNotificationStyle = function genNotificationStyle(token) {\n  var _extends2, _ref4, _noticeCls;\n  var iconCls = token.iconCls,\n    componentCls = token.componentCls,\n    boxShadowSecondary = token.boxShadowSecondary,\n    fontSizeLG = token.fontSizeLG,\n    notificationMarginBottom = token.notificationMarginBottom,\n    borderRadiusLG = token.borderRadiusLG,\n    colorSuccess = token.colorSuccess,\n    colorInfo = token.colorInfo,\n    colorWarning = token.colorWarning,\n    colorError = token.colorError,\n    colorTextHeading = token.colorTextHeading,\n    notificationBg = token.notificationBg,\n    notificationPadding = token.notificationPadding,\n    notificationMarginEdge = token.notificationMarginEdge,\n    motionDurationMid = token.motionDurationMid,\n    motionEaseInOut = token.motionEaseInOut,\n    fontSize = token.fontSize,\n    lineHeight = token.lineHeight,\n    width = token.width,\n    notificationIconSize = token.notificationIconSize;\n  var noticeCls = componentCls + \"-notice\";\n  var notificationFadeIn = new Keyframes('antNotificationFadeIn', {\n    '0%': {\n      left: {\n        _skip_check_: true,\n        value: width\n      },\n      opacity: 0\n    },\n    '100%': {\n      left: {\n        _skip_check_: true,\n        value: 0\n      },\n      opacity: 1\n    }\n  });\n  var notificationFadeOut = new Keyframes('antNotificationFadeOut', {\n    '0%': {\n      maxHeight: token.animationMaxHeight,\n      marginBottom: notificationMarginBottom,\n      opacity: 1\n    },\n    '100%': {\n      maxHeight: 0,\n      marginBottom: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      opacity: 0\n    }\n  });\n  return [\n  // ============================ Holder ============================\n  _defineProperty({}, componentCls, _extends(_extends(_extends(_extends({}, resetComponent(token)), (_extends2 = {\n    position: 'fixed',\n    zIndex: token.zIndexPopup,\n    marginInlineEnd: notificationMarginEdge\n  }, _defineProperty(_extends2, componentCls + \"-hook-holder\", {\n    position: 'relative'\n  }), _defineProperty(_extends2, \"&\" + componentCls + \"-top, &\" + componentCls + \"-bottom\", _defineProperty({}, componentCls + \"-notice\", {\n    marginInline: 'auto auto'\n  })), _defineProperty(_extends2, \"&\" + componentCls + \"-topLeft, &\" + componentCls + \"-bottomLeft\", _defineProperty({}, componentCls + \"-notice\", {\n    marginInlineEnd: 'auto',\n    marginInlineStart: 0\n  })), _defineProperty(_extends2, componentCls + \"-fade-enter, \" + componentCls + \"-fade-appear\", {\n    animationDuration: token.motionDurationMid,\n    animationTimingFunction: motionEaseInOut,\n    animationFillMode: 'both',\n    opacity: 0,\n    animationPlayState: 'paused'\n  }), _defineProperty(_extends2, componentCls + \"-fade-leave\", {\n    animationTimingFunction: motionEaseInOut,\n    animationFillMode: 'both',\n    animationDuration: motionDurationMid,\n    animationPlayState: 'paused'\n  }), _defineProperty(_extends2, componentCls + \"-fade-enter\" + componentCls + \"-fade-enter-active, \" + componentCls + \"-fade-appear\" + componentCls + \"-fade-appear-active\", {\n    animationName: notificationFadeIn,\n    animationPlayState: 'running'\n  }), _defineProperty(_extends2, componentCls + \"-fade-leave\" + componentCls + \"-fade-leave-active\", {\n    animationName: notificationFadeOut,\n    animationPlayState: 'running'\n  }), _extends2)), genNotificationPlacementStyle(token)), {\n    // RTL\n    '&-rtl': _defineProperty({\n      direction: 'rtl'\n    }, componentCls + \"-notice-btn\", {\n      \"float\": 'left'\n    })\n  })),\n  // ============================ Notice ============================\n  _defineProperty({}, noticeCls, (_noticeCls = {\n    position: 'relative',\n    width: width,\n    maxWidth: \"calc(100vw - \" + notificationMarginEdge * 2 + \"px)\",\n    marginBottom: notificationMarginBottom,\n    marginInlineStart: 'auto',\n    padding: notificationPadding,\n    overflow: 'hidden',\n    lineHeight: lineHeight,\n    wordWrap: 'break-word',\n    background: notificationBg,\n    borderRadius: borderRadiusLG,\n    boxShadow: boxShadowSecondary\n  }, _defineProperty(_noticeCls, componentCls + \"-close-icon\", {\n    fontSize: fontSize,\n    cursor: 'pointer'\n  }), _defineProperty(_noticeCls, noticeCls + \"-message\", {\n    marginBottom: token.marginXS,\n    color: colorTextHeading,\n    fontSize: fontSizeLG,\n    lineHeight: token.lineHeightLG\n  }), _defineProperty(_noticeCls, noticeCls + \"-description\", {\n    fontSize: fontSize\n  }), _defineProperty(_noticeCls, \"&\" + noticeCls + \"-closable \" + noticeCls + \"-message\", {\n    paddingInlineEnd: token.paddingLG\n  }), _defineProperty(_noticeCls, noticeCls + \"-with-icon \" + noticeCls + \"-message\", {\n    marginBottom: token.marginXS,\n    marginInlineStart: token.marginSM + notificationIconSize,\n    fontSize: fontSizeLG\n  }), _defineProperty(_noticeCls, noticeCls + \"-with-icon \" + noticeCls + \"-description\", {\n    marginInlineStart: token.marginSM + notificationIconSize,\n    fontSize: fontSize\n  }), _defineProperty(_noticeCls, noticeCls + \"-icon\", (_ref4 = {\n    position: 'absolute',\n    fontSize: notificationIconSize,\n    lineHeight: 0\n  }, _defineProperty(_ref4, \"&-success\" + iconCls, {\n    color: colorSuccess\n  }), _defineProperty(_ref4, \"&-info\" + iconCls, {\n    color: colorInfo\n  }), _defineProperty(_ref4, \"&-warning\" + iconCls, {\n    color: colorWarning\n  }), _defineProperty(_ref4, \"&-error\" + iconCls, {\n    color: colorError\n  }), _ref4)), _defineProperty(_noticeCls, noticeCls + \"-close\", {\n    position: 'absolute',\n    top: token.notificationPaddingVertical,\n    insetInlineEnd: token.notificationPaddingHorizontal,\n    color: token.colorIcon,\n    outline: 'none',\n    width: token.notificationCloseButtonSize,\n    height: token.notificationCloseButtonSize,\n    borderRadius: token.borderRadiusSM,\n    transition: \"background-color \" + token.motionDurationMid + \", color \" + token.motionDurationMid,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    '&:hover': {\n      color: token.colorIconHover,\n      backgroundColor: token.wireframe ? 'transparent' : token.colorFillContent\n    }\n  }), _defineProperty(_noticeCls, noticeCls + \"-btn\", {\n    \"float\": 'right',\n    marginTop: token.marginSM\n  }), _noticeCls)),\n  // ============================= Pure =============================\n  _defineProperty({}, noticeCls + \"-pure-panel\", {\n    margin: 0\n  })];\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Notification', function (token) {\n  var notificationPaddingVertical = token.paddingMD;\n  var notificationPaddingHorizontal = token.paddingLG;\n  var notificationToken = mergeToken(token, {\n    // default.less variables\n    notificationBg: token.colorBgElevated,\n    notificationPaddingVertical: notificationPaddingVertical,\n    notificationPaddingHorizontal: notificationPaddingHorizontal,\n    // index.less variables\n    notificationPadding: token.paddingMD + \"px \" + token.paddingContentHorizontalLG + \"px\",\n    notificationMarginBottom: token.margin,\n    notificationMarginEdge: token.marginLG,\n    animationMaxHeight: 150,\n    notificationIconSize: token.fontSizeLG * token.lineHeightLG,\n    notificationCloseButtonSize: token.controlHeightLG * 0.55\n  });\n  return [genNotificationStyle(notificationToken)];\n}, function (token) {\n  return {\n    zIndexPopup: token.zIndexPopupBase + 50,\n    width: 384\n  };\n});","map":null,"metadata":{},"sourceType":"module"}