{"ast":null,"code":"import { isString } from '@antv/util';\nimport { animation, annotation, scale, theme } from '../../adaptor/common';\nimport { interval } from '../../adaptor/geometries';\nimport { deepAssign, flow } from '../../utils';\nimport { DEFAULT_COLOR } from './constants';\nimport { getProgressData } from './utils';\n/**\n * 字段\n * @param params\n */\nexport function geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var percent = options.percent,\n    progressStyle = options.progressStyle,\n    color = options.color,\n    barWidthRatio = options.barWidthRatio;\n  chart.data(getProgressData(percent));\n  var p = deepAssign({}, params, {\n    options: {\n      xField: 'current',\n      yField: 'percent',\n      seriesField: 'type',\n      widthRatio: barWidthRatio,\n      interval: {\n        style: progressStyle,\n        color: isString(color) ? [color, DEFAULT_COLOR[1]] : color\n      },\n      args: {\n        zIndexReversed: true,\n        sortZIndex: true\n      }\n    }\n  });\n  interval(p);\n  // 关闭组件\n  chart.tooltip(false);\n  chart.axis(false);\n  chart.legend(false);\n  return params;\n}\n/**\n * other 配置\n * @param params\n */\nfunction coordinate(params) {\n  var chart = params.chart;\n  chart.coordinate('rect').transpose();\n  return params;\n}\n/**\n * 进度图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  // @ts-ignore\n  return flow(geometry, scale({}), coordinate, animation, theme, annotation())(params);\n}","map":null,"metadata":{},"sourceType":"module"}