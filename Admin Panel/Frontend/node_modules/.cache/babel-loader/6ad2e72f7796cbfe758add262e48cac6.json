{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport genGroupStyle from './group';\nimport { genFocusStyle } from '../../style';\nimport { genCompactItemStyle } from '../../style/compact-item';\nimport { genCompactItemVerticalStyle } from '../../style/compact-item-vertical';\n// ============================== Shared ==============================\nvar genSharedButtonStyle = function genSharedButtonStyle(token) {\n  var _componentCls;\n  var componentCls = token.componentCls,\n    iconCls = token.iconCls;\n  return _defineProperty({}, componentCls, (_componentCls = {\n    outline: 'none',\n    position: 'relative',\n    display: 'inline-block',\n    fontWeight: 400,\n    whiteSpace: 'nowrap',\n    textAlign: 'center',\n    backgroundImage: 'none',\n    backgroundColor: 'transparent',\n    border: token.lineWidth + \"px \" + token.lineType + \" transparent\",\n    cursor: 'pointer',\n    transition: \"all \" + token.motionDurationMid + \" \" + token.motionEaseInOut,\n    userSelect: 'none',\n    touchAction: 'manipulation',\n    lineHeight: token.lineHeight,\n    color: token.colorText,\n    '> span': {\n      display: 'inline-block'\n    }\n  }, _defineProperty(_componentCls, \"> \" + iconCls + \" + span, > span + \" + iconCls, {\n    marginInlineStart: token.marginXS\n  }), _defineProperty(_componentCls, '&:not(:disabled)', _extends({}, genFocusStyle(token))), _defineProperty(_componentCls, '&-icon-only&-compact-item', {\n    flex: 'none'\n  }), _defineProperty(_componentCls, \"&-compact-item\" + componentCls + \"-primary\", {\n    '&:not([disabled]) + &:not([disabled])': {\n      position: 'relative',\n      '&:before': {\n        position: 'absolute',\n        top: -token.lineWidth,\n        insetInlineStart: -token.lineWidth,\n        display: 'inline-block',\n        width: token.lineWidth,\n        height: \"calc(100% + \" + token.lineWidth * 2 + \"px)\",\n        backgroundColor: token.colorPrimaryHover,\n        content: '\"\"'\n      }\n    }\n  }), _defineProperty(_componentCls, '&-compact-vertical-item', _defineProperty({}, \"&\" + componentCls + \"-primary\", {\n    '&:not([disabled]) + &:not([disabled])': {\n      position: 'relative',\n      '&:before': {\n        position: 'absolute',\n        top: -token.lineWidth,\n        insetInlineStart: -token.lineWidth,\n        display: 'inline-block',\n        width: \"calc(100% + \" + token.lineWidth * 2 + \"px)\",\n        height: token.lineWidth,\n        backgroundColor: token.colorPrimaryHover,\n        content: '\"\"'\n      }\n    }\n  })), _componentCls));\n};\nvar genHoverActiveButtonStyle = function genHoverActiveButtonStyle(hoverStyle, activeStyle) {\n  return {\n    '&:not(:disabled)': {\n      '&:hover': hoverStyle,\n      '&:active': activeStyle\n    }\n  };\n};\n// ============================== Shape ===============================\nvar genCircleButtonStyle = function genCircleButtonStyle(token) {\n  return {\n    minWidth: token.controlHeight,\n    paddingInlineStart: 0,\n    paddingInlineEnd: 0,\n    borderRadius: '50%'\n  };\n};\nvar genRoundButtonStyle = function genRoundButtonStyle(token) {\n  return {\n    borderRadius: token.controlHeight,\n    paddingInlineStart: token.controlHeight / 2,\n    paddingInlineEnd: token.controlHeight / 2,\n    width: 'auto'\n  };\n};\n// =============================== Type ===============================\nvar genGhostButtonStyle = function genGhostButtonStyle(btnCls, textColor, borderColor, textColorDisabled, borderColorDisabled, hoverStyle, activeStyle) {\n  return _defineProperty({}, \"&\" + btnCls + \"-background-ghost\", _extends(_extends({\n    color: textColor || undefined,\n    backgroundColor: 'transparent',\n    borderColor: borderColor || undefined,\n    boxShadow: 'none'\n  }, genHoverActiveButtonStyle(_extends({\n    backgroundColor: 'transparent'\n  }, hoverStyle), _extends({\n    backgroundColor: 'transparent'\n  }, activeStyle))), {\n    '&:disabled': {\n      cursor: 'not-allowed',\n      color: textColorDisabled || undefined,\n      borderColor: borderColorDisabled || undefined\n    }\n  }));\n};\nvar genSolidDisabledButtonStyle = function genSolidDisabledButtonStyle(token) {\n  return {\n    '&:disabled': {\n      cursor: 'not-allowed',\n      borderColor: token.colorBorder,\n      color: token.colorTextDisabled,\n      backgroundColor: token.colorBgContainerDisabled,\n      boxShadow: 'none'\n    }\n  };\n};\nvar genSolidButtonStyle = function genSolidButtonStyle(token) {\n  return _extends({}, genSolidDisabledButtonStyle(token));\n};\nvar genPureDisabledButtonStyle = function genPureDisabledButtonStyle(token) {\n  return {\n    '&:disabled': {\n      cursor: 'not-allowed',\n      color: token.colorTextDisabled\n    }\n  };\n};\n// Type: Default\nvar genDefaultButtonStyle = function genDefaultButtonStyle(token) {\n  return _extends(_extends(_extends(_extends(_extends({}, genSolidButtonStyle(token)), {\n    backgroundColor: token.colorBgContainer,\n    borderColor: token.colorBorder,\n    boxShadow: \"0 \" + token.controlOutlineWidth + \"px 0 \" + token.controlTmpOutline\n  }), genHoverActiveButtonStyle({\n    color: token.colorPrimaryHover,\n    borderColor: token.colorPrimaryHover\n  }, {\n    color: token.colorPrimaryActive,\n    borderColor: token.colorPrimaryActive\n  })), genGhostButtonStyle(token.componentCls, token.colorBgContainer, token.colorBgContainer, token.colorTextDisabled, token.colorBorder)), _defineProperty({}, \"&\" + token.componentCls + \"-dangerous\", _extends(_extends(_extends({\n    color: token.colorError,\n    borderColor: token.colorError\n  }, genHoverActiveButtonStyle({\n    color: token.colorErrorHover,\n    borderColor: token.colorErrorBorderHover\n  }, {\n    color: token.colorErrorActive,\n    borderColor: token.colorErrorActive\n  })), genGhostButtonStyle(token.componentCls, token.colorError, token.colorError, token.colorTextDisabled, token.colorBorder)), genSolidDisabledButtonStyle(token))));\n};\n// Type: Primary\nvar genPrimaryButtonStyle = function genPrimaryButtonStyle(token) {\n  return _extends(_extends(_extends(_extends(_extends({}, genSolidButtonStyle(token)), {\n    color: token.colorTextLightSolid,\n    backgroundColor: token.colorPrimary,\n    boxShadow: \"0 \" + token.controlOutlineWidth + \"px 0 \" + token.controlOutline\n  }), genHoverActiveButtonStyle({\n    color: token.colorTextLightSolid,\n    backgroundColor: token.colorPrimaryHover\n  }, {\n    color: token.colorTextLightSolid,\n    backgroundColor: token.colorPrimaryActive\n  })), genGhostButtonStyle(token.componentCls, token.colorPrimary, token.colorPrimary, token.colorTextDisabled, token.colorBorder, {\n    color: token.colorPrimaryHover,\n    borderColor: token.colorPrimaryHover\n  }, {\n    color: token.colorPrimaryActive,\n    borderColor: token.colorPrimaryActive\n  })), _defineProperty({}, \"&\" + token.componentCls + \"-dangerous\", _extends(_extends(_extends({\n    backgroundColor: token.colorError,\n    boxShadow: \"0 \" + token.controlOutlineWidth + \"px 0 \" + token.colorErrorOutline\n  }, genHoverActiveButtonStyle({\n    backgroundColor: token.colorErrorHover\n  }, {\n    backgroundColor: token.colorErrorActive\n  })), genGhostButtonStyle(token.componentCls, token.colorError, token.colorError, token.colorTextDisabled, token.colorBorder, {\n    color: token.colorErrorHover,\n    borderColor: token.colorErrorHover\n  }, {\n    color: token.colorErrorActive,\n    borderColor: token.colorErrorActive\n  })), genSolidDisabledButtonStyle(token))));\n};\n// Type: Dashed\nvar genDashedButtonStyle = function genDashedButtonStyle(token) {\n  return _extends(_extends({}, genDefaultButtonStyle(token)), {\n    borderStyle: 'dashed'\n  });\n};\n// Type: Link\nvar genLinkButtonStyle = function genLinkButtonStyle(token) {\n  return _extends(_extends(_extends({\n    color: token.colorLink\n  }, genHoverActiveButtonStyle({\n    color: token.colorLinkHover\n  }, {\n    color: token.colorLinkActive\n  })), genPureDisabledButtonStyle(token)), _defineProperty({}, \"&\" + token.componentCls + \"-dangerous\", _extends(_extends({\n    color: token.colorError\n  }, genHoverActiveButtonStyle({\n    color: token.colorErrorHover\n  }, {\n    color: token.colorErrorActive\n  })), genPureDisabledButtonStyle(token))));\n};\n// Type: Text\nvar genTextButtonStyle = function genTextButtonStyle(token) {\n  return _extends(_extends(_extends({}, genHoverActiveButtonStyle({\n    color: token.colorText,\n    backgroundColor: token.colorBgTextHover\n  }, {\n    color: token.colorText,\n    backgroundColor: token.colorBgTextActive\n  })), genPureDisabledButtonStyle(token)), _defineProperty({}, \"&\" + token.componentCls + \"-dangerous\", _extends(_extends({\n    color: token.colorError\n  }, genPureDisabledButtonStyle(token)), genHoverActiveButtonStyle({\n    color: token.colorErrorHover,\n    backgroundColor: token.colorErrorBg\n  }, {\n    color: token.colorErrorHover,\n    backgroundColor: token.colorErrorBg\n  }))));\n};\nvar genTypeButtonStyle = function genTypeButtonStyle(token) {\n  var _ref3;\n  var componentCls = token.componentCls;\n  return _ref3 = {}, _defineProperty(_ref3, componentCls + \"-default\", genDefaultButtonStyle(token)), _defineProperty(_ref3, componentCls + \"-primary\", genPrimaryButtonStyle(token)), _defineProperty(_ref3, componentCls + \"-dashed\", genDashedButtonStyle(token)), _defineProperty(_ref3, componentCls + \"-link\", genLinkButtonStyle(token)), _defineProperty(_ref3, componentCls + \"-text\", genTextButtonStyle(token)), _ref3;\n};\n// =============================== Size ===============================\nvar genSizeButtonStyle = function genSizeButtonStyle(token) {\n  var _ref4;\n  var sizePrefixCls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var componentCls = token.componentCls,\n    iconCls = token.iconCls;\n  var paddingVertical = Math.max(0, (token.controlHeight - token.fontSize * token.lineHeight) / 2 - token.lineWidth);\n  var paddingHorizontal = token.buttonPaddingHorizontal - token.lineWidth;\n  var iconOnlyCls = componentCls + \"-icon-only\";\n  return [\n  // Size\n  _defineProperty({}, \"\" + componentCls + sizePrefixCls, (_ref4 = {\n    fontSize: token.fontSize,\n    height: token.controlHeight,\n    padding: paddingVertical + \"px \" + paddingHorizontal + \"px\",\n    borderRadius: token.borderRadius\n  }, _defineProperty(_ref4, \"&\" + iconOnlyCls, {\n    width: token.controlHeight,\n    paddingInlineStart: 0,\n    paddingInlineEnd: 0,\n    '> span': {\n      transform: 'scale(1.143)' // 14px -> 16px\n    }\n  }), _defineProperty(_ref4, \"&\" + componentCls + \"-loading\", {\n    opacity: token.opacityLoading,\n    cursor: 'default'\n  }), _defineProperty(_ref4, componentCls + \"-loading-icon\", {\n    transition: \"width \" + token.motionDurationSlow + \" \" + token.motionEaseInOut + \", opacity \" + token.motionDurationSlow + \" \" + token.motionEaseInOut\n  }), _defineProperty(_ref4, \"&:not(\" + iconOnlyCls + \") \" + componentCls + \"-loading-icon > \" + iconCls, {\n    marginInlineEnd: token.marginXS\n  }), _ref4)),\n  // Shape - patch prefixCls again to override solid border radius style\n  _defineProperty({}, \"\" + componentCls + componentCls + \"-circle\" + sizePrefixCls, genCircleButtonStyle(token)), _defineProperty({}, \"\" + componentCls + componentCls + \"-round\" + sizePrefixCls, genRoundButtonStyle(token))];\n};\nvar genSizeBaseButtonStyle = function genSizeBaseButtonStyle(token) {\n  return genSizeButtonStyle(token);\n};\nvar genSizeSmallButtonStyle = function genSizeSmallButtonStyle(token) {\n  var smallToken = mergeToken(token, {\n    controlHeight: token.controlHeightSM,\n    padding: token.paddingXS,\n    buttonPaddingHorizontal: 8,\n    borderRadius: token.borderRadiusSM\n  });\n  return genSizeButtonStyle(smallToken, token.componentCls + \"-sm\");\n};\nvar genSizeLargeButtonStyle = function genSizeLargeButtonStyle(token) {\n  var largeToken = mergeToken(token, {\n    controlHeight: token.controlHeightLG,\n    fontSize: token.fontSizeLG,\n    borderRadius: token.borderRadiusLG\n  });\n  return genSizeButtonStyle(largeToken, token.componentCls + \"-lg\");\n};\nvar genBlockButtonStyle = function genBlockButtonStyle(token) {\n  var componentCls = token.componentCls;\n  return _defineProperty({}, componentCls, _defineProperty({}, \"&\" + componentCls + \"-block\", {\n    width: '100%'\n  }));\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Button', function (token) {\n  var controlTmpOutline = token.controlTmpOutline,\n    paddingContentHorizontal = token.paddingContentHorizontal;\n  var buttonToken = mergeToken(token, {\n    colorOutlineDefault: controlTmpOutline,\n    buttonPaddingHorizontal: paddingContentHorizontal\n  });\n  return [\n  // Shared\n  genSharedButtonStyle(buttonToken),\n  // Size\n  genSizeSmallButtonStyle(buttonToken), genSizeBaseButtonStyle(buttonToken), genSizeLargeButtonStyle(buttonToken),\n  // Block\n  genBlockButtonStyle(buttonToken),\n  // Group (type, ghost, danger, disabled, loading)\n  genTypeButtonStyle(buttonToken),\n  // Button Group\n  genGroupStyle(buttonToken),\n  // Space Compact\n  genCompactItemStyle(token, {\n    focus: false\n  }), genCompactItemVerticalStyle(token)];\n});","map":null,"metadata":{},"sourceType":"module"}