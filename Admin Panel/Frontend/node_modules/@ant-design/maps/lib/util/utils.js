"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.clone = exports.deepClone = exports.getType = exports.isType = void 0;
// 类型检测
var isType = function (value, type) {
    var toString = {}.toString;
    return toString.call(value) === "[object ".concat(type, "]");
};
exports.isType = isType;
var getType = function (n) {
    return Object.prototype.toString.call(n).slice(8, -1);
};
exports.getType = getType;
/**
 * 深克隆
 * @param source 要深克隆的目标对象
 */
var deepClone = function (source) {
    if (!source || typeof source !== 'object') {
        return source;
    }
    var target;
    if (Array.isArray(source)) {
        target = source.map(function (item) { return (0, exports.deepClone)(item); });
    }
    else {
        target = {};
        Object.keys(source).forEach(function (key) {
            return (target[key] = (0, exports.deepClone)(source[key]));
        });
    }
    return target;
};
exports.deepClone = deepClone;
var clone = function (source) {
    if (!source) {
        return source;
    }
    var target = {};
    // eslint-disable-next-line guard-for-in
    for (var k in source) {
        target[k] = source[k];
    }
    return target;
};
exports.clone = clone;
