declare type INode = {
    id: string;
    x?: number;
    y?: number;
    layer?: number;
    [key: string]: unknown;
};
export declare type IRadialSectorLayout = {
    /** 布局中心 [x,y] */
    center: [number, number];
    /** 事件节点坐标 */
    eventNodePosition: [number, number];
    /** 画布当前节点信息，可通过 graph.getNodes().map(n => n.getModel()) 获取 */
    nodes: INode[];
    /** 布局节点，拓展时的新节点，会和当前画布节点做去重处理 */
    layoutNodes: INode[];
    options?: {
        /** 圈层半径 */
        unitRadius: number;
        /** 节点直径 */
        nodeSize: number;
        /** 节点间距 */
        nodeSpacing: number;
    };
};
export declare const radialSectorLayout: (params: IRadialSectorLayout) => INode[];
export {};
