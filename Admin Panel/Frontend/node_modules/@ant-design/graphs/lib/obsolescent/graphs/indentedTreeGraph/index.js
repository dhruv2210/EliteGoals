"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var g6_1 = __importDefault(require("@antv/g6"));
var errorBoundary_1 = __importDefault(require("../../../errorBoundary"));
var useGraph_1 = __importDefault(require("../../hooks/useGraph"));
var createLoading_1 = __importDefault(require("../../../utils/createLoading"));
var utils_1 = require("../utils");
var utils_2 = require("../utils");
var customItems_1 = require("../customItems");
var constants_1 = require("../constants");
var graphs = {};
(0, customItems_1.registerCardNode)();
var defaultLayout = {
    type: 'compactBox',
    direction: 'LR',
    getId: function (d) {
        return d.id;
    },
    getHeight: function () {
        return 60;
    },
    getWidth: function () {
        return 16;
    },
    getVGap: function () {
        return 16;
    },
    getHGap: function () {
        return 100;
    },
};
var defaultProps = {
    nodeType: 'card',
    edgeType: 'cubic-horizontal',
    behaviors: ['zoom-canvas', 'drag-canvas'],
    nodeAnchorPoints: constants_1.defaultNodeAnchorPoints,
    nodeSize: constants_1.defaultNodeSize,
    layout: defaultLayout,
    animate: true,
    markerPosition: 'right',
    nodeStateStyles: constants_1.defaultStateStyles,
    edgeStateStyles: constants_1.defaultStateStyles,
    collapseExpand: true,
    showArrow: true,
    arrowType: 'vee',
    autoFit: true,
    style: {
        height: 'inherit',
    },
};
var IndentedTreeGraph = function (props) {
    var uProps = (0, utils_1.useProps)(props, defaultProps);
    var data = uProps.data, className = uProps.className, style = uProps.style, width = uProps.width, height = uProps.height, _a = uProps.nodeType, nodeType = _a === void 0 ? 'card' : _a, _b = uProps.edgeType, edgeType = _b === void 0 ? 'cubic-horizontal' : _b, _c = uProps.behaviors, behaviors = _c === void 0 ? ['zoom-canvas', 'drag-canvas'] : _c, _d = uProps.nodeAnchorPoints, nodeAnchorPoints = _d === void 0 ? constants_1.defaultNodeAnchorPoints : _d, _e = uProps.nodeSize, nodeSize = _e === void 0 ? constants_1.defaultNodeSize : _e, layout = uProps.layout, _f = uProps.animate, animate = _f === void 0 ? true : _f, nodeStyle = uProps.nodeStyle, edgeStyle = uProps.edgeStyle, edgeCfg = uProps.edgeCfg, markerStyle = uProps.markerStyle, _g = uProps.markerPosition, markerPosition = _g === void 0 ? 'right' : _g, _h = uProps.nodeStateStyles, nodeStateStyles = _h === void 0 ? constants_1.defaultStateStyles : _h, _j = uProps.edgeStateStyles, edgeStateStyles = _j === void 0 ? constants_1.defaultStateStyles : _j, _k = uProps.collapseExpand, collapseExpand = _k === void 0 ? true : _k, titleStyle = uProps.titleStyle, bodyStyle = uProps.bodyStyle, footerStyle = uProps.footerStyle, footerValueStyle = uProps.footerValueStyle, _l = uProps.showArrow, showArrow = _l === void 0 ? true : _l, _m = uProps.arrowType, arrowType = _m === void 0 ? 'vee' : _m, _o = uProps.autoFit, autoFit = _o === void 0 ? true : _o, onReady = uProps.onReady, loading = uProps.loading, loadingTemplate = uProps.loadingTemplate, errorTemplate = uProps.errorTemplate;
    var container = react_1.default.useRef(null);
    var graph = react_1.default.useRef(null);
    var graphId = (0, utils_1.getGraphId)(graph);
    (0, useGraph_1.default)(graphs[graphId], uProps, container);
    (0, react_1.useEffect)(function () {
        var graphSize = (0, utils_1.getGraphSize)(width, height, container);
        var graph = graphs[graphId];
        if (!graph) {
            graph = new g6_1.default.TreeGraph({
                container: container.current,
                width: graphSize[0],
                height: graphSize[1],
                animate: animate,
                modes: {
                    default: behaviors,
                },
                defaultNode: {
                    type: nodeType,
                    size: nodeSize,
                    anchorPoints: nodeAnchorPoints,
                    titleStyle: titleStyle,
                    bodyStyle: bodyStyle,
                    footerStyle: footerStyle,
                    footerValueStyle: footerValueStyle,
                    markerStyle: markerStyle,
                    collapseExpand: collapseExpand,
                    markerPosition: markerPosition,
                },
                defaultEdge: {
                    type: edgeType,
                },
                nodeStateStyles: nodeStateStyles,
                edgeStateStyles: edgeStateStyles,
                layout: layout,
                fitView: autoFit,
            });
            graphs[graphId] = graph;
        }
        graph.node(function (node) {
            if (typeof nodeStyle === 'function') {
                return {
                    style: nodeStyle(node, graph),
                };
            }
            return {
                style: __assign(__assign({}, constants_1.defaultNodeStyle), nodeStyle),
            };
        });
        graph.edge(function (edge) {
            if (edgeCfg) {
                return typeof edgeCfg === 'function' ? edgeCfg(edge, graph) : edgeCfg;
            }
            if (typeof edgeStyle === 'function') {
                return {
                    style: edgeStyle(edge, graph),
                };
            }
            return {
                style: __assign(__assign({ stroke: '#ccc' }, (showArrow && (0, utils_2.getDefaultEdgeArrowCfg)(0, arrowType))), edgeStyle),
            };
        });
        if (collapseExpand) {
            (0, utils_2.bindDefaultEvents)(graph, collapseExpand);
        }
        (0, utils_2.renderGraph)(graph, data);
        if (onReady) {
            onReady(graph);
        }
        return function () {
            if (graphs[graphId]) {
                graphs[graphId].destroy();
                delete graphs[graphId];
            }
        };
    }, []);
    return (react_1.default.createElement(errorBoundary_1.default, { errorTemplate: errorTemplate },
        loading && react_1.default.createElement(createLoading_1.default, { loadingTemplate: loadingTemplate }),
        react_1.default.createElement("div", { className: className, style: style, ref: container })));
};
exports.default = IndentedTreeGraph;
