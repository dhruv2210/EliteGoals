{"version":3,"file":"fn.es.js","sources":["../src/core.ts"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Args = any[];\n\nexport const useAnimationFrame = <Fn extends (...args: Args) => void>(\n  callback: Fn,\n  wait = 0,\n): ((...args: Parameters<Fn>) => void) => {\n  const rafId = useRef(0);\n\n  const render = useCallback(\n    (...args: Parameters<Fn>) => {\n      // Reset previous animation before start new animation\n      cancelAnimationFrame(rafId.current);\n\n      const timeStart = performance.now();\n\n      const renderFrame = (timeNow: number) => {\n        // Call next rAF if time is not up\n        if (timeNow - timeStart < wait) {\n          rafId.current = requestAnimationFrame(renderFrame);\n          return;\n        }\n\n        callback(...args);\n      };\n\n      rafId.current = requestAnimationFrame(renderFrame);\n    },\n    [callback, wait],\n  );\n\n  // Call cancel animation after umount\n  // Stryker disable next-line ArrayDeclaration\n  useEffect(() => () => cancelAnimationFrame(rafId.current), []);\n\n  return render;\n};\n"],"names":["useAnimationFrame","callback","wait","rafId","useRef","render","useCallback","args","cancelAnimationFrame","current","timeStart","performance","now","renderFrame","timeNow","requestAnimationFrame","useEffect"],"mappings":"+DAKA,MAAAA,EAAA,CACAC,EACAC,EAAA,KAEA,MAAAC,EAAAC,EAAA,GAEAC,EAAAC,EACA,IAAAC,KAEAC,qBAAAL,EAAAM,SAEA,MAAAC,EAAAC,YAAAC,MAEAC,EAAAC,IAEAA,EAAAJ,EAAAR,EACAC,EAAAM,QAAAM,sBAAAF,GAIAZ,KAAAM,IAGAJ,EAAAM,QAAAM,sBAAAF,IAEA,CAAAZ,EAAAC,IAOA,OAFAc,EAAA,IAAA,IAAAR,qBAAAL,EAAAM,SAAA,IAEAJ"}