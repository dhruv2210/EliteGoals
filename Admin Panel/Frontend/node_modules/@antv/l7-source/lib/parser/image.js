var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/parser/image.ts
var image_exports = {};
__export(image_exports, {
  default: () => image
});
module.exports = __toCommonJS(image_exports);
var import_l7_utils = require("@antv/l7-utils");
function image(data, cfg) {
  const { extent = [121.168, 30.2828, 121.384, 30.4219] } = cfg;
  const images = new Promise((resolve) => {
    if (data instanceof HTMLImageElement || (0, import_l7_utils.isImageBitmap)(data)) {
      resolve([data]);
    } else {
      loadData(data, (res) => {
        resolve(res);
      });
    }
  });
  const resultData = {
    originData: data,
    images,
    _id: 1,
    dataArray: [
      {
        _id: 0,
        coordinates: [
          [extent[0], extent[1]],
          [extent[2], extent[3]]
        ]
      }
    ]
  };
  return resultData;
}
function loadData(data, done) {
  const url = data;
  const imageDatas = [];
  if (typeof url === "string") {
    (0, import_l7_utils.getImage)({ url }, (err, img) => {
      if (img) {
        imageDatas.push(img);
        done(imageDatas);
      }
    });
  } else {
    const imageCount = url.length;
    let imageindex = 0;
    url.forEach((item) => {
      (0, import_l7_utils.getImage)({ url: item }, (err, img) => {
        imageindex++;
        if (img) {
          imageDatas.push(img);
        }
        if (imageindex === imageCount) {
          done(imageDatas);
        }
      });
    });
  }
  return image;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
