var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/parser/rasterRgb.ts
var rasterRgb_exports = {};
__export(rasterRgb_exports, {
  default: () => rasterRgb
});
module.exports = __toCommonJS(rasterRgb_exports);
var import_bands = require("../utils/bandOperation/bands");
var import_util = require("../utils/util");
function rasterRgb(data, cfg) {
  const { extent, min, max, width, height, format, operation, ...rest } = cfg;
  let bandData;
  if (format === void 0 || (0, import_util.isNumberArray)(data)) {
    bandData = Array.from(data);
  } else {
    const imageDataList = Array.isArray(data) ? data : [data];
    bandData = (0, import_bands.bandsOperation)(imageDataList, format, operation);
  }
  const resultData = {
    _id: 1,
    dataArray: [
      {
        _id: 1,
        data: bandData,
        width,
        height,
        ...rest,
        min,
        max,
        coordinates: [
          [extent[0], extent[1]],
          [extent[2], extent[3]]
        ]
      }
    ]
  };
  return resultData;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
