var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/utils/tile/request.ts
var request_exports = {};
__export(request_exports, {
  bindCancel: () => bindCancel,
  getTileBandParams: () => getTileBandParams,
  getTileUrl: () => getTileUrl
});
module.exports = __toCommonJS(request_exports);
var import_l7_utils = require("@antv/l7-utils");
function getTileUrl(url, tileParams) {
  if (Array.isArray(url)) {
    if (typeof url[0] === "string") {
      return url.map(
        (src) => (0, import_l7_utils.getURLFromTemplate)(src, tileParams)
      );
    } else {
      return url.map((o) => {
        return {
          url: (0, import_l7_utils.getURLFromTemplate)(o.url, tileParams),
          bands: o.bands || [0]
        };
      });
    }
  } else {
    return (0, import_l7_utils.getURLFromTemplate)(url, tileParams);
  }
}
function getTileBandParams(urlBandParam) {
  if (typeof urlBandParam === "string") {
    return [
      {
        url: urlBandParam,
        bands: [0]
      }
    ];
  } else if (typeof urlBandParam[0] === "string") {
    return urlBandParam.map((param) => {
      return {
        url: param,
        bands: [0]
      };
    });
  } else {
    return urlBandParam;
  }
}
function bindCancel(tile, xhrList) {
  tile.xhrCancel = () => {
    xhrList.map((xhr) => {
      xhr.abort();
    });
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  bindCancel,
  getTileBandParams,
  getTileUrl
});
