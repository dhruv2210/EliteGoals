var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/utils/util.ts
var util_exports = {};
__export(util_exports, {
  getColumn: () => getColumn,
  isNumberArray: () => isNumberArray,
  isRasterFileData: () => isRasterFileData,
  isRasterFileDataArray: () => isRasterFileDataArray
});
module.exports = __toCommonJS(util_exports);
function getColumn(data, columnName) {
  return data.map((item) => {
    return item[columnName] * 1;
  });
}
function isRasterFileData(data) {
  if (data === void 0) {
    return false;
  }
  if (!Array.isArray(data) && data.data !== void 0) {
    return true;
  } else {
    return false;
  }
}
function isRasterFileDataArray(data) {
  if (Array.isArray(data)) {
    if (data.length === 0) {
      return false;
    }
    if (isRasterFileData(data[0])) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
}
function isNumberArray(data) {
  if (Array.isArray(data)) {
    if (data.length === 0) {
      return true;
    }
    if (typeof data[0] === "number") {
      return true;
    } else {
      return false;
    }
  }
  return false;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getColumn,
  isNumberArray,
  isRasterFileData,
  isRasterFileDataArray
});
