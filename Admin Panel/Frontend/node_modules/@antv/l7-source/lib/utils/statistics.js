var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/utils/statistics.ts
var statistics_exports = {};
__export(statistics_exports, {
  max: () => max,
  mean: () => mean,
  min: () => min,
  statMap: () => statMap,
  sum: () => sum
});
module.exports = __toCommonJS(statistics_exports);
function max(x) {
  if (x.length === 0) {
    throw new Error("max requires at least one data point");
  }
  let value = x[0];
  for (let i = 1; i < x.length; i++) {
    if (x[i] > value) {
      value = x[i];
    }
  }
  return value;
}
function min(x) {
  if (x.length === 0) {
    throw new Error("min requires at least one data point");
  }
  let value = x[0];
  for (let i = 1; i < x.length; i++) {
    if (x[i] < value) {
      value = x[i];
    }
  }
  return value;
}
function sum(x) {
  if (x.length === 0) {
    return 0;
  }
  let sumNum = x[0];
  let correction = 0;
  let transition;
  for (let i = 1; i < x.length; i++) {
    transition = sumNum + x[i] * 1;
    if (Math.abs(sumNum) >= Math.abs(x[i])) {
      correction += sumNum - transition + x[i];
    } else {
      correction += x[i] - transition + sumNum;
    }
    sumNum = transition;
  }
  return sumNum + correction * 1;
}
function mean(x) {
  if (x.length === 0) {
    throw new Error("mean requires at least one data point");
  }
  return sum(x) / x.length;
}
var statMap = {
  min,
  max,
  mean,
  sum
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  max,
  mean,
  min,
  statMap,
  sum
});
