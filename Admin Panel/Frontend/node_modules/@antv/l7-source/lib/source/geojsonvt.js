var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/source/geojsonvt.ts
var geojsonvt_exports = {};
__export(geojsonvt_exports, {
  default: () => VectorSource
});
module.exports = __toCommonJS(geojsonvt_exports);
var VectorSource = class {
  constructor(vector, x, y, z) {
    this.vectorLayerCache = {};
    this.x = x;
    this.y = y;
    this.z = z;
    this.vectorTile = vector;
  }
  getTileData(sourceLayer) {
    if (!sourceLayer || !this.vectorTile.layers[sourceLayer]) {
      return [];
    }
    if (this.vectorLayerCache[sourceLayer]) {
      return this.vectorLayerCache[sourceLayer];
    }
    const vectorTile = this.vectorTile.layers[sourceLayer];
    return vectorTile.features;
  }
  getFeatureById() {
    throw new Error("Method not implemented.");
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
