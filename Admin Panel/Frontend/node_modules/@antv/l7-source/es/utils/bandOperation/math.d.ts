import { IRasterData } from '../../interface';
/** 数学运算 根据计算表达式进行数学运算
 * * * Math operators:
 * `['*', value1, value2]`
 * `['/', value1, value2]`
 * `['+', value1, value2]`
 * `['-', value1, value2]`
 * `['%', value1, value2]`
 * `['^', value1, value2]`
 * `['abs', value1]`
 * `['floor', value1]`
 * `['round', value1]`
 * `['ceil', value1]`
 * `['sin', value1]`
 * `['cos', value1]`
 * `['atan', value1, value2]`
 */
export declare function mathematical(symbol: string, n1: number, n2: number): number;
/**
 * 根据表达式计算
 * @param express
 * @param bandsData
 */
export declare function calculate(express: any[], bandsData: IRasterData[]): Uint8Array;
type IExpress = any[];
/**
 * 将表达式中的指定波段替换为对应波段的栅格数据
 * @param express
 * @param dataArray
 * @param index
 */
export declare function spellExpress(express: IExpress, dataArray: Uint8Array[], index: number): number | undefined;
export declare function formatExpress(express: IExpress): any[];
export declare function calculateExpress(express: IExpress): number;
export {};
