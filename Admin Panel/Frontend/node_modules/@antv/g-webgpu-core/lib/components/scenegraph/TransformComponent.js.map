{"version":3,"sources":["../../../src/components/scenegraph/TransformComponent.ts"],"names":["TransformComponent","data","dirtyFlag","localDirtyFlag","parent","localPosition","vec3","fromValues","localRotation","quat","localScale","localTransform","mat4","create","position","rotation","scaling","worldTransform","matrixTransform","transformed","mat","multiply","getLocalTransform","getScaling","getTranslation","getRotation","rotateRollPitchYaw","quatX","quatY","quatZ","x","y","z","setDirty","fromEuler","normalize","lerp","aS","aR","aT","bS","bR","bT","a","b","t","slerp","translate","tr","translation","add","getPosition","setPosition","translateLocal","transformQuat","setLocalDirty","parentInvertMatrix","copy","invert","transformMat4","rotate","parentInvertRotation","quaternion","rot","parentRot","rotateLocal","setRotation","invParentRot","mul","scale","value","DIRTY","isLocalDirty","isDirty","fromRotationTranslationScale","getWorldTransform","updateTransform","Component"],"mappings":"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","sourcesContent":["import { mat4, quat, vec3, vec4 } from 'gl-matrix';\nimport { Component, NonFunctionProperties } from '../../ComponentManager';\n\nexport class TransformComponent extends Component<TransformComponent> {\n  public static DIRTY = 1 << 0;\n\n  public dirtyFlag: number;\n\n  public localDirtyFlag: number;\n\n  public parent: TransformComponent | null = null;\n\n  /**\n   * local space RTS\n   */\n\n  /**\n   * XMFLOAT4X4._41\n   * @see https://docs.microsoft.com/en-us/windows/win32/api/directxmath/nf-directxmath-xmfloat4x4-xmfloat4x4(constfloat)#remarks\n   */\n  public localPosition = vec3.fromValues(0, 0, 0);\n  public localRotation = quat.fromValues(0, 0, 0, 1);\n  public localScale = vec3.fromValues(1, 1, 1);\n  public localTransform = mat4.create();\n\n  /**\n   * world space RTS\n   */\n\n  public position = vec3.fromValues(0, 0, 0);\n  public rotation = quat.fromValues(0, 0, 0, 1);\n  public scaling = vec3.fromValues(1, 1, 1);\n  public worldTransform = mat4.create();\n\n  // 高阶函数，利用闭包重复利用临时变量\n  // @see playcanvas graph node\n  public matrixTransform = (() => {\n    const transformed = mat4.create();\n    return (mat: mat4) => {\n      mat4.multiply(transformed, this.getLocalTransform(), mat);\n      mat4.getScaling(this.localScale, transformed);\n      mat4.getTranslation(this.localPosition, transformed);\n      mat4.getRotation(this.localRotation, transformed);\n    };\n  })();\n\n  /**\n   * @see https://docs.microsoft.com/en-us/windows/win32/api/directxmath/nf-directxmath-xmquaternionrotationrollpitchyaw\n   */\n  public rotateRollPitchYaw = (() => {\n    const quatX = quat.create();\n    const quatY = quat.create();\n    const quatZ = quat.create();\n    return (x: number, y: number, z: number) => {\n      this.setDirty();\n\n      quat.fromEuler(quatX, x, 0, 0);\n      quat.fromEuler(quatY, 0, y, 0);\n      quat.fromEuler(quatZ, 0, 0, z);\n\n      quat.multiply(this.localRotation, quatX, this.localRotation);\n      quat.multiply(this.localRotation, this.localRotation, quatY);\n      quat.multiply(this.localRotation, quatZ, this.localRotation);\n      quat.normalize(this.localRotation, this.localRotation);\n    };\n  })();\n\n  /**\n   * @see https://xiaoiver.github.io/coding/2018/12/28/Camera-%E8%AE%BE%E8%AE%A1-%E4%B8%80.html\n   */\n  public lerp = (() => {\n    const aS = vec3.create();\n    const aR = quat.create();\n    const aT = vec3.create();\n    const bS = vec3.create();\n    const bR = quat.create();\n    const bT = vec3.create();\n    return (a: TransformComponent, b: TransformComponent, t: number) => {\n      this.setDirty();\n\n      mat4.getScaling(aS, a.worldTransform);\n      mat4.getTranslation(aT, a.worldTransform);\n      mat4.getRotation(aR, a.worldTransform);\n      mat4.getScaling(bS, b.worldTransform);\n      mat4.getTranslation(bT, b.worldTransform);\n      mat4.getRotation(bR, b.worldTransform);\n\n      vec3.lerp(this.localScale, aS, bS, t);\n      quat.slerp(this.localRotation, aR, bR, t);\n      vec3.lerp(this.localPosition, aT, bT, t);\n    };\n  })();\n\n  /**\n   * TODO: 支持以下两种：\n   * * translate(x, y, z)\n   * * translate(vec3(x, y, z))\n   */\n  public translate = (() => {\n    const tr = vec3.create();\n\n    return (translation: vec3) => {\n      vec3.add(tr, this.getPosition(), translation);\n      this.setPosition(tr);\n\n      this.setDirty(true);\n\n      return this;\n    };\n  })();\n\n  public translateLocal = (() => {\n    return (translation: vec3) => {\n      vec3.transformQuat(translation, translation, this.localRotation);\n      vec3.add(this.localPosition, this.localPosition, translation);\n\n      this.setLocalDirty(true);\n\n      return this;\n    };\n  })();\n\n  public setPosition = (() => {\n    const parentInvertMatrix = mat4.create();\n\n    return (position: vec3) => {\n      this.position = position;\n\n      this.setLocalDirty(true);\n\n      if (this.parent === null) {\n        vec3.copy(this.localPosition, position);\n      } else {\n        mat4.copy(parentInvertMatrix, this.parent.worldTransform);\n        mat4.invert(parentInvertMatrix, parentInvertMatrix);\n        vec3.transformMat4(this.localPosition, position, parentInvertMatrix);\n      }\n      return this;\n    };\n  })();\n\n  public rotate = (() => {\n    const parentInvertRotation = quat.create();\n    return (quaternion: quat) => {\n      if (this.parent === null) {\n        quat.multiply(this.localRotation, this.localRotation, quaternion);\n        quat.normalize(this.localRotation, this.localRotation);\n      } else {\n        const rot = this.getRotation();\n        const parentRot = this.parent.getRotation();\n\n        quat.copy(parentInvertRotation, parentRot);\n        quat.invert(parentInvertRotation, parentInvertRotation);\n        quat.multiply(parentInvertRotation, parentInvertRotation, quaternion);\n        quat.multiply(this.localRotation, quaternion, rot);\n        quat.normalize(this.localRotation, this.localRotation);\n      }\n      this.setLocalDirty();\n      return this;\n    };\n  })();\n\n  public rotateLocal = (() => {\n    return (quaternion: quat) => {\n      quat.multiply(this.localRotation, this.localRotation, quaternion);\n      quat.normalize(this.localRotation, this.localRotation);\n      this.setLocalDirty(true);\n      return this;\n    };\n  })();\n\n  public setRotation = (() => {\n    const invParentRot = quat.create();\n\n    return (rotation: quat) => {\n      if (this.parent === null) {\n        quat.copy(this.localRotation, rotation);\n      } else {\n        quat.copy(invParentRot, this.parent.getRotation());\n        quat.invert(invParentRot, invParentRot);\n        quat.copy(this.localRotation, invParentRot);\n        quat.mul(this.localRotation, this.localRotation, rotation);\n      }\n\n      this.setLocalDirty(true);\n      return this;\n    };\n  })();\n\n  /**\n   * @see https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline\n   */\n  // public catmullRom = (() => {\n  //   const aS = vec3.create();\n  //   const aR = quat.create();\n  //   const aT = vec3.create();\n  //   const bS = vec3.create();\n  //   const bR = quat.create();\n  //   const bT = vec3.create();\n  //   const cS = vec3.create();\n  //   const cR = quat.create();\n  //   const cT = vec3.create();\n  //   const dS = vec3.create();\n  //   const dR = quat.create();\n  //   const dT = vec3.create();\n  //   const R = quat.create();\n  //   return (\n  //     a: TransformComponent,\n  //     b: TransformComponent,\n  //     c: TransformComponent,\n  //     d: TransformComponent,\n  //     t: number,\n  //   ) => {\n  //     this.setDirty();\n  //     mat4.getScaling(aS, a.worldTransform);\n  //     mat4.getTranslation(aT, a.worldTransform);\n  //     mat4.getRotation(aR, a.worldTransform);\n  //     mat4.getScaling(bS, b.worldTransform);\n  //     mat4.getTranslation(bT, b.worldTransform);\n  //     mat4.getRotation(bR, b.worldTransform);\n  //     mat4.getScaling(cS, c.worldTransform);\n  //     mat4.getTranslation(cT, c.worldTransform);\n  //     mat4.getRotation(cR, c.worldTransform);\n  //     mat4.getScaling(dS, d.worldTransform);\n  //     mat4.getTranslation(dT, d.worldTransform);\n  //     mat4.getRotation(dR, d.worldTransform);\n\n  //     vec3.catmullRom(this.localPosition, aT, bT, cT, dT, t);\n  //     vec3.catmullRom(R, aR, bR, cR, dR, t);\n  //     quat.normalize(this.localRotation, R);\n  //     vec3.catmullRom(this.localScale, aS, bS, cS, dS, t);\n  //   };\n  // })();\n\n  constructor(data?: Partial<NonFunctionProperties<TransformComponent>>) {\n    super(data);\n  }\n\n  public setLocalPosition(position: vec3) {\n    vec3.copy(this.localPosition, position);\n    this.setLocalDirty(true);\n  }\n\n  public setLocalScale(scale: vec3) {\n    vec3.copy(this.localScale, scale);\n    this.setLocalDirty(true);\n  }\n\n  public setLocalRotation(rotation: quat) {\n    quat.copy(this.localRotation, rotation);\n\n    this.setLocalDirty(true);\n    return this;\n  }\n\n  public isDirty() {\n    return this.dirtyFlag;\n  }\n\n  public setDirty(value = true) {\n    if (value) {\n      this.dirtyFlag |= TransformComponent.DIRTY;\n    } else {\n      this.dirtyFlag &= ~TransformComponent.DIRTY;\n    }\n  }\n\n  public isLocalDirty() {\n    return this.localDirtyFlag;\n  }\n\n  public setLocalDirty(value = true) {\n    if (value) {\n      this.localDirtyFlag |= TransformComponent.DIRTY;\n      this.setDirty(true);\n    } else {\n      this.localDirtyFlag &= ~TransformComponent.DIRTY;\n    }\n  }\n\n  public updateTransform() {\n    if (this.isLocalDirty()) {\n      this.getLocalTransform();\n    }\n    if (this.isDirty()) {\n      if (this.parent === null) {\n        mat4.copy(this.worldTransform, this.getLocalTransform());\n        this.setDirty(false);\n      }\n    }\n  }\n\n  public updateTransformWithParent(parent: TransformComponent) {\n    mat4.multiply(\n      this.worldTransform,\n      parent.worldTransform,\n      this.getLocalTransform(),\n    );\n  }\n\n  public applyTransform() {\n    this.setDirty();\n\n    mat4.getScaling(this.localScale, this.worldTransform);\n    mat4.getTranslation(this.localPosition, this.worldTransform);\n    mat4.getRotation(this.localRotation, this.worldTransform);\n  }\n\n  public clearTransform() {\n    this.setDirty();\n    this.localPosition = vec3.fromValues(0, 0, 0);\n    this.localRotation = quat.fromValues(0, 0, 0, 1);\n    this.localScale = vec3.fromValues(1, 1, 1);\n  }\n\n  public scaleLocal(scaling: vec3) {\n    this.setLocalDirty();\n    vec3.multiply(this.localScale, this.localScale, scaling);\n    return this;\n  }\n\n  public getLocalPosition() {\n    return this.localPosition;\n  }\n\n  public getLocalRotation() {\n    return this.localRotation;\n  }\n\n  public getLocalScale() {\n    return this.localScale;\n  }\n\n  public getLocalTransform() {\n    if (this.localDirtyFlag) {\n      mat4.fromRotationTranslationScale(\n        this.localTransform,\n        this.localRotation,\n        this.localPosition,\n        this.localScale,\n      );\n      this.setLocalDirty(false);\n    }\n    return this.localTransform;\n  }\n\n  public getWorldTransform() {\n    if (!this.isLocalDirty() && !this.isDirty()) {\n      return this.worldTransform;\n    }\n\n    if (this.parent) {\n      this.parent.getWorldTransform();\n    }\n\n    this.updateTransform();\n\n    return this.worldTransform;\n  }\n\n  public getPosition() {\n    mat4.getTranslation(this.position, this.worldTransform);\n    return this.position;\n  }\n\n  public getRotation() {\n    mat4.getRotation(this.rotation, this.worldTransform);\n    return this.rotation;\n  }\n\n  public getScale() {\n    mat4.getScaling(this.scaling, this.worldTransform);\n    return this.scaling;\n  }\n}\n"],"file":"TransformComponent.js"}