{"version":3,"sources":["../../../src/services/config/ConfigService.ts"],"names":["injectable","ConfigService","config"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,WAA3B;AAoBA,WAAaC,aAAb,WADCD,UAAU,EACX;AAAA;AAAA;;AAAA,SACUE,MADV;AAAA;;AAAA;AAAA;AAAA,0BAGe;AACX,aAAO,KAAKA,MAAZ;AACD;AALH;AAAA;AAAA,wBAOaA,MAPb,EAOuC;AACnC,WAAKA,MAAL,GAAcA,MAAd;AACD;AATH;;AAAA;AAAA","sourcesContent":["import { injectable } from 'inversify';\nimport {\n  IRendererConfig,\n  IRendererService,\n} from '../../components/renderer/IRendererService';\n\nexport interface IConfig {\n  canvas: HTMLCanvasElement;\n  useRenderBundle: boolean;\n  engineOptions: IRendererConfig;\n  onInit: (engine: IRendererService) => void;\n  onUpdate: (engine: IRendererService) => void;\n}\n\nexport interface IConfigService {\n  get(): Partial<IConfig>;\n  set(config: Partial<IConfig>): void;\n}\n\n@injectable()\nexport class ConfigService implements IConfigService {\n  private config: Partial<IConfig>;\n\n  public get() {\n    return this.config;\n  }\n\n  public set(config: Partial<IConfig>) {\n    this.config = config;\n  }\n}\n"],"file":"ConfigService.js"}