{"version":3,"sources":["../../../src/components/scenegraph/TransformComponent.ts"],"names":["mat4","quat","vec3","Component","TransformComponent","data","dirtyFlag","localDirtyFlag","parent","localPosition","fromValues","localRotation","localScale","localTransform","create","position","rotation","scaling","worldTransform","matrixTransform","transformed","mat","multiply","getLocalTransform","getScaling","getTranslation","getRotation","rotateRollPitchYaw","quatX","quatY","quatZ","x","y","z","setDirty","fromEuler","normalize","lerp","aS","aR","aT","bS","bR","bT","a","b","t","slerp","translate","tr","translation","add","getPosition","setPosition","translateLocal","transformQuat","setLocalDirty","parentInvertMatrix","copy","invert","transformMat4","rotate","parentInvertRotation","quaternion","rot","parentRot","rotateLocal","setRotation","invParentRot","mul","scale","value","DIRTY","isLocalDirty","isDirty","fromRotationTranslationScale","getWorldTransform","updateTransform"],"mappings":";;;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,IAArB,QAAuC,WAAvC;AACA,SAASC,SAAT,QAAiD,wBAAjD;AAEA,WAAaC,kBAAb;AAAA;;AAAA;;AASE;AACF;AACA;;AAEE;AACF;AACA;AACA;;AAME;AACF;AACA;AAOE;AACA;;AAWA;AACF;AACA;;AAmBE;AACF;AACA;;AAwBE;AACF;AACA;AACA;AACA;;AA4FE;AACF;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,8BAAYC,IAAZ,EAAuE;AAAA;;AAAA;;AACrE,8BAAMA,IAAN;AADqE,UApOhEC,SAoOgE;AAAA,UAlOhEC,cAkOgE;AAAA,UAhOhEC,MAgOgE,GAhO5B,IAgO4B;AAAA,UAtNhEC,aAsNgE,GAtNhDP,IAAI,CAACQ,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAsNgD;AAAA,UArNhEC,aAqNgE,GArNhDV,IAAI,CAACS,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAqNgD;AAAA,UApNhEE,UAoNgE,GApNnDV,IAAI,CAACQ,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAoNmD;AAAA,UAnNhEG,cAmNgE,GAnN/Cb,IAAI,CAACc,MAAL,EAmN+C;AAAA,UA7MhEC,QA6MgE,GA7MrDb,IAAI,CAACQ,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CA6MqD;AAAA,UA5MhEM,QA4MgE,GA5MrDf,IAAI,CAACS,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CA4MqD;AAAA,UA3MhEO,OA2MgE,GA3MtDf,IAAI,CAACQ,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CA2MsD;AAAA,UA1MhEQ,cA0MgE,GA1M/ClB,IAAI,CAACc,MAAL,EA0M+C;;AAAA,UAtMhEK,eAsMgE,GAtM7C,YAAM;AAC9B,UAAMC,WAAW,GAAGpB,IAAI,CAACc,MAAL,EAApB;AACA,aAAO,UAACO,GAAD,EAAe;AACpBrB,QAAAA,IAAI,CAACsB,QAAL,CAAcF,WAAd,EAA2B,MAAKG,iBAAL,EAA3B,EAAqDF,GAArD;AACArB,QAAAA,IAAI,CAACwB,UAAL,CAAgB,MAAKZ,UAArB,EAAiCQ,WAAjC;AACApB,QAAAA,IAAI,CAACyB,cAAL,CAAoB,MAAKhB,aAAzB,EAAwCW,WAAxC;AACApB,QAAAA,IAAI,CAAC0B,WAAL,CAAiB,MAAKf,aAAtB,EAAqCS,WAArC;AACD,OALD;AAMD,KARwB,EAsM8C;;AAAA,UAzLhEO,kBAyLgE,GAzL1C,YAAM;AACjC,UAAMC,KAAK,GAAG3B,IAAI,CAACa,MAAL,EAAd;AACA,UAAMe,KAAK,GAAG5B,IAAI,CAACa,MAAL,EAAd;AACA,UAAMgB,KAAK,GAAG7B,IAAI,CAACa,MAAL,EAAd;AACA,aAAO,UAACiB,CAAD,EAAYC,CAAZ,EAAuBC,CAAvB,EAAqC;AAC1C,cAAKC,QAAL;;AAEAjC,QAAAA,IAAI,CAACkC,SAAL,CAAeP,KAAf,EAAsBG,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B;AACA9B,QAAAA,IAAI,CAACkC,SAAL,CAAeN,KAAf,EAAsB,CAAtB,EAAyBG,CAAzB,EAA4B,CAA5B;AACA/B,QAAAA,IAAI,CAACkC,SAAL,CAAeL,KAAf,EAAsB,CAAtB,EAAyB,CAAzB,EAA4BG,CAA5B;AAEAhC,QAAAA,IAAI,CAACqB,QAAL,CAAc,MAAKX,aAAnB,EAAkCiB,KAAlC,EAAyC,MAAKjB,aAA9C;AACAV,QAAAA,IAAI,CAACqB,QAAL,CAAc,MAAKX,aAAnB,EAAkC,MAAKA,aAAvC,EAAsDkB,KAAtD;AACA5B,QAAAA,IAAI,CAACqB,QAAL,CAAc,MAAKX,aAAnB,EAAkCmB,KAAlC,EAAyC,MAAKnB,aAA9C;AACAV,QAAAA,IAAI,CAACmC,SAAL,CAAe,MAAKzB,aAApB,EAAmC,MAAKA,aAAxC;AACD,OAXD;AAYD,KAhB2B,EAyL2C;;AAAA,UApKhE0B,IAoKgE,GApKxD,YAAM;AACnB,UAAMC,EAAE,GAAGpC,IAAI,CAACY,MAAL,EAAX;AACA,UAAMyB,EAAE,GAAGtC,IAAI,CAACa,MAAL,EAAX;AACA,UAAM0B,EAAE,GAAGtC,IAAI,CAACY,MAAL,EAAX;AACA,UAAM2B,EAAE,GAAGvC,IAAI,CAACY,MAAL,EAAX;AACA,UAAM4B,EAAE,GAAGzC,IAAI,CAACa,MAAL,EAAX;AACA,UAAM6B,EAAE,GAAGzC,IAAI,CAACY,MAAL,EAAX;AACA,aAAO,UAAC8B,CAAD,EAAwBC,CAAxB,EAA+CC,CAA/C,EAA6D;AAClE,cAAKZ,QAAL;;AAEAlC,QAAAA,IAAI,CAACwB,UAAL,CAAgBc,EAAhB,EAAoBM,CAAC,CAAC1B,cAAtB;AACAlB,QAAAA,IAAI,CAACyB,cAAL,CAAoBe,EAApB,EAAwBI,CAAC,CAAC1B,cAA1B;AACAlB,QAAAA,IAAI,CAAC0B,WAAL,CAAiBa,EAAjB,EAAqBK,CAAC,CAAC1B,cAAvB;AACAlB,QAAAA,IAAI,CAACwB,UAAL,CAAgBiB,EAAhB,EAAoBI,CAAC,CAAC3B,cAAtB;AACAlB,QAAAA,IAAI,CAACyB,cAAL,CAAoBkB,EAApB,EAAwBE,CAAC,CAAC3B,cAA1B;AACAlB,QAAAA,IAAI,CAAC0B,WAAL,CAAiBgB,EAAjB,EAAqBG,CAAC,CAAC3B,cAAvB;AAEAhB,QAAAA,IAAI,CAACmC,IAAL,CAAU,MAAKzB,UAAf,EAA2B0B,EAA3B,EAA+BG,EAA/B,EAAmCK,CAAnC;AACA7C,QAAAA,IAAI,CAAC8C,KAAL,CAAW,MAAKpC,aAAhB,EAA+B4B,EAA/B,EAAmCG,EAAnC,EAAuCI,CAAvC;AACA5C,QAAAA,IAAI,CAACmC,IAAL,CAAU,MAAK5B,aAAf,EAA8B+B,EAA9B,EAAkCG,EAAlC,EAAsCG,CAAtC;AACD,OAbD;AAcD,KArBa,EAoKyD;;AAAA,UAxIhEE,SAwIgE,GAxInD,YAAM;AACxB,UAAMC,EAAE,GAAG/C,IAAI,CAACY,MAAL,EAAX;AAEA,aAAO,UAACoC,WAAD,EAAuB;AAC5BhD,QAAAA,IAAI,CAACiD,GAAL,CAASF,EAAT,EAAa,MAAKG,WAAL,EAAb,EAAiCF,WAAjC;;AACA,cAAKG,WAAL,CAAiBJ,EAAjB;;AAEA,cAAKf,QAAL,CAAc,IAAd;;AAEA;AACD,OAPD;AAQD,KAXkB,EAwIoD;;AAAA,UA3HhEoB,cA2HgE,GA3H9C,YAAM;AAC7B,aAAO,UAACJ,WAAD,EAAuB;AAC5BhD,QAAAA,IAAI,CAACqD,aAAL,CAAmBL,WAAnB,EAAgCA,WAAhC,EAA6C,MAAKvC,aAAlD;AACAT,QAAAA,IAAI,CAACiD,GAAL,CAAS,MAAK1C,aAAd,EAA6B,MAAKA,aAAlC,EAAiDyC,WAAjD;;AAEA,cAAKM,aAAL,CAAmB,IAAnB;;AAEA;AACD,OAPD;AAQD,KATuB,EA2H+C;;AAAA,UAhHhEH,WAgHgE,GAhHjD,YAAM;AAC1B,UAAMI,kBAAkB,GAAGzD,IAAI,CAACc,MAAL,EAA3B;AAEA,aAAO,UAACC,QAAD,EAAoB;AACzB,cAAKA,QAAL,GAAgBA,QAAhB;;AAEA,cAAKyC,aAAL,CAAmB,IAAnB;;AAEA,YAAI,MAAKhD,MAAL,KAAgB,IAApB,EAA0B;AACxBN,UAAAA,IAAI,CAACwD,IAAL,CAAU,MAAKjD,aAAf,EAA8BM,QAA9B;AACD,SAFD,MAEO;AACLf,UAAAA,IAAI,CAAC0D,IAAL,CAAUD,kBAAV,EAA8B,MAAKjD,MAAL,CAAYU,cAA1C;AACAlB,UAAAA,IAAI,CAAC2D,MAAL,CAAYF,kBAAZ,EAAgCA,kBAAhC;AACAvD,UAAAA,IAAI,CAAC0D,aAAL,CAAmB,MAAKnD,aAAxB,EAAuCM,QAAvC,EAAiD0C,kBAAjD;AACD;;AACD;AACD,OAbD;AAcD,KAjBoB,EAgHkD;;AAAA,UA7FhEI,MA6FgE,GA7FtD,YAAM;AACrB,UAAMC,oBAAoB,GAAG7D,IAAI,CAACa,MAAL,EAA7B;AACA,aAAO,UAACiD,UAAD,EAAsB;AAC3B,YAAI,MAAKvD,MAAL,KAAgB,IAApB,EAA0B;AACxBP,UAAAA,IAAI,CAACqB,QAAL,CAAc,MAAKX,aAAnB,EAAkC,MAAKA,aAAvC,EAAsDoD,UAAtD;AACA9D,UAAAA,IAAI,CAACmC,SAAL,CAAe,MAAKzB,aAApB,EAAmC,MAAKA,aAAxC;AACD,SAHD,MAGO;AACL,cAAMqD,GAAG,GAAG,MAAKtC,WAAL,EAAZ;;AACA,cAAMuC,SAAS,GAAG,MAAKzD,MAAL,CAAYkB,WAAZ,EAAlB;;AAEAzB,UAAAA,IAAI,CAACyD,IAAL,CAAUI,oBAAV,EAAgCG,SAAhC;AACAhE,UAAAA,IAAI,CAAC0D,MAAL,CAAYG,oBAAZ,EAAkCA,oBAAlC;AACA7D,UAAAA,IAAI,CAACqB,QAAL,CAAcwC,oBAAd,EAAoCA,oBAApC,EAA0DC,UAA1D;AACA9D,UAAAA,IAAI,CAACqB,QAAL,CAAc,MAAKX,aAAnB,EAAkCoD,UAAlC,EAA8CC,GAA9C;AACA/D,UAAAA,IAAI,CAACmC,SAAL,CAAe,MAAKzB,aAApB,EAAmC,MAAKA,aAAxC;AACD;;AACD,cAAK6C,aAAL;;AACA;AACD,OAhBD;AAiBD,KAnBe,EA6FuD;;AAAA,UAxEhEU,WAwEgE,GAxEjD,YAAM;AAC1B,aAAO,UAACH,UAAD,EAAsB;AAC3B9D,QAAAA,IAAI,CAACqB,QAAL,CAAc,MAAKX,aAAnB,EAAkC,MAAKA,aAAvC,EAAsDoD,UAAtD;AACA9D,QAAAA,IAAI,CAACmC,SAAL,CAAe,MAAKzB,aAApB,EAAmC,MAAKA,aAAxC;;AACA,cAAK6C,aAAL,CAAmB,IAAnB;;AACA;AACD,OALD;AAMD,KAPoB,EAwEkD;;AAAA,UA/DhEW,WA+DgE,GA/DjD,YAAM;AAC1B,UAAMC,YAAY,GAAGnE,IAAI,CAACa,MAAL,EAArB;AAEA,aAAO,UAACE,QAAD,EAAoB;AACzB,YAAI,MAAKR,MAAL,KAAgB,IAApB,EAA0B;AACxBP,UAAAA,IAAI,CAACyD,IAAL,CAAU,MAAK/C,aAAf,EAA8BK,QAA9B;AACD,SAFD,MAEO;AACLf,UAAAA,IAAI,CAACyD,IAAL,CAAUU,YAAV,EAAwB,MAAK5D,MAAL,CAAYkB,WAAZ,EAAxB;AACAzB,UAAAA,IAAI,CAAC0D,MAAL,CAAYS,YAAZ,EAA0BA,YAA1B;AACAnE,UAAAA,IAAI,CAACyD,IAAL,CAAU,MAAK/C,aAAf,EAA8ByD,YAA9B;AACAnE,UAAAA,IAAI,CAACoE,GAAL,CAAS,MAAK1D,aAAd,EAA6B,MAAKA,aAAlC,EAAiDK,QAAjD;AACD;;AAED,cAAKwC,aAAL,CAAmB,IAAnB;;AACA;AACD,OAZD;AAaD,KAhBoB,EA+DkD;;AAAA;AAEtE;;AAzOH;AAAA;AAAA,qCA2O0BzC,QA3O1B,EA2O0C;AACtCb,MAAAA,IAAI,CAACwD,IAAL,CAAU,KAAKjD,aAAf,EAA8BM,QAA9B;AACA,WAAKyC,aAAL,CAAmB,IAAnB;AACD;AA9OH;AAAA;AAAA,kCAgPuBc,KAhPvB,EAgPoC;AAChCpE,MAAAA,IAAI,CAACwD,IAAL,CAAU,KAAK9C,UAAf,EAA2B0D,KAA3B;AACA,WAAKd,aAAL,CAAmB,IAAnB;AACD;AAnPH;AAAA;AAAA,qCAqP0BxC,QArP1B,EAqP0C;AACtCf,MAAAA,IAAI,CAACyD,IAAL,CAAU,KAAK/C,aAAf,EAA8BK,QAA9B;AAEA,WAAKwC,aAAL,CAAmB,IAAnB;AACA,aAAO,IAAP;AACD;AA1PH;AAAA;AAAA,8BA4PmB;AACf,aAAO,KAAKlD,SAAZ;AACD;AA9PH;AAAA;AAAA,+BAgQgC;AAAA,UAAdiE,KAAc,uEAAN,IAAM;;AAC5B,UAAIA,KAAJ,EAAW;AACT,aAAKjE,SAAL,IAAkBF,kBAAkB,CAACoE,KAArC;AACD,OAFD,MAEO;AACL,aAAKlE,SAAL,IAAkB,CAACF,kBAAkB,CAACoE,KAAtC;AACD;AACF;AAtQH;AAAA;AAAA,mCAwQwB;AACpB,aAAO,KAAKjE,cAAZ;AACD;AA1QH;AAAA;AAAA,oCA4QqC;AAAA,UAAdgE,KAAc,uEAAN,IAAM;;AACjC,UAAIA,KAAJ,EAAW;AACT,aAAKhE,cAAL,IAAuBH,kBAAkB,CAACoE,KAA1C;AACA,aAAKtC,QAAL,CAAc,IAAd;AACD,OAHD,MAGO;AACL,aAAK3B,cAAL,IAAuB,CAACH,kBAAkB,CAACoE,KAA3C;AACD;AACF;AAnRH;AAAA;AAAA,sCAqR2B;AACvB,UAAI,KAAKC,YAAL,EAAJ,EAAyB;AACvB,aAAKlD,iBAAL;AACD;;AACD,UAAI,KAAKmD,OAAL,EAAJ,EAAoB;AAClB,YAAI,KAAKlE,MAAL,KAAgB,IAApB,EAA0B;AACxBR,UAAAA,IAAI,CAAC0D,IAAL,CAAU,KAAKxC,cAAf,EAA+B,KAAKK,iBAAL,EAA/B;AACA,eAAKW,QAAL,CAAc,KAAd;AACD;AACF;AACF;AA/RH;AAAA;AAAA,8CAiSmC1B,MAjSnC,EAiS+D;AAC3DR,MAAAA,IAAI,CAACsB,QAAL,CACE,KAAKJ,cADP,EAEEV,MAAM,CAACU,cAFT,EAGE,KAAKK,iBAAL,EAHF;AAKD;AAvSH;AAAA;AAAA,qCAyS0B;AACtB,WAAKW,QAAL;AAEAlC,MAAAA,IAAI,CAACwB,UAAL,CAAgB,KAAKZ,UAArB,EAAiC,KAAKM,cAAtC;AACAlB,MAAAA,IAAI,CAACyB,cAAL,CAAoB,KAAKhB,aAAzB,EAAwC,KAAKS,cAA7C;AACAlB,MAAAA,IAAI,CAAC0B,WAAL,CAAiB,KAAKf,aAAtB,EAAqC,KAAKO,cAA1C;AACD;AA/SH;AAAA;AAAA,qCAiT0B;AACtB,WAAKgB,QAAL;AACA,WAAKzB,aAAL,GAAqBP,IAAI,CAACQ,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAArB;AACA,WAAKC,aAAL,GAAqBV,IAAI,CAACS,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAArB;AACA,WAAKE,UAAL,GAAkBV,IAAI,CAACQ,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAlB;AACD;AAtTH;AAAA;AAAA,+BAwToBO,OAxTpB,EAwTmC;AAC/B,WAAKuC,aAAL;AACAtD,MAAAA,IAAI,CAACoB,QAAL,CAAc,KAAKV,UAAnB,EAA+B,KAAKA,UAApC,EAAgDK,OAAhD;AACA,aAAO,IAAP;AACD;AA5TH;AAAA;AAAA,uCA8T4B;AACxB,aAAO,KAAKR,aAAZ;AACD;AAhUH;AAAA;AAAA,uCAkU4B;AACxB,aAAO,KAAKE,aAAZ;AACD;AApUH;AAAA;AAAA,oCAsUyB;AACrB,aAAO,KAAKC,UAAZ;AACD;AAxUH;AAAA;AAAA,wCA0U6B;AACzB,UAAI,KAAKL,cAAT,EAAyB;AACvBP,QAAAA,IAAI,CAAC2E,4BAAL,CACE,KAAK9D,cADP,EAEE,KAAKF,aAFP,EAGE,KAAKF,aAHP,EAIE,KAAKG,UAJP;AAMA,aAAK4C,aAAL,CAAmB,KAAnB;AACD;;AACD,aAAO,KAAK3C,cAAZ;AACD;AArVH;AAAA;AAAA,wCAuV6B;AACzB,UAAI,CAAC,KAAK4D,YAAL,EAAD,IAAwB,CAAC,KAAKC,OAAL,EAA7B,EAA6C;AAC3C,eAAO,KAAKxD,cAAZ;AACD;;AAED,UAAI,KAAKV,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYoE,iBAAZ;AACD;;AAED,WAAKC,eAAL;AAEA,aAAO,KAAK3D,cAAZ;AACD;AAnWH;AAAA;AAAA,kCAqWuB;AACnBlB,MAAAA,IAAI,CAACyB,cAAL,CAAoB,KAAKV,QAAzB,EAAmC,KAAKG,cAAxC;AACA,aAAO,KAAKH,QAAZ;AACD;AAxWH;AAAA;AAAA,kCA0WuB;AACnBf,MAAAA,IAAI,CAAC0B,WAAL,CAAiB,KAAKV,QAAtB,EAAgC,KAAKE,cAArC;AACA,aAAO,KAAKF,QAAZ;AACD;AA7WH;AAAA;AAAA,+BA+WoB;AAChBhB,MAAAA,IAAI,CAACwB,UAAL,CAAgB,KAAKP,OAArB,EAA8B,KAAKC,cAAnC;AACA,aAAO,KAAKD,OAAZ;AACD;AAlXH;;AAAA;AAAA,EAAwCd,SAAxC;AAAaC,kB,CACGoE,K,GAAQ,KAAK,C","sourcesContent":["import { mat4, quat, vec3, vec4 } from 'gl-matrix';\nimport { Component, NonFunctionProperties } from '../../ComponentManager';\n\nexport class TransformComponent extends Component<TransformComponent> {\n  public static DIRTY = 1 << 0;\n\n  public dirtyFlag: number;\n\n  public localDirtyFlag: number;\n\n  public parent: TransformComponent | null = null;\n\n  /**\n   * local space RTS\n   */\n\n  /**\n   * XMFLOAT4X4._41\n   * @see https://docs.microsoft.com/en-us/windows/win32/api/directxmath/nf-directxmath-xmfloat4x4-xmfloat4x4(constfloat)#remarks\n   */\n  public localPosition = vec3.fromValues(0, 0, 0);\n  public localRotation = quat.fromValues(0, 0, 0, 1);\n  public localScale = vec3.fromValues(1, 1, 1);\n  public localTransform = mat4.create();\n\n  /**\n   * world space RTS\n   */\n\n  public position = vec3.fromValues(0, 0, 0);\n  public rotation = quat.fromValues(0, 0, 0, 1);\n  public scaling = vec3.fromValues(1, 1, 1);\n  public worldTransform = mat4.create();\n\n  // 高阶函数，利用闭包重复利用临时变量\n  // @see playcanvas graph node\n  public matrixTransform = (() => {\n    const transformed = mat4.create();\n    return (mat: mat4) => {\n      mat4.multiply(transformed, this.getLocalTransform(), mat);\n      mat4.getScaling(this.localScale, transformed);\n      mat4.getTranslation(this.localPosition, transformed);\n      mat4.getRotation(this.localRotation, transformed);\n    };\n  })();\n\n  /**\n   * @see https://docs.microsoft.com/en-us/windows/win32/api/directxmath/nf-directxmath-xmquaternionrotationrollpitchyaw\n   */\n  public rotateRollPitchYaw = (() => {\n    const quatX = quat.create();\n    const quatY = quat.create();\n    const quatZ = quat.create();\n    return (x: number, y: number, z: number) => {\n      this.setDirty();\n\n      quat.fromEuler(quatX, x, 0, 0);\n      quat.fromEuler(quatY, 0, y, 0);\n      quat.fromEuler(quatZ, 0, 0, z);\n\n      quat.multiply(this.localRotation, quatX, this.localRotation);\n      quat.multiply(this.localRotation, this.localRotation, quatY);\n      quat.multiply(this.localRotation, quatZ, this.localRotation);\n      quat.normalize(this.localRotation, this.localRotation);\n    };\n  })();\n\n  /**\n   * @see https://xiaoiver.github.io/coding/2018/12/28/Camera-%E8%AE%BE%E8%AE%A1-%E4%B8%80.html\n   */\n  public lerp = (() => {\n    const aS = vec3.create();\n    const aR = quat.create();\n    const aT = vec3.create();\n    const bS = vec3.create();\n    const bR = quat.create();\n    const bT = vec3.create();\n    return (a: TransformComponent, b: TransformComponent, t: number) => {\n      this.setDirty();\n\n      mat4.getScaling(aS, a.worldTransform);\n      mat4.getTranslation(aT, a.worldTransform);\n      mat4.getRotation(aR, a.worldTransform);\n      mat4.getScaling(bS, b.worldTransform);\n      mat4.getTranslation(bT, b.worldTransform);\n      mat4.getRotation(bR, b.worldTransform);\n\n      vec3.lerp(this.localScale, aS, bS, t);\n      quat.slerp(this.localRotation, aR, bR, t);\n      vec3.lerp(this.localPosition, aT, bT, t);\n    };\n  })();\n\n  /**\n   * TODO: 支持以下两种：\n   * * translate(x, y, z)\n   * * translate(vec3(x, y, z))\n   */\n  public translate = (() => {\n    const tr = vec3.create();\n\n    return (translation: vec3) => {\n      vec3.add(tr, this.getPosition(), translation);\n      this.setPosition(tr);\n\n      this.setDirty(true);\n\n      return this;\n    };\n  })();\n\n  public translateLocal = (() => {\n    return (translation: vec3) => {\n      vec3.transformQuat(translation, translation, this.localRotation);\n      vec3.add(this.localPosition, this.localPosition, translation);\n\n      this.setLocalDirty(true);\n\n      return this;\n    };\n  })();\n\n  public setPosition = (() => {\n    const parentInvertMatrix = mat4.create();\n\n    return (position: vec3) => {\n      this.position = position;\n\n      this.setLocalDirty(true);\n\n      if (this.parent === null) {\n        vec3.copy(this.localPosition, position);\n      } else {\n        mat4.copy(parentInvertMatrix, this.parent.worldTransform);\n        mat4.invert(parentInvertMatrix, parentInvertMatrix);\n        vec3.transformMat4(this.localPosition, position, parentInvertMatrix);\n      }\n      return this;\n    };\n  })();\n\n  public rotate = (() => {\n    const parentInvertRotation = quat.create();\n    return (quaternion: quat) => {\n      if (this.parent === null) {\n        quat.multiply(this.localRotation, this.localRotation, quaternion);\n        quat.normalize(this.localRotation, this.localRotation);\n      } else {\n        const rot = this.getRotation();\n        const parentRot = this.parent.getRotation();\n\n        quat.copy(parentInvertRotation, parentRot);\n        quat.invert(parentInvertRotation, parentInvertRotation);\n        quat.multiply(parentInvertRotation, parentInvertRotation, quaternion);\n        quat.multiply(this.localRotation, quaternion, rot);\n        quat.normalize(this.localRotation, this.localRotation);\n      }\n      this.setLocalDirty();\n      return this;\n    };\n  })();\n\n  public rotateLocal = (() => {\n    return (quaternion: quat) => {\n      quat.multiply(this.localRotation, this.localRotation, quaternion);\n      quat.normalize(this.localRotation, this.localRotation);\n      this.setLocalDirty(true);\n      return this;\n    };\n  })();\n\n  public setRotation = (() => {\n    const invParentRot = quat.create();\n\n    return (rotation: quat) => {\n      if (this.parent === null) {\n        quat.copy(this.localRotation, rotation);\n      } else {\n        quat.copy(invParentRot, this.parent.getRotation());\n        quat.invert(invParentRot, invParentRot);\n        quat.copy(this.localRotation, invParentRot);\n        quat.mul(this.localRotation, this.localRotation, rotation);\n      }\n\n      this.setLocalDirty(true);\n      return this;\n    };\n  })();\n\n  /**\n   * @see https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline\n   */\n  // public catmullRom = (() => {\n  //   const aS = vec3.create();\n  //   const aR = quat.create();\n  //   const aT = vec3.create();\n  //   const bS = vec3.create();\n  //   const bR = quat.create();\n  //   const bT = vec3.create();\n  //   const cS = vec3.create();\n  //   const cR = quat.create();\n  //   const cT = vec3.create();\n  //   const dS = vec3.create();\n  //   const dR = quat.create();\n  //   const dT = vec3.create();\n  //   const R = quat.create();\n  //   return (\n  //     a: TransformComponent,\n  //     b: TransformComponent,\n  //     c: TransformComponent,\n  //     d: TransformComponent,\n  //     t: number,\n  //   ) => {\n  //     this.setDirty();\n  //     mat4.getScaling(aS, a.worldTransform);\n  //     mat4.getTranslation(aT, a.worldTransform);\n  //     mat4.getRotation(aR, a.worldTransform);\n  //     mat4.getScaling(bS, b.worldTransform);\n  //     mat4.getTranslation(bT, b.worldTransform);\n  //     mat4.getRotation(bR, b.worldTransform);\n  //     mat4.getScaling(cS, c.worldTransform);\n  //     mat4.getTranslation(cT, c.worldTransform);\n  //     mat4.getRotation(cR, c.worldTransform);\n  //     mat4.getScaling(dS, d.worldTransform);\n  //     mat4.getTranslation(dT, d.worldTransform);\n  //     mat4.getRotation(dR, d.worldTransform);\n\n  //     vec3.catmullRom(this.localPosition, aT, bT, cT, dT, t);\n  //     vec3.catmullRom(R, aR, bR, cR, dR, t);\n  //     quat.normalize(this.localRotation, R);\n  //     vec3.catmullRom(this.localScale, aS, bS, cS, dS, t);\n  //   };\n  // })();\n\n  constructor(data?: Partial<NonFunctionProperties<TransformComponent>>) {\n    super(data);\n  }\n\n  public setLocalPosition(position: vec3) {\n    vec3.copy(this.localPosition, position);\n    this.setLocalDirty(true);\n  }\n\n  public setLocalScale(scale: vec3) {\n    vec3.copy(this.localScale, scale);\n    this.setLocalDirty(true);\n  }\n\n  public setLocalRotation(rotation: quat) {\n    quat.copy(this.localRotation, rotation);\n\n    this.setLocalDirty(true);\n    return this;\n  }\n\n  public isDirty() {\n    return this.dirtyFlag;\n  }\n\n  public setDirty(value = true) {\n    if (value) {\n      this.dirtyFlag |= TransformComponent.DIRTY;\n    } else {\n      this.dirtyFlag &= ~TransformComponent.DIRTY;\n    }\n  }\n\n  public isLocalDirty() {\n    return this.localDirtyFlag;\n  }\n\n  public setLocalDirty(value = true) {\n    if (value) {\n      this.localDirtyFlag |= TransformComponent.DIRTY;\n      this.setDirty(true);\n    } else {\n      this.localDirtyFlag &= ~TransformComponent.DIRTY;\n    }\n  }\n\n  public updateTransform() {\n    if (this.isLocalDirty()) {\n      this.getLocalTransform();\n    }\n    if (this.isDirty()) {\n      if (this.parent === null) {\n        mat4.copy(this.worldTransform, this.getLocalTransform());\n        this.setDirty(false);\n      }\n    }\n  }\n\n  public updateTransformWithParent(parent: TransformComponent) {\n    mat4.multiply(\n      this.worldTransform,\n      parent.worldTransform,\n      this.getLocalTransform(),\n    );\n  }\n\n  public applyTransform() {\n    this.setDirty();\n\n    mat4.getScaling(this.localScale, this.worldTransform);\n    mat4.getTranslation(this.localPosition, this.worldTransform);\n    mat4.getRotation(this.localRotation, this.worldTransform);\n  }\n\n  public clearTransform() {\n    this.setDirty();\n    this.localPosition = vec3.fromValues(0, 0, 0);\n    this.localRotation = quat.fromValues(0, 0, 0, 1);\n    this.localScale = vec3.fromValues(1, 1, 1);\n  }\n\n  public scaleLocal(scaling: vec3) {\n    this.setLocalDirty();\n    vec3.multiply(this.localScale, this.localScale, scaling);\n    return this;\n  }\n\n  public getLocalPosition() {\n    return this.localPosition;\n  }\n\n  public getLocalRotation() {\n    return this.localRotation;\n  }\n\n  public getLocalScale() {\n    return this.localScale;\n  }\n\n  public getLocalTransform() {\n    if (this.localDirtyFlag) {\n      mat4.fromRotationTranslationScale(\n        this.localTransform,\n        this.localRotation,\n        this.localPosition,\n        this.localScale,\n      );\n      this.setLocalDirty(false);\n    }\n    return this.localTransform;\n  }\n\n  public getWorldTransform() {\n    if (!this.isLocalDirty() && !this.isDirty()) {\n      return this.worldTransform;\n    }\n\n    if (this.parent) {\n      this.parent.getWorldTransform();\n    }\n\n    this.updateTransform();\n\n    return this.worldTransform;\n  }\n\n  public getPosition() {\n    mat4.getTranslation(this.position, this.worldTransform);\n    return this.position;\n  }\n\n  public getRotation() {\n    mat4.getRotation(this.rotation, this.worldTransform);\n    return this.rotation;\n  }\n\n  public getScale() {\n    mat4.getScaling(this.scaling, this.worldTransform);\n    return this.scaling;\n  }\n}\n"],"file":"TransformComponent.js"}