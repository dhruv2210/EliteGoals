"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bezier = bezier;
exports.cancel = void 0;
exports.clamp = clamp;
exports.ease = void 0;
exports.interpolate = interpolate;
exports.now = void 0;
exports.pick = pick;
exports.prefersReducedMotion = prefersReducedMotion;
exports.raf = void 0;
exports.renderframe = renderframe;
exports.wrap = wrap;
var _l7Utils = require("@antv/l7-utils");
var _unitbezier = _interopRequireDefault(require("@mapbox/unitbezier"));
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var reducedMotionQuery;
function wrap(n, min, max) {
  var d = max - min;
  var w = ((n - min) % d + d) % d + min;
  return w === min ? max : w;
}
function clamp(n, min, max) {
  return Math.min(max, Math.max(min, n));
}
function interpolate(a, b, t) {
  return a * (1 - t) + b * t;
}
function bezier(p1x, p1y, p2x, p2y) {
  var bez = new _unitbezier.default(p1x, p1y, p2x, p2y);
  return function (t) {
    return bez.solve(t);
  };
}
var ease = bezier(0.25, 0.1, 0.25, 1);
exports.ease = ease;
function prefersReducedMotion() {
  // @ts-ignore
  if (_l7Utils.isMini || !_l7Utils.$window.matchMedia) {
    return false;
  }
  // Lazily initialize media query
  if (reducedMotionQuery == null) {
    // @ts-ignore
    reducedMotionQuery = _l7Utils.$window.matchMedia('(prefers-reduced-motion: reduce)');
  }
  return reducedMotionQuery.matches;
}
function pick(src, properties) {
  var result = {};
  var _iterator = _createForOfIteratorHelper(properties),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var name = _step.value;
      if (name in src) {
        result[name] = src[name];
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return result;
}
var now = _l7Utils.isMini ? Date.now.bind(Date) : _l7Utils.$window.performance && _l7Utils.$window.performance.now ? _l7Utils.$window.performance.now.bind(_l7Utils.$window.performance) : Date.now.bind(Date);
exports.now = now;
var raf = _l7Utils.$window.requestAnimationFrame ||
// @ts-ignore
_l7Utils.$window.mozRequestAnimationFrame ||
// @ts-ignore
_l7Utils.$window.webkitRequestAnimationFrame ||
// @ts-ignore
_l7Utils.$window.msRequestAnimationFrame;
exports.raf = raf;
var _cancel = _l7Utils.$window.cancelAnimationFrame ||
// @ts-ignore
_l7Utils.$window.mozCancelAnimationFrame ||
// @ts-ignore
_l7Utils.$window.webkitCancelAnimationFrame ||
// @ts-ignore
_l7Utils.$window.msCancelAnimationFrame;
exports.cancel = _cancel;
function renderframe(fn) {
  var frame = raf(fn);
  return {
    cancel: function cancel() {
      return _cancel(frame);
    }
  };
}