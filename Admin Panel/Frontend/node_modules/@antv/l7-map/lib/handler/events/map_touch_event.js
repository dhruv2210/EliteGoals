"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _point = _interopRequireDefault(require("../../geo/point"));
var _dom = _interopRequireDefault(require("../../utils/dom"));
var _event = require("./event");
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var MapTouchEvent = /*#__PURE__*/function (_Event) {
  (0, _inherits2.default)(MapTouchEvent, _Event);
  var _super = _createSuper(MapTouchEvent);
  /**
   * The event type.
   */

  /**
   * The `Map` object that fired the event.
   */

  /**
   * The DOM event which caused the map event.
   */

  /**
   * The geographic location on the map of the center of the touch event points.
   */

  /**
   * The pixel coordinates of the center of the touch event points, relative to the map and measured from the top left
   * corner.
   */

  /**
   * The array of pixel coordinates corresponding to a
   * [touch event's `touches`](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/touches) property.
   */

  /**
   * The geographical locations on the map corresponding to a
   * [touch event's `touches`](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/touches) property.
   */

  /**
   * `true` if `preventDefault` has been called.
   * @private
   */

  /**
   * @private
   */
  function MapTouchEvent(type, map, originalEvent) {
    var _this;
    (0, _classCallCheck2.default)(this, MapTouchEvent);
    var touches = type === 'touchend' ? originalEvent.changedTouches : originalEvent.touches;
    var points = _dom.default.touchPos(map.getCanvasContainer(), touches);
    var lngLats = points.map(function (t) {
      return map.unproject(t);
    });
    var point = points.reduce(function (prev, curr, i, arr) {
      return prev.add(curr.div(arr.length));
    }, new _point.default(0, 0));
    var lngLat = map.unproject(point);
    _this = _super.call(this, type, {
      points: points,
      point: point,
      lngLats: lngLats,
      lngLat: lngLat,
      originalEvent: originalEvent
    });
    _this.defaultPrevented = false;
    return _this;
  }

  /**
   * Prevents subsequent default processing of the event by the map.
   *
   * Calling this method will prevent the following default map behaviors:
   *
   *   * On `touchstart` events, the behavior of {@link DragPanHandler}
   *   * On `touchstart` events, the behavior of {@link TouchZoomRotateHandler}
   *
   */
  (0, _createClass2.default)(MapTouchEvent, [{
    key: "preventDefault",
    value: function preventDefault() {
      this.defaultPrevented = true;
    }
  }]);
  return MapTouchEvent;
}(_event.Event);
exports.default = MapTouchEvent;