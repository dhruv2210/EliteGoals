import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _initializerDefineProperty from "@babel/runtime/helpers/esm/initializerDefineProperty";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _applyDecoratedDescriptor from "@babel/runtime/helpers/esm/applyDecoratedDescriptor";
import _initializerWarningHelper from "@babel/runtime/helpers/esm/initializerWarningHelper";
var _dec, _class, _descriptor;
import { lazyInject, TYPES } from '@antv/l7-core';
var BaseMapWrapper = (_dec = lazyInject(TYPES.IGlobalConfigService), (_class = /*#__PURE__*/function () {
  function BaseMapWrapper(config) {
    _classCallCheck(this, BaseMapWrapper);
    _initializerDefineProperty(this, "configService", _descriptor, this);
    this.config = config;
  }
  _createClass(BaseMapWrapper, [{
    key: "setContainer",
    value: function setContainer(sceneContainer, id, canvas, hasBaseMap) {
      // 绑定用户传入的原始地图参数
      sceneContainer.bind(TYPES.MapConfig).toConstantValue(_objectSpread(_objectSpread({}, this.config), {}, {
        id: id,
        canvas: canvas,
        hasBaseMap: hasBaseMap
      }));
      sceneContainer.bind(TYPES.IMapService).to(this.getServiceConstructor()).inSingletonScope();
    }
  }, {
    key: "getServiceConstructor",
    value: function getServiceConstructor() {
      throw new Error('Method not implemented.');
    }
  }]);
  return BaseMapWrapper;
}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, "configService", [_dec], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
})), _class));
export { BaseMapWrapper as default };