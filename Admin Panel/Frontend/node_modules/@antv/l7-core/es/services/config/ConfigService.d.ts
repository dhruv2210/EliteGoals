import 'reflect-metadata';
import { ILayerAttributesOption, ILayerConfig } from '../layer/ILayerService';
import { IGlobalConfigService, ISceneConfig } from './IConfigService';
export default class GlobalConfigService implements IGlobalConfigService {
    /**
     * 全部场景配置项缓存
     */
    private sceneConfigCache;
    /**
     * 场景配置项校验器
     */
    /**
     * 地图配置项校验器
     */
    /**
     * 全部图层配置项缓存
     */
    private layerConfigCache;
    /**
     * 数据映射缓存
     */
    private layerAttributeConfigCache;
    /**
     * 保存每一种 Layer 配置项的校验器
     */
    getSceneConfig(sceneId: string): Partial<ISceneConfig>;
    getSceneWarninfo(id: string): any;
    setSceneConfig(sceneId: string, config: Partial<ISceneConfig>): void;
    getLayerConfig<IChildLayerConfig>(layerId: string): Partial<ILayerConfig & ISceneConfig & IChildLayerConfig>;
    setLayerConfig(sceneId: string, layerId: string, config: Partial<ILayerConfig>): void;
    getAttributeConfig(layerId: string): Partial<ILayerAttributesOption>;
    setAttributeConfig(layerId: string, attr: Partial<ILayerAttributesOption>): void;
    clean(): void;
}
