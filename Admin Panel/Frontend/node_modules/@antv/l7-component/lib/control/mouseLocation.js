"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.MouseLocation = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _l7Core = require("@antv/l7-core");
var _l7Utils = require("@antv/l7-utils");
var _control = _interopRequireDefault(require("./baseControl/control"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var MouseLocation = /*#__PURE__*/function (_Control) {
  (0, _inherits2.default)(MouseLocation, _Control);
  var _super = _createSuper(MouseLocation);
  function MouseLocation() {
    var _this;
    (0, _classCallCheck2.default)(this, MouseLocation);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "location", [0, 0]);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onMouseMove", function (e) {
      var position = _this.location;
      var lngLat = e.lngLat || e.lnglat;
      var transform = _this.controlOption.transform;
      if (lngLat) {
        position = [lngLat.lng, lngLat.lat];
      }
      _this.location = position;
      if (transform) {
        position = transform(position);
      }
      _this.insertLocation2HTML(position);
      _this.emit('locationChange', position);
    });
    return _this;
  }
  (0, _createClass2.default)(MouseLocation, [{
    key: "getLocation",
    value: function getLocation() {
      return this.location;
    }
  }, {
    key: "getDefault",
    value: function getDefault(option) {
      return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, (0, _get2.default)((0, _getPrototypeOf2.default)(MouseLocation.prototype), "getDefault", this).call(this, option)), {}, {
        position: _l7Core.PositionType.BOTTOMLEFT,
        transform: function transform(_ref) {
          var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
            lng = _ref2[0],
            lat = _ref2[1];
          return [+(+lng).toFixed(6), +(+lat).toFixed(6)];
        }
      });
    }
  }, {
    key: "onAdd",
    value: function onAdd() {
      var container = _l7Utils.DOM.create('div', 'l7-control-mouse-location');
      container.innerHTML = '&nbsp;';
      this.mapsService.on('mousemove', this.onMouseMove);
      return container;
    }
  }, {
    key: "onRemove",
    value: function onRemove() {
      this.mapsService.off('mousemove', this.onMouseMove);
    }
  }, {
    key: "insertLocation2HTML",
    value: function insertLocation2HTML(position) {
      this.container.innerText = position.join(', ');
    }
  }]);
  return MouseLocation;
}(_control.default);
exports.default = exports.MouseLocation = MouseLocation;