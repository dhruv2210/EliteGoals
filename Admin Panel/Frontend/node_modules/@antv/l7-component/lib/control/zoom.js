"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Zoom = void 0;
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _l7Core = require("@antv/l7-core");
var _l7Utils = require("@antv/l7-utils");
var _icon = require("../utils/icon");
var _baseControl = require("./baseControl");
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var Zoom = /*#__PURE__*/function (_Control) {
  (0, _inherits2.default)(Zoom, _Control);
  var _super = _createSuper(Zoom);
  function Zoom() {
    var _this;
    (0, _classCallCheck2.default)(this, Zoom);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "zoomIn", function () {
      if (!_this.disabled && _this.mapsService.getZoom() < _this.mapsService.getMaxZoom()) {
        _this.mapsService.zoomIn();
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "zoomOut", function () {
      if (!_this.disabled && _this.mapsService.getZoom() > _this.mapsService.getMinZoom()) {
        _this.mapsService.zoomOut();
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "updateDisabled", function () {
      var mapsService = _this.mapsService;
      _this.zoomInButton.removeAttribute('disabled');
      _this.zoomOutButton.removeAttribute('disabled');
      if (_this.disabled || mapsService.getZoom() <= mapsService.getMinZoom()) {
        _this.zoomOutButton.setAttribute('disabled', 'true');
      }
      if (_this.disabled || mapsService.getZoom() >= mapsService.getMaxZoom()) {
        _this.zoomInButton.setAttribute('disabled', 'true');
      }
    });
    return _this;
  }
  (0, _createClass2.default)(Zoom, [{
    key: "getDefault",
    value: function getDefault(option) {
      return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, (0, _get2.default)((0, _getPrototypeOf2.default)(Zoom.prototype), "getDefault", this).call(this, option)), {}, {
        position: _l7Core.PositionType.BOTTOMRIGHT,
        name: 'zoom',
        zoomInText: (0, _icon.createL7Icon)('l7-icon-enlarge'),
        zoomInTitle: 'Zoom in',
        zoomOutText: (0, _icon.createL7Icon)('l7-icon-narrow'),
        zoomOutTitle: 'Zoom out'
      });
    }
  }, {
    key: "setOptions",
    value: function setOptions(newOptions) {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Zoom.prototype), "setOptions", this).call(this, newOptions);
      if (this.checkUpdateOption(newOptions, ['zoomInText', 'zoomInTitle', 'zoomOutText', 'zoomOutTitle'])) {
        this.resetButtonGroup(this.container);
      }
    }
  }, {
    key: "onAdd",
    value: function onAdd() {
      var container = _l7Utils.DOM.create('div', 'l7-control-zoom');
      this.resetButtonGroup(container);
      this.mapsService.on('zoomend', this.updateDisabled);
      this.mapsService.on('zoomchange', this.updateDisabled);
      return container;
    }
  }, {
    key: "onRemove",
    value: function onRemove() {
      this.mapsService.off('zoomend', this.updateDisabled);
      this.mapsService.off('zoomchange', this.updateDisabled);
    }
  }, {
    key: "disable",
    value: function disable() {
      this.disabled = true;
      this.updateDisabled();
      return this;
    }
  }, {
    key: "enable",
    value: function enable() {
      this.disabled = false;
      this.updateDisabled();
      return this;
    }
  }, {
    key: "resetButtonGroup",
    value: function resetButtonGroup(container) {
      _l7Utils.DOM.clearChildren(container);
      this.zoomInButton = this.createButton(this.controlOption.zoomInText, this.controlOption.zoomInTitle, 'l7-button-control', container, this.zoomIn);
      this.zoomOutButton = this.createButton(this.controlOption.zoomOutText, this.controlOption.zoomOutTitle, 'l7-button-control', container, this.zoomOut);
      this.updateDisabled();
    }
  }, {
    key: "createButton",
    value: function createButton(html, tile, className, container, fn) {
      var link = _l7Utils.DOM.create('button', className, container);
      if (typeof html === 'string') {
        link.innerHTML = html;
      } else {
        link.append(html);
      }
      link.title = tile;
      link.addEventListener('click', fn);
      return link;
    }
  }]);
  return Zoom;
}(_baseControl.Control);
exports.default = exports.Zoom = Zoom;