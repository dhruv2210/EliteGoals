import { __assign, __extends } from "tslib";
import { pick } from '@antv/util';
import { Plot } from '../../core/plot';
import { DEFAULT_OPTIONS } from './constants';
import { GridLayer } from '../../layers/grid-layer';
import { LayerGroup } from '../../core/layer/layer-group';
var Grid = /** @class */ (function (_super) {
    __extends(Grid, _super);
    function Grid() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * 地图类型
         */
        _this.type = Plot.PlotType.Grid;
        return _this;
    }
    /**
     * 获取默认配置
     */
    Grid.prototype.getDefaultOptions = function () {
        return Grid.DefaultOptions;
    };
    /**
     * 创建图层
     */
    Grid.prototype.createLayers = function (source) {
        this.gridLayer = new GridLayer(__assign({ source: source }, pick(this.options, GridLayer.LayerOptionsKeys)));
        var layerGroup = new LayerGroup([this.gridLayer]);
        if (this.options.label) {
            this.labelLayer = this.createLabelLayer(this.source, this.options.label, this.options);
            layerGroup.addLayer(this.labelLayer);
        }
        return layerGroup;
    };
    /**
     * 更新图层
     */
    Grid.prototype.updateLayers = function (options) {
        var heatMapLayerConfig = pick(options, GridLayer.LayerOptionsKeys);
        this.gridLayer.update(heatMapLayerConfig);
        this.updateLabelLayer(this.source, options.label, this.options, this.labelLayer);
    };
    /**
     * 默认配置项
     */
    Grid.DefaultOptions = DEFAULT_OPTIONS;
    return Grid;
}(Plot));
export { Grid };
//# sourceMappingURL=index.js.map