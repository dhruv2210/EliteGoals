import { __assign, __extends } from "tslib";
import { pick } from '@antv/util';
import { Plot } from '../../core/plot';
import { DEFAULT_OPTIONS } from './constants';
import { PathLayer } from '../../layers/path-layer';
import { LayerGroup } from '../../core/layer/layer-group';
var Path = /** @class */ (function (_super) {
    __extends(Path, _super);
    function Path() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * 图表类型
         */
        _this.type = Plot.PlotType.Path;
        return _this;
    }
    /**
     * 获取默认配置
     */
    Path.prototype.getDefaultOptions = function () {
        return Path.DefaultOptions;
    };
    /**
     * 创建图层
     */
    Path.prototype.createLayers = function (source) {
        this.pathLayer = new PathLayer(__assign({ source: source }, pick(this.options, PathLayer.LayerOptionsKeys)));
        var layerGroup = new LayerGroup([this.pathLayer]);
        return layerGroup;
    };
    /**
     * 更新图层
     */
    Path.prototype.updateLayers = function (options) {
        var dotLayerConfig = pick(options, PathLayer.LayerOptionsKeys);
        this.pathLayer.update(dotLayerConfig);
    };
    /**
     * 实现 legend 配置项
     */
    Path.prototype.getLegendOptions = function () {
        var colorLegendItems = this.pathLayer.getColorLegendItems();
        if (colorLegendItems.length !== 0) {
            return { type: 'category', items: colorLegendItems };
        }
        return {};
    };
    /**
     * 默认配置项
     */
    Path.DefaultOptions = DEFAULT_OPTIONS;
    return Path;
}(Plot));
export { Path };
//# sourceMappingURL=index.js.map