{"version":3,"sources":["../../src/material/index.ts"],"names":["Material","IDENTIFIER","MaterialComponentManager","config","entity","component","type","material","create","onEntityCreated","BASIC"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AAMA;;;;IAOaA,Q,WADZ,4B,UAME,uBAAOC,wBAAWC,wBAAlB,C;;;SAFSC,M;;SAKFC,M;SACAC,S;;;;;gCAEW;AACjB,aAAO,KAAKD,MAAZ;AACD;;;mCAEqB;AACpB,aAAO,KAAKC,SAAZ;AACD;;;8BAEgBF,M,EAAW;AAC1B,WAAKA,MAAL,GAAcA,MAAd;AACD;;;8BAEgBC,M,EAAgBE,I,EAAc;AAC7C,WAAKF,MAAL,GAAcA,MAAd;AACA,WAAKC,SAAL,GAAiB,KAAKE,QAAL,CAAcC,MAAd,CAAqBJ,MAArB,CAAjB;AACA,WAAKC,SAAL,CAAeD,MAAf,GAAwBA,MAAxB;AACA,WAAKC,SAAL,CAAeC,IAAf,GAAsBA,IAAtB;AACA,WAAKG,eAAL;AACD;;;sCAE2B,CAC1B;AACD;;;aAhCaC,K,GAAQ,O","sourcesContent":["import {\n  ComponentManager,\n  Entity,\n  IDENTIFIER,\n  MaterialComponent,\n} from '@antv/g-webgpu-core';\nimport { inject, injectable } from 'inversify';\n\nexport interface IMaterial<T> {\n  setConfig(config: T): void;\n}\n\n@injectable()\nexport class Material<T = {}> implements IMaterial<T> {\n  public static BASIC = 'basic';\n\n  protected config: T;\n\n  @inject(IDENTIFIER.MaterialComponentManager)\n  private readonly material: ComponentManager<MaterialComponent>;\n\n  private entity: Entity;\n  private component: MaterialComponent;\n\n  public getEntity() {\n    return this.entity;\n  }\n\n  public getComponent() {\n    return this.component;\n  }\n\n  public setConfig(config: T) {\n    this.config = config;\n  }\n\n  public setEntity(entity: Entity, type: string) {\n    this.entity = entity;\n    this.component = this.material.create(entity);\n    this.component.entity = entity;\n    this.component.type = type;\n    this.onEntityCreated();\n  }\n\n  protected onEntityCreated() {\n    //\n  }\n}\n"],"file":"index.js"}