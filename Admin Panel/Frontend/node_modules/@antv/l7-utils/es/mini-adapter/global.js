var l7globalThis;
var getGlobalThis = function getGlobalThis() {
  return l7globalThis || (l7globalThis = typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {});
};
l7globalThis = getGlobalThis();

// 解决 gastby 服务端构建过程中没有 window 全局变量的问题
var globalWindow;
if (typeof window === 'undefined') {
  globalWindow = {
    devicePixelRatio: 1,
    navigator: {
      userAgent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36',
      browserLanguage: 'zh-CN',
      language: 'zh-CN',
      platform: ''
    },
    location: '',
    document: {
      documentElement: {
        style: {}
      },
      createEvent: function createEvent() {
        return true;
      },
      getElementById: function getElementById(id) {
        return true;
      },
      createElement: function createElement() {
        return {
          className: '',
          classList: {
            add: function add() {
              return '';
            }
          }
        };
      },
      createElementNS: function createElementNS() {
        return true;
      },
      addEventListener: function addEventListener() {
        return true;
      },
      removeEventListener: function removeEventListener() {
        return true;
      },
      querySelector: function querySelector() {
        return false;
      }
    },
    performance: {
      mark: function mark(_mark) {
        return null;
      },
      clearMeasures: function clearMeasures(measure) {
        return null;
      },
      clearMarks: function clearMarks(mark) {
        return null;
      },
      measure: function measure(mark, create, load) {
        return {
          duration: 0
        };
      },
      now: function now() {
        return new Date().getTime();
      }
    },
    Blob: '',
    dispatchEvent: function dispatchEvent(evt) {
      return true;
    },
    Event: function Event(name, data) {
      return true;
    },
    createElement: function createElement() {
      return true;
    },
    createElementNS: function createElementNS() {
      return true;
    },
    XMLHttpRequest: function XMLHttpRequest() {
      return true;
    },
    addEventListener: function addEventListener() {
      return true;
    },
    removeEventListener: function removeEventListener() {
      return true;
    },
    requestAnimationFrame: function requestAnimationFrame() {
      return true;
    },
    cancelAnimationFrame: function cancelAnimationFrame() {
      return true;
    },
    clearTimeout: function clearTimeout() {
      return true;
    }
  };
} else {
  globalWindow = window;
}
export { globalWindow, getGlobalThis, l7globalThis };