import _createClass from "@babel/runtime/helpers/esm/createClass";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
// @ts-nocheck
// tslint:disable
import { $document } from "../document";
import { Event } from "../Event";
import { getCanvas } from "../register";
var TouchEvent = /*#__PURE__*/function (_Event) {
  _inherits(TouchEvent, _Event);
  var _super = _createSuper(TouchEvent);
  function TouchEvent(type) {
    var _this;
    _classCallCheck(this, TouchEvent);
    _this = _super.call(this, type);
    _this.touches = [];
    _this.targetTouches = [];
    _this.changedTouches = [];
    _this.target = getCanvas();
    _this.currentTarget = getCanvas();
    return _this;
  }
  return _createClass(TouchEvent);
}(Event);
function mapEvent(event) {
  var _ref = event || {},
    _ref$x = _ref.x,
    x = _ref$x === void 0 ? 0 : _ref$x,
    _ref$y = _ref.y,
    y = _ref$y === void 0 ? 0 : _ref$y,
    _ref$clientX = _ref.clientX,
    clientX = _ref$clientX === void 0 ? 0 : _ref$clientX,
    _ref$clientY = _ref.clientY,
    clientY = _ref$clientY === void 0 ? 0 : _ref$clientY;
  // 小程序不支持Object.hasOwnProperty
  // (抹平不同的view事件)[https://docs.alipay.com/mini/framework/event-object]
  if (Object.keys(event).indexOf('x') !== -1) {
    event.pageX = event.clientX = x;
    event.pageY = event.clientY = y;
  } else {
    event.x = clientX;
    event.y = clientY;
  }
}
function eventHandlerFactory(type) {
  return function (rawEvent) {
    var event = new TouchEvent(type);
    event.changedTouches = rawEvent.changedTouches;
    event.touches = rawEvent.touches;
    event.targetTouches = Array.prototype.slice.call(rawEvent.touches);
    event.timeStamp = rawEvent.timeStamp;
    event.changedTouches.forEach(function (e) {
      return mapEvent(e);
    });
    event.touches.forEach(function (e) {
      return mapEvent(e);
    });
    event.targetTouches.forEach(function (e) {
      return mapEvent(e);
    });
    $document.dispatchEvent(event);
  };
}
function eventMapHandlerFactory(type) {
  return function (rawEvent) {
    rawEvent.type = type;
    $document.dispatchEvent(rawEvent);
  };
}
var dispatchTouchStart = eventHandlerFactory('touchstart');
var dispatchTouchMove = eventHandlerFactory('touchmove');
var dispatchTouchEnd = eventHandlerFactory('touchend');
var dispatchMapCameraParams = eventMapHandlerFactory('mapCameaParams');
export { dispatchTouchStart, dispatchTouchMove, dispatchTouchEnd, dispatchMapCameraParams };