import { screen } from "../screen";
var innerWidth = screen.availWidth,
  innerHeight = screen.availHeight;
var documentElement = {
  style: []
};
export function parentNode(obj, level) {
  if (!('parentNode' in obj)) {
    var parent;
    if (level === 0) {
      parent = function parent() {
        // return document
        return null;
      };
    } else if (level === 1) {
      parent = function parent() {
        // return document.documentElement;
        return documentElement;
      };
    } else {
      parent = function parent() {
        // return document.body;
        return null;
      };
    }
    Object.defineProperty(obj, 'parentNode', {
      enumerable: true,
      get: parent
    });
  }
  if (!('parentElement' in obj)) {
    var _parent;
    if (level === 0) {
      _parent = function _parent() {
        return null;
      };
    } else if (level === 1) {
      _parent = function _parent() {
        // return document.documentElement;
        return documentElement;
      };
    } else {
      _parent = function _parent() {
        // return document.body;
        return null;
      };
    }
    Object.defineProperty(obj, 'parentElement', {
      enumerable: true,
      get: _parent
    });
  }
}
export function style(obj) {
  obj.style = obj.style || {};
  Object.assign(obj.style, {
    top: '0px',
    left: '0px',
    width: innerWidth + 'px',
    height: innerHeight + 'px',
    margin: '0px',
    padding: '0px'
  });
}
export function clientRegion(obj) {
  if (!('clientLeft' in obj)) {
    obj.clientLeft = 0;
    obj.clientTop = 0;
  }
  if (!('clientWidth' in obj)) {
    obj.clientWidth = innerWidth;
    obj.clientHeight = innerHeight;
  }
  if (!('getBoundingClientRect' in obj)) {
    obj.getBoundingClientRect = function () {
      var ret = {
        x: 0,
        y: 0,
        top: 0,
        left: 0,
        width: this.clientWidth,
        height: this.clientHeight,
        right: this.clientWidth,
        bottom: this.clientHeight
      };
      return ret;
    };
  }
}
export function offsetRegion(obj) {
  if (!('offsetLeft' in obj)) {
    obj.offsetLeft = 0;
    obj.offsetTop = 0;
  }
  if (!('offsetWidth' in obj)) {
    obj.offsetWidth = innerWidth;
    obj.offsetHeight = innerHeight;
  }
}
export function scrollRegion(obj) {
  if (!('scrollLeft' in obj)) {
    obj.scrollLeft = 0;
    obj.scrollTop = 0;
  }
  if (!('scrollWidth' in obj)) {
    obj.scrollWidth = innerWidth;
    obj.scrollHeight = innerHeight;
  }
}
export function classList(obj) {
  var noop = function noop() {
    return true;
  };
  obj.classList = [];
  obj.classList.add = noop;
  obj.classList.remove = noop;
  obj.classList.contains = noop;
  obj.classList.toggle = noop;
}