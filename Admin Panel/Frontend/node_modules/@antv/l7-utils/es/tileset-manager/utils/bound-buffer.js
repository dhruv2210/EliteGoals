import { bBoxToBounds, boundsContains, padBounds } from "../../geo";

/**
 * 获取经纬度边界的缓存后的边界
 */
export var getLatLonBoundsBuffer = function getLatLonBoundsBuffer(latLonBounds, bufferRatio) {
  var bounds = bBoxToBounds(latLonBounds);
  var newBounds = padBounds(bounds, bufferRatio);
  // 地图对称子午线最多重复三次
  var maxLngExtent = 360 * 3 - 180;
  var maxLatExtent = 85.0511287798065;
  var latLonBoundsBuffer = [Math.max(newBounds[0][0], -maxLngExtent), Math.max(newBounds[0][1], -maxLatExtent), Math.min(newBounds[1][0], maxLngExtent), Math.min(newBounds[1][1], maxLatExtent)];
  return latLonBoundsBuffer;
};

/**
 * 边界是否包含在内
 */
export var isLatLonBoundsContains = function isLatLonBoundsContains(latLonBoundsBuffer, latLonBounds) {
  var boundsBuffer = bBoxToBounds(latLonBoundsBuffer);
  var bounds = bBoxToBounds(latLonBounds);
  var isContains = boundsContains(boundsBuffer, bounds);
  return isContains;
};