import { TileBounds } from '../types';
export declare function osmLonLat2TileXY(lon: number, lat: number, zoom: number): number[];
export declare function osmTileXY2LonLat(x: number, y: number, zoom: number): number[];
/**
 * 获取当前瓦片的经纬度边界
 */
export declare const tileToBounds: (x: number, y: number, z: number) => TileBounds;
/**
 * 获取当前视野层级瓦片的所有索引
 * latLonBounds          => pixelBounds           => tileRange             => tileIndices
 * {topLeft,bottomRight} => {topLeft,bottomRight} => {topLeft,bottomRight} => {x, y, z}[]
 * 如果当前 zoom 层级小于 minZoom 则返回空数组
 * 如果当前 zoom 层级大于 maxZoom 则返回最大的瓦片索引
 */
export declare function getTileIndices({ zoom, latLonBounds, maxZoom, minZoom, zoomOffset, extent, }: {
    zoom: number;
    latLonBounds: TileBounds;
    maxZoom: number;
    minZoom: number;
    zoomOffset: number;
    extent: TileBounds;
    tileSize: number;
}): {
    x: number;
    y: number;
    z: number;
}[];
/**
 * Warp 瓦片索引，支持对称子午线瓦片连续
 */
export declare const getTileWarpXY: (x: number, y: number, z: number, wrap?: boolean) => {
    warpX: number;
    warpY: number;
};
