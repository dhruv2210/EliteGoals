var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/mini-adapter/screen.ts
var screen_exports = {};
__export(screen_exports, {
  isMiniAli: () => isMiniAli,
  screen: () => screen
});
module.exports = __toCommonJS(screen_exports);
var import_global = require("./global");
var isMiniAli = (
  // @ts-ignore
  typeof my !== "undefined" && !!my && typeof my.showToast === "function" && my.isFRM !== true
);
var screenWidth;
var screenHeight;
var windowWidth;
var windowHeight;
if (isMiniAli) {
  const myOptions = my.getSystemInfoSync();
  screenWidth = myOptions.screenWidth;
  screenHeight = myOptions.screenHeight;
  windowWidth = myOptions.windowWidth;
  windowHeight = myOptions.windowHeight;
} else {
  const { innerWidth, innerHeight } = import_global.globalWindow;
  screenWidth = innerWidth;
  screenHeight = innerHeight;
  windowWidth = innerWidth;
  windowHeight = innerHeight;
}
var screen = {
  width: screenWidth,
  height: screenHeight,
  availWidth: windowWidth,
  availHeight: windowHeight,
  availLeft: 0,
  availTop: 0
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  isMiniAli,
  screen
});
