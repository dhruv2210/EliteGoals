var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/mini-adapter/navigator.ts
var navigator_exports = {};
__export(navigator_exports, {
  isMiniAli: () => isMiniAli,
  navigator: () => navigator
});
module.exports = __toCommonJS(navigator_exports);
var import_global = require("./global");
var isMiniAli = (
  // @ts-ignore
  typeof my !== "undefined" && !!my && typeof my.showToast === "function" && my.isFRM !== true
);
var system;
var platform;
var language;
if (isMiniAli) {
  const myOptions = my.getSystemInfoSync();
  system = myOptions.system;
  platform = myOptions.platform;
  language = myOptions.language;
} else {
  const browser = {
    versions: (() => {
      const u = import_global.globalWindow.navigator.userAgent;
      return {
        trident: u.indexOf("Trident") > -1,
        // IE内核
        presto: u.indexOf("Presto") > -1,
        // opera内核
        webKit: u.indexOf("AppleWebKit") > -1,
        // 苹果、谷歌内核
        gecko: u.indexOf("Gecko") > -1 && u.indexOf("KHTML") === -1,
        // 火狐内核
        mobile: !!u.match(/AppleWebKit.*Mobile.*/),
        // 是否为移动终端
        ios: !!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/),
        // ios终端
        android: u.indexOf("Android") > -1 || u.indexOf("Linux") > -1,
        // android终端或者uc浏览器
        iPhone: u.indexOf("iPhone") > -1,
        // 是否为iPhone或者QQHD浏览器
        iPad: u.indexOf("iPad") > -1,
        // 是否iPad
        webApp: u.indexOf("Safari") === -1,
        // 是否web应该程序，没有头部与底部
        weixin: u.indexOf("MicroMessenger") > -1,
        // 是否微信 （2015-01-22新增）
        qq: u.match(/\sQQ/i) === " qq"
        // 是否QQ
      };
    })(),
    language: (import_global.globalWindow.navigator.browserLanguage || import_global.globalWindow.navigator.language).toLowerCase()
  };
  if (browser.versions.android) {
    platform = "android";
  } else if (browser.versions.trident) {
    platform = "IE";
  } else if (browser.versions.presto) {
    platform = "Opera";
  } else if (browser.versions.webKit) {
    platform = "webKit";
  } else if (browser.versions.gecko) {
    platform = "Firefox";
  } else if (browser.versions.mobile) {
    platform = "mobile";
  } else if (browser.versions.ios) {
    platform = "ios";
  } else if (browser.versions.iPhone) {
    platform = "iPhone";
  } else if (browser.versions.iPad) {
    platform = "ipad";
  } else if (browser.versions.webApp) {
    platform = "webApp";
  } else if (browser.versions.weixin) {
    platform = "weixin";
  } else if (browser.versions.qq) {
    platform = "qq";
  }
  system = import_global.globalWindow.navigator.userAgent;
  language = browser.language;
}
var android = system.toLowerCase().indexOf("android") !== -1;
var uaDesc = android ? "Android; CPU Android 6.0" : "iPhone; CPU iPhone OS 10_3_1 like Mac OS X";
var ua = `Mozilla/5.0 (${uaDesc}) AppleWebKit/603.1.30 (KHTML, like Gecko) Mobile/14E8301 MicroMessenger/6.6.0 MiniGame NetType/WIFI Language/${language}`;
var navigator = {
  platform,
  language,
  appVersion: `5.0 (${uaDesc}) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1`,
  userAgent: ua
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  isMiniAli,
  navigator
});
