var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/mini-adapter/global.ts
var global_exports = {};
__export(global_exports, {
  getGlobalThis: () => getGlobalThis,
  globalWindow: () => globalWindow,
  l7globalThis: () => l7globalThis
});
module.exports = __toCommonJS(global_exports);
var l7globalThis;
var getGlobalThis = () => {
  return l7globalThis || (l7globalThis = typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {});
};
l7globalThis = getGlobalThis();
var globalWindow;
if (typeof window === "undefined") {
  globalWindow = {
    devicePixelRatio: 1,
    navigator: {
      userAgent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36",
      browserLanguage: "zh-CN",
      language: "zh-CN",
      platform: ""
    },
    location: "",
    document: {
      documentElement: {
        style: {}
      },
      createEvent: () => true,
      getElementById: (id) => true,
      createElement: () => {
        return {
          className: "",
          classList: {
            add: () => ""
          }
        };
      },
      createElementNS: () => true,
      addEventListener: () => true,
      removeEventListener: () => true,
      querySelector: () => false
    },
    performance: {
      mark: (mark) => null,
      clearMeasures: (measure) => null,
      clearMarks: (mark) => null,
      measure: (mark, create, load) => {
        return {
          duration: 0
        };
      },
      now: () => new Date().getTime()
    },
    Blob: "",
    dispatchEvent: (evt) => true,
    Event: (name, data) => true,
    createElement: () => true,
    createElementNS: () => true,
    XMLHttpRequest: () => true,
    addEventListener: () => true,
    removeEventListener: () => true,
    requestAnimationFrame: () => true,
    cancelAnimationFrame: () => true,
    clearTimeout: () => true
  };
} else {
  globalWindow = window;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getGlobalThis,
  globalWindow,
  l7globalThis
});
