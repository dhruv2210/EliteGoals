var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/mini-adapter/Element.ts
var Element_exports = {};
__export(Element_exports, {
  Element: () => Element
});
module.exports = __toCommonJS(Element_exports);
var import_Node = require("./Node");
var Element = class extends import_Node.Node {
  constructor() {
    super();
    this.className = "";
    this.children = [];
  }
  setAttribute(name, value) {
    this[name] = value;
  }
  getAttribute(name) {
    return this[name];
  }
  setAttributeNS(name, value) {
    this[name] = value;
  }
  getAttributeNS(name) {
    return this[name];
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Element
});
