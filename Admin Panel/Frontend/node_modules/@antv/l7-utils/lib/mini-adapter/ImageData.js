var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/mini-adapter/ImageData.ts
var ImageData_exports = {};
__export(ImageData_exports, {
  ImageData: () => ImageData
});
module.exports = __toCommonJS(ImageData_exports);
var ImageData = class {
  constructor() {
    const len = arguments.length;
    if (len === 2) {
      if (typeof arguments[0] === "number" && typeof arguments[1] === "number") {
        this._w = arguments[0];
        this._h = arguments[1];
        this._data = new Uint8ClampedArray(this._w * this._h * 4);
        return;
      }
    } else if (len === 3) {
      if (typeof arguments[0] === "object" && typeof arguments[1] === "number" && typeof arguments[2] === "number") {
        this._data = arguments[0];
        this._w = arguments[1];
        this._h = arguments[2];
      }
    }
    throw new Error("ImageData: params error");
  }
  get width() {
    return this._w;
  }
  get height() {
    return this._h;
  }
  get data() {
    return this._data;
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ImageData
});
