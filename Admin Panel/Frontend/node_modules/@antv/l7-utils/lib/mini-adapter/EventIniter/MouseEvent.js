var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/mini-adapter/EventIniter/MouseEvent.ts
var MouseEvent_exports = {};
__export(MouseEvent_exports, {
  dispatchMouseDown: () => dispatchMouseDown,
  dispatchMouseMove: () => dispatchMouseMove,
  dispatchMouseUp: () => dispatchMouseUp
});
module.exports = __toCommonJS(MouseEvent_exports);
var import_document = require("../document");
var import_Event = require("../Event");
function eventHandlerFactory(type) {
  return (rawEvent) => {
    rawEvent.type = type;
    import_document.$document.dispatchEvent(rawEvent);
  };
}
var dispatchMouseDown = eventHandlerFactory("mousedown");
var dispatchMouseMove = eventHandlerFactory("mousemove");
var dispatchMouseUp = eventHandlerFactory("mouseup");
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  dispatchMouseDown,
  dispatchMouseMove,
  dispatchMouseUp
});
