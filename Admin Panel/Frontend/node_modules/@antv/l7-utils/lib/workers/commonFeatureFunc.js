var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/workers/commonFeatureFunc.ts
var commonFeatureFunc_exports = {};
__export(commonFeatureFunc_exports, {
  a_Color: () => a_Color,
  a_Position: () => a_Position,
  a_filter: () => a_filter,
  a_vertexId: () => a_vertexId
});
module.exports = __toCommonJS(commonFeatureFunc_exports);
function a_Color(feature) {
  const { color } = feature;
  return !color || !color.length ? [1, 1, 1, 1] : color;
}
function a_Position(feature, featureIdx, vertex) {
  return vertex.length === 2 ? [vertex[0], vertex[1], 0] : [vertex[0], vertex[1], vertex[2]];
}
function a_filter(feature) {
  const { filter } = feature;
  return filter ? [1] : [0];
}
function a_vertexId(feature, featureIdx) {
  return [featureIdx];
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  a_Color,
  a_Position,
  a_filter,
  a_vertexId
});
