var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/tileset-manager/utils/bound-buffer.ts
var bound_buffer_exports = {};
__export(bound_buffer_exports, {
  getLatLonBoundsBuffer: () => getLatLonBoundsBuffer,
  isLatLonBoundsContains: () => isLatLonBoundsContains
});
module.exports = __toCommonJS(bound_buffer_exports);
var import_geo = require("../../geo");
var getLatLonBoundsBuffer = (latLonBounds, bufferRatio) => {
  const bounds = (0, import_geo.bBoxToBounds)(latLonBounds);
  const newBounds = (0, import_geo.padBounds)(bounds, bufferRatio);
  const maxLngExtent = 360 * 3 - 180;
  const maxLatExtent = 85.0511287798065;
  const latLonBoundsBuffer = [
    Math.max(newBounds[0][0], -maxLngExtent),
    Math.max(newBounds[0][1], -maxLatExtent),
    Math.min(newBounds[1][0], maxLngExtent),
    Math.min(newBounds[1][1], maxLatExtent)
  ];
  return latLonBoundsBuffer;
};
var isLatLonBoundsContains = (latLonBoundsBuffer, latLonBounds) => {
  const boundsBuffer = (0, import_geo.bBoxToBounds)(latLonBoundsBuffer);
  const bounds = (0, import_geo.bBoxToBounds)(latLonBounds);
  const isContains = (0, import_geo.boundsContains)(boundsBuffer, bounds);
  return isContains;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getLatLonBoundsBuffer,
  isLatLonBoundsContains
});
