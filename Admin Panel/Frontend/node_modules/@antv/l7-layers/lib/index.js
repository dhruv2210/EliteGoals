"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  CanvasLayer: true,
  CityBuildingLayer: true,
  BaseLayer: true,
  BaseModel: true,
  GeometryLayer: true,
  HeatmapLayer: true,
  ImageLayer: true,
  LineLayer: true,
  PointLayer: true,
  PolygonLayer: true,
  RasterLayer: true,
  TileDebugLayer: true,
  EarthLayer: true,
  MaskLayer: true,
  WindLayer: true
};
Object.defineProperty(exports, "BaseLayer", {
  enumerable: true,
  get: function get() {
    return _BaseLayer.default;
  }
});
Object.defineProperty(exports, "BaseModel", {
  enumerable: true,
  get: function get() {
    return _BaseModel.default;
  }
});
Object.defineProperty(exports, "CanvasLayer", {
  enumerable: true,
  get: function get() {
    return _canvas.default;
  }
});
Object.defineProperty(exports, "CityBuildingLayer", {
  enumerable: true,
  get: function get() {
    return _building.default;
  }
});
Object.defineProperty(exports, "EarthLayer", {
  enumerable: true,
  get: function get() {
    return _earth.default;
  }
});
Object.defineProperty(exports, "GeometryLayer", {
  enumerable: true,
  get: function get() {
    return _Geometry.default;
  }
});
Object.defineProperty(exports, "HeatmapLayer", {
  enumerable: true,
  get: function get() {
    return _heatmap.default;
  }
});
Object.defineProperty(exports, "ImageLayer", {
  enumerable: true,
  get: function get() {
    return _image.default;
  }
});
Object.defineProperty(exports, "LineLayer", {
  enumerable: true,
  get: function get() {
    return _index.default;
  }
});
Object.defineProperty(exports, "MaskLayer", {
  enumerable: true,
  get: function get() {
    return _mask.default;
  }
});
Object.defineProperty(exports, "PointLayer", {
  enumerable: true,
  get: function get() {
    return _point.default;
  }
});
Object.defineProperty(exports, "PolygonLayer", {
  enumerable: true,
  get: function get() {
    return _polygon.default;
  }
});
Object.defineProperty(exports, "RasterLayer", {
  enumerable: true,
  get: function get() {
    return _raster.default;
  }
});
Object.defineProperty(exports, "TileDebugLayer", {
  enumerable: true,
  get: function get() {
    return _TileDebugLayer.default;
  }
});
Object.defineProperty(exports, "WindLayer", {
  enumerable: true,
  get: function get() {
    return _wind.default;
  }
});
var _l7Core = require("@antv/l7-core");
var _canvas = _interopRequireDefault(require("./canvas"));
var _building = _interopRequireDefault(require("./citybuliding/building"));
var _BaseLayer = _interopRequireDefault(require("./core/BaseLayer"));
var _BaseModel = _interopRequireDefault(require("./core/BaseModel"));
var _Geometry = _interopRequireDefault(require("./Geometry"));
var _heatmap = _interopRequireDefault(require("./heatmap"));
var _image = _interopRequireDefault(require("./image"));
var _index = _interopRequireDefault(require("./line/index"));
var _point = _interopRequireDefault(require("./point"));
var _polygon = _interopRequireDefault(require("./polygon"));
var _raster = _interopRequireDefault(require("./raster"));
var _TileDebugLayer = _interopRequireDefault(require("./tile/tileFactory/layers/TileDebugLayer"));
var _earth = _interopRequireDefault(require("./earth"));
var _mask = _interopRequireDefault(require("./mask"));
var _wind = _interopRequireDefault(require("./wind"));
var _DataMappingPlugin = _interopRequireDefault(require("./plugins/DataMappingPlugin"));
var _DataSourcePlugin = _interopRequireDefault(require("./plugins/DataSourcePlugin"));
var _FeatureScalePlugin = _interopRequireDefault(require("./plugins/FeatureScalePlugin"));
var _LayerAnimateStylePlugin = _interopRequireDefault(require("./plugins/LayerAnimateStylePlugin"));
var _LayerMaskPlugin = _interopRequireDefault(require("./plugins/LayerMaskPlugin"));
var _LayerModelPlugin = _interopRequireDefault(require("./plugins/LayerModelPlugin"));
var _LayerStylePlugin = _interopRequireDefault(require("./plugins/LayerStylePlugin"));
var _LightingPlugin = _interopRequireDefault(require("./plugins/LightingPlugin"));
var _MultiPassRendererPlugin = _interopRequireDefault(require("./plugins/MultiPassRendererPlugin"));
var _PixelPickingPlugin = _interopRequireDefault(require("./plugins/PixelPickingPlugin"));
var _RegisterStyleAttributePlugin = _interopRequireDefault(require("./plugins/RegisterStyleAttributePlugin"));
var _ShaderUniformPlugin = _interopRequireDefault(require("./plugins/ShaderUniformPlugin"));
var _UpdateModelPlugin = _interopRequireDefault(require("./plugins/UpdateModelPlugin"));
var _UpdateStyleAttributePlugin = _interopRequireDefault(require("./plugins/UpdateStyleAttributePlugin"));
var _interface = require("./core/interface");
Object.keys(_interface).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _interface[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _interface[key];
    }
  });
});
// 逐步替换为 Geometry

// import ConfigSchemaValidationPlugin from './plugins/ConfigSchemaValidationPlugin';

/**
 * 校验传入参数配置项的正确性
 * @see /dev-docs/ConfigSchemaValidation.md
 */
// container
//   .bind<ILayerPlugin>(TYPES.ILayerPlugin)
//   .to(ConfigSchemaValidationPlugin)
//   .inRequestScope();
/**
 * 获取 Source
 */
_l7Core.container.bind(_l7Core.TYPES.ILayerPlugin).to(_DataSourcePlugin.default).inRequestScope();
/**
 * 根据 StyleAttribute 创建 VertexAttribute
 */
_l7Core.container.bind(_l7Core.TYPES.ILayerPlugin).to(_RegisterStyleAttributePlugin.default).inRequestScope();
/**
 * 根据 Source 创建 Scale
 */
_l7Core.container.bind(_l7Core.TYPES.ILayerPlugin).to(_FeatureScalePlugin.default).inRequestScope();
/**
 * 使用 Scale 进行数据映射
 */
_l7Core.container.bind(_l7Core.TYPES.ILayerPlugin).to(_DataMappingPlugin.default).inRequestScope();

/**
 * 更新地图样式配置项 如active, show, hide
 */
_l7Core.container.bind(_l7Core.TYPES.ILayerPlugin).to(_LayerStylePlugin.default).inRequestScope();

/**
 * 初始化地图 Mask
 */
_l7Core.container.bind(_l7Core.TYPES.ILayerPlugin).to(_LayerMaskPlugin.default).inRequestScope();

/**
 * 负责属性更新
 */
_l7Core.container.bind(_l7Core.TYPES.ILayerPlugin).to(_UpdateStyleAttributePlugin.default).inRequestScope();

/**
 * 负责Model更新
 */
_l7Core.container.bind(_l7Core.TYPES.ILayerPlugin).to(_UpdateModelPlugin.default).inRequestScope();

/**
 * Multi Pass 自定义渲染管线
 */
_l7Core.container.bind(_l7Core.TYPES.ILayerPlugin).to(_MultiPassRendererPlugin.default).inRequestScope();
/**
 * 传入相机坐标系参数
 */
_l7Core.container.bind(_l7Core.TYPES.ILayerPlugin).to(_ShaderUniformPlugin.default).inRequestScope();

/**
 * 传入动画参数
 */
_l7Core.container.bind(_l7Core.TYPES.ILayerPlugin).to(_LayerAnimateStylePlugin.default).inRequestScope();
/**
 * 传入光照相关参数
 */
_l7Core.container.bind(_l7Core.TYPES.ILayerPlugin).to(_LightingPlugin.default).inRequestScope();
/**
 * 负责拾取过程中 Encode 以及 Highlight 阶段及结束后恢复
 */
_l7Core.container.bind(_l7Core.TYPES.ILayerPlugin).to(_PixelPickingPlugin.default).inRequestScope();
/**
 * 初始化Model
 */
_l7Core.container.bind(_l7Core.TYPES.ILayerPlugin).to(_LayerModelPlugin.default).inRequestScope();