"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _BaseLayer2 = _interopRequireDefault(require("../core/BaseLayer"));
var _models = _interopRequireDefault(require("./models"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var GeometryLayer = /*#__PURE__*/function (_BaseLayer) {
  (0, _inherits2.default)(GeometryLayer, _BaseLayer);
  var _super = _createSuper(GeometryLayer);
  function GeometryLayer() {
    var _this;
    (0, _classCallCheck2.default)(this, GeometryLayer);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "type", 'GeometryLayer');
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "defaultSourceConfig", {
      data: [{
        x: 0,
        y: 0
      }],
      options: {
        parser: {
          type: 'json',
          x: 'x',
          y: 'y'
        }
      }
    });
    return _this;
  }
  (0, _createClass2.default)(GeometryLayer, [{
    key: "buildModels",
    value: function () {
      var _buildModels = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
        var modelType;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              modelType = this.getModelType();
              this.layerModel = new _models.default[modelType](this);
              _context.next = 4;
              return this.initLayerModels();
            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function buildModels() {
        return _buildModels.apply(this, arguments);
      }
      return buildModels;
    }()
  }, {
    key: "getDefaultConfig",
    value: function getDefaultConfig() {
      var type = this.getModelType();
      var defaultConfig = {
        plane: {},
        sprite: {},
        billboard: {}
      };
      return defaultConfig[type];
    }
  }, {
    key: "getModelType",
    value: function getModelType() {
      var _shapeAttribute$scale;
      var shapeAttribute = this.styleAttributeService.getLayerStyleAttribute('shape');
      var shape = shapeAttribute === null || shapeAttribute === void 0 ? void 0 : (_shapeAttribute$scale = shapeAttribute.scale) === null || _shapeAttribute$scale === void 0 ? void 0 : _shapeAttribute$scale.field;
      if (shape === 'plane') {
        return 'plane';
      } else if (shape === 'sprite') {
        return 'sprite';
      } else if (shape === 'billboard') {
        return 'billboard';
      } else {
        return 'plane';
      }
    }
  }]);
  return GeometryLayer;
}(_BaseLayer2.default);
exports.default = GeometryLayer;