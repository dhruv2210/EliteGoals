import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
var _dec, _class;
import _regeneratorRuntime from "@babel/runtime/regenerator";
import { IDebugLog, ILayerStage } from '@antv/l7-core';
import { injectable } from 'inversify';
import 'reflect-metadata';
import TileLayer from "../tile/tileLayer/BaseLayer";
/**
 * Layer Model 初始化，更新，销毁
 */
var LayerModelPlugin = (_dec = injectable(), _dec(_class = /*#__PURE__*/function () {
  function LayerModelPlugin() {
    _classCallCheck(this, LayerModelPlugin);
  }
  _createClass(LayerModelPlugin, [{
    key: "build",
    value: function () {
      var _build = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(layer) {
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              // 更新Model 配置项
              layer.prepareBuildModel();
              // 初始化 Model
              _context.next = 3;
              return layer.buildModels();
            case 3:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function build(_x) {
        return _build.apply(this, arguments);
      }
      return build;
    }()
  }, {
    key: "initLayerModel",
    value: function () {
      var _initLayerModel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(layer) {
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return this.build(layer);
            case 2:
              layer.styleNeedUpdate = false;
            case 3:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function initLayerModel(_x2) {
        return _initLayerModel.apply(this, arguments);
      }
      return initLayerModel;
    }()
  }, {
    key: "prepareLayerModel",
    value: function () {
      var _prepareLayerModel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(layer) {
        return _regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return this.build(layer);
            case 2:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function prepareLayerModel(_x3) {
        return _prepareLayerModel.apply(this, arguments);
      }
      return prepareLayerModel;
    }()
  }, {
    key: "apply",
    value: function apply(layer) {
      var _this = this;
      layer.hooks.init.tapPromise('LayerModelPlugin', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {
        return _regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              if (!layer.getSource().isTile) {
                _context4.next = 4;
                break;
              }
              layer.prepareBuildModel();
              layer.tileLayer = new TileLayer(layer);
              return _context4.abrupt("return");
            case 4:
              layer.log(IDebugLog.BuildModelStart, ILayerStage.INIT);
              _context4.next = 7;
              return _this.initLayerModel(layer);
            case 7:
              layer.log(IDebugLog.BuildModelEnd, ILayerStage.INIT);
            case 8:
            case "end":
              return _context4.stop();
          }
        }, _callee4);
      })));
      layer.hooks.beforeRenderData.tapPromise('LayerModelPlugin', /*#__PURE__*/function () {
        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(flag) {
          return _regeneratorRuntime.wrap(function _callee5$(_context5) {
            while (1) switch (_context5.prev = _context5.next) {
              case 0:
                if (flag) {
                  _context5.next = 2;
                  break;
                }
                return _context5.abrupt("return", false);
              case 2:
                if (!layer.getSource().isTile) {
                  _context5.next = 5;
                  break;
                }
                layer.tileLayer = new TileLayer(layer);
                return _context5.abrupt("return", false);
              case 5:
                layer.log(IDebugLog.BuildModelStart, ILayerStage.UPDATE);
                _context5.next = 8;
                return _this.prepareLayerModel(layer);
              case 8:
                layer.log(IDebugLog.BuildModelEnd, ILayerStage.UPDATE);
                return _context5.abrupt("return", true);
              case 10:
              case "end":
                return _context5.stop();
            }
          }, _callee5);
        }));
        return function (_x4) {
          return _ref2.apply(this, arguments);
        };
      }());
    }
  }]);
  return LayerModelPlugin;
}()) || _class);
export { LayerModelPlugin as default };