import { ILayer, ILayerService, ILngLat, IRendererService, ITile } from '@antv/l7-core';
import { SourceTile } from '@antv/l7-utils';
import 'reflect-metadata';
interface ITileLayerServiceOptions {
    rendererService: IRendererService;
    layerService: ILayerService;
    parent: ILayer;
}
export declare class TileLayerService {
    /**
     * tileResource 用于存储瓦片的全局资源
     */
    tileResource: Map<any, any>;
    private rendererService;
    private layerService;
    private parent;
    private layerTiles;
    constructor({ rendererService, layerService, parent, }: ITileLayerServiceOptions);
    get tiles(): ITile[];
    hasTile(tileKey: string): boolean;
    addTile(tile: ITile): void;
    getTile(tileKey: string): ITile | undefined;
    getVisibleTileBylngLat(lngLat: ILngLat): ITile | undefined;
    removeTile(tileKey: string): void;
    updateTileVisible(sourceTile: SourceTile): void;
    isParentLoaded(sourceTile: SourceTile): boolean;
    isChildrenLoaded(sourceTile: SourceTile): boolean;
    render(): Promise<void>;
    getRenderLayers(): ILayer[];
    getLayers(): ILayer[];
    getTiles(): ITile[];
    destroy(): void;
}
export {};
