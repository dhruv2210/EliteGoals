import { IInteractionTarget, ILayer, ILayerService, ITilePickService } from '@antv/l7-core';
import { TileLayerService } from './TileLayerService';
export interface ITilePickServiceOptions {
    layerService: ILayerService;
    tileLayerService: TileLayerService;
    parent: ILayer;
}
export declare class TilePickService implements ITilePickService {
    private layerService;
    private tileLayerService;
    private tileSourceService;
    private parent;
    private tilePickID;
    constructor({ layerService, tileLayerService, parent, }: ITilePickServiceOptions);
    pickRender(target: IInteractionTarget): void;
    pick(layer: ILayer, target: IInteractionTarget): boolean;
    selectFeature(pickedColors: Uint8Array | undefined): void;
    highlightPickedFeature(pickedColors: Uint8Array | undefined): void;
    updateHighLight(r: number, g: number, b: number, type: string): void;
    setPickState(): void;
    private color2PickId;
    private pickId2Color;
    /** 从瓦片中根据数据 */
    getFeatureById(pickedFeatureIdx: number): any[];
    pickRasterLayer(layer: ILayer, target: IInteractionTarget, parent?: ILayer): boolean;
}
