{"version":3,"sources":["../../src/webgl/index.ts"],"names":["WebGLEngine","supportWebGPU","useWGSL","$canvas","gl","inited","createModel","options","uniforms","Promise","all","Object","keys","map","name","load","undefined","texture","ReglModel","createAttribute","ReglAttribute","createBuffer","ReglBuffer","createElements","ReglElements","createTexture2D","ReglTexture2D","createFramebuffer","ReglFramebuffer","useFramebuffer","framebuffer","drawCommands","get","createComputeModel","context","ReglComputeModel","clear","color","depth","stencil","reglClearOptions","setScissor","scissor","_gl","enable","box","SCISSOR_TEST","x","y","width","height","disable","_refresh","viewport","readPixels","readPixelsOptions","read","getCanvas","getGLContext","destroy","cfg","canvas","resolve","reject","attributes","alpha","antialias","premultipliedAlpha","pixelRatio","extensions","optionalExtensions","profile","onDone","err","r","limits","readFloat"],"mappings":"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","sourcesContent":["/**\n * render w/ regl\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md\n */\nimport {\n  gl,\n  GLSLContext,\n  IAttribute,\n  IAttributeInitializationOptions,\n  IBuffer,\n  IBufferInitializationOptions,\n  IClearOptions,\n  IComputeModel,\n  IElements,\n  IElementsInitializationOptions,\n  IFramebuffer,\n  IFramebufferInitializationOptions,\n  IModel,\n  IModelInitializationOptions,\n  IReadPixelsOptions,\n  IRendererConfig,\n  IRendererService,\n  ITexture2D,\n  ITexture2DInitializationOptions,\n} from '@antv/g-webgpu-core';\nimport { injectable } from 'inversify';\nimport regl from 'regl';\nimport ReglAttribute from './ReglAttribute';\nimport ReglBuffer from './ReglBuffer';\nimport ReglComputeModel from './ReglComputeModel';\nimport ReglElements from './ReglElements';\nimport ReglFramebuffer from './ReglFramebuffer';\nimport ReglModel from './ReglModel';\nimport ReglTexture2D from './ReglTexture2D';\n\n/**\n * regl renderer\n */\n@injectable()\nexport class WebGLEngine implements IRendererService {\n  public supportWebGPU = false;\n  public useWGSL = false;\n  private $canvas: HTMLCanvasElement;\n  private gl: regl.Regl;\n  private inited: boolean;\n\n  public async init(cfg: IRendererConfig): Promise<void> {\n    if (this.inited) {\n      return;\n    }\n    this.$canvas = cfg.canvas!;\n    // tslint:disable-next-line:typedef\n    this.gl = await new Promise((resolve, reject) => {\n      regl({\n        canvas: cfg.canvas,\n        attributes: {\n          alpha: true,\n          // use TAA instead of MSAA\n          // @see https://www.khronos.org/registry/webgl/specs/1.0/#5.2.1\n          antialias: cfg.antialias,\n          premultipliedAlpha: true,\n          // preserveDrawingBuffer: false,\n        },\n        pixelRatio: 1,\n        // TODO: use extensions\n        extensions: [\n          'OES_element_index_uint',\n          'OES_texture_float',\n          'OES_standard_derivatives', // wireframe\n          'angle_instanced_arrays', // VSM shadow map\n        ],\n        optionalExtensions: [\n          'EXT_texture_filter_anisotropic',\n          'EXT_blend_minmax',\n          'WEBGL_depth_texture',\n        ],\n        profile: true,\n        onDone: (err: Error | null, r?: regl.Regl | undefined): void => {\n          if (err || !r) {\n            reject(err);\n          }\n          // @ts-ignore\n          resolve(r);\n        },\n      });\n    });\n    this.inited = true;\n  }\n\n  public isFloatSupported() {\n    // @see https://github.com/antvis/GWebGPUEngine/issues/26\n    // @ts-ignore\n    return this.gl.limits.readFloat;\n  }\n\n  public createModel = async (\n    options: IModelInitializationOptions,\n  ): Promise<IModel> => {\n    if (options.uniforms) {\n      await Promise.all(\n        Object.keys(options.uniforms).map(async (name) => {\n          // @ts-ignore\n          if (options.uniforms![name] && options.uniforms![name].load !== undefined) {\n            // @ts-ignore\n            const texture = await options.uniforms![name].load();\n            // @ts-ignore\n            options.uniforms[name] = texture;\n          }\n        }),\n      );\n    }\n    return new ReglModel(this.gl, options);\n  };\n\n  public createAttribute = (\n    options: IAttributeInitializationOptions,\n  ): IAttribute => new ReglAttribute(this.gl, options);\n\n  public createBuffer = (options: IBufferInitializationOptions): IBuffer =>\n    new ReglBuffer(this.gl, options);\n\n  public createElements = (\n    options: IElementsInitializationOptions,\n  ): IElements => new ReglElements(this.gl, options);\n\n  public createTexture2D = (\n    options: ITexture2DInitializationOptions,\n  ): ITexture2D => new ReglTexture2D(this.gl, options);\n\n  public createFramebuffer = (options: IFramebufferInitializationOptions) =>\n    new ReglFramebuffer(this.gl, options);\n\n  public useFramebuffer = (\n    framebuffer: IFramebuffer | null,\n    drawCommands: () => void,\n  ) => {\n    this.gl({\n      framebuffer: framebuffer ? (framebuffer as ReglFramebuffer).get() : null,\n    })(drawCommands);\n  };\n\n  public createComputeModel = async (\n    context: GLSLContext,\n  ): Promise<IComputeModel> => {\n    return new ReglComputeModel(this.gl, context);\n  };\n\n  public clear = (options: IClearOptions) => {\n    // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#clear-the-draw-buffer\n    const { color, depth, stencil, framebuffer = null } = options;\n    const reglClearOptions: regl.ClearOptions = {\n      color,\n      depth,\n      stencil,\n    };\n\n    reglClearOptions.framebuffer =\n      framebuffer === null\n        ? framebuffer\n        : (framebuffer as ReglFramebuffer).get();\n\n    this.gl.clear(reglClearOptions);\n  };\n\n  public setScissor = (\n    scissor: Partial<{\n      enable: boolean;\n      box: { x: number; y: number; width: number; height: number };\n    }>,\n  ) => {\n    if (this.gl && this.gl._gl) {\n      // https://developer.mozilla.org/zh-CN/docs/Web/API/WebGLRenderingContext/scissor\n      if (scissor.enable && scissor.box) {\n        // console.log(scissor.box);\n        this.gl._gl.enable(gl.SCISSOR_TEST);\n        this.gl._gl.scissor(\n          scissor.box.x,\n          scissor.box.y,\n          scissor.box.width,\n          scissor.box.height,\n        );\n      } else {\n        this.gl._gl.disable(gl.SCISSOR_TEST);\n      }\n      this.gl._refresh();\n    }\n  };\n\n  public viewport = ({\n    x,\n    y,\n    width,\n    height,\n  }: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  }) => {\n    if (this.gl && this.gl._gl) {\n      // use WebGL context directly\n      // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#unsafe-escape-hatch\n      this.gl._gl.viewport(x, y, width, height);\n      this.gl._refresh();\n    }\n  };\n\n  public readPixels = (options: IReadPixelsOptions) => {\n    const { framebuffer, x, y, width, height } = options;\n    const readPixelsOptions: regl.ReadOptions = {\n      x,\n      y,\n      width,\n      height,\n    };\n    if (framebuffer) {\n      readPixelsOptions.framebuffer = (framebuffer as ReglFramebuffer).get();\n    }\n    return this.gl.read(readPixelsOptions);\n  };\n\n  public getCanvas = () => {\n    return this.$canvas;\n  };\n\n  public getGLContext = () => {\n    return this.gl._gl;\n  };\n\n  public destroy = () => {\n    if (this.gl) {\n      // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#clean-up\n      this.gl.destroy();\n      this.inited = false;\n    }\n  };\n\n  public beginFrame() {\n    //\n  }\n\n  public endFrame() {\n    //\n  }\n}\n"],"file":"index.js"}