{"version":3,"sources":["../../src/utils/dom.ts"],"names":["isWindowObjectExist","window","loadScript","scriptUrl","onSuccess","onError","scriptId","head","document","getElementsByTagName","script","createElement","setAttribute","id","onload","onerror","e","appendChild","loadScriptAsync","Promise","resolve","reject","message","exception"],"mappings":"AAAA,OAAO,SAASA,mBAAT,GAAwC;AAC7C,SAAO,OAAOC,MAAP,KAAkB,WAAzB;AACD;AAED,OAAO,SAASC,UAAT,CACLC,SADK,EAELC,SAFK,EAGLC,OAHK,EAILC,QAJK,EAKL;AACA,MAAI,CAACN,mBAAmB,EAAxB,EAA4B;AAC1B;AACD;;AACD,MAAMO,IAAI,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAb;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAf;AACAD,EAAAA,MAAM,CAACE,YAAP,CAAoB,MAApB,EAA4B,iBAA5B;AACAF,EAAAA,MAAM,CAACE,YAAP,CAAoB,KAApB,EAA2BT,SAA3B;;AACA,MAAIG,QAAJ,EAAc;AACZI,IAAAA,MAAM,CAACG,EAAP,GAAYP,QAAZ;AACD;;AAEDI,EAAAA,MAAM,CAACI,MAAP,GAAgB,YAAM;AACpB,QAAIV,SAAJ,EAAe;AACbA,MAAAA,SAAS;AACV;AACF,GAJD;;AAMAM,EAAAA,MAAM,CAACK,OAAP,GAAiB,UAACC,CAAD,EAAO;AACtB,QAAIX,OAAJ,EAAa;AACXA,MAAAA,OAAO,kCAA2BF,SAA3B,QAAyCa,CAAzC,CAAP;AACD;AACF,GAJD;;AAMAT,EAAAA,IAAI,CAACU,WAAL,CAAiBP,MAAjB;AACD;AAED,OAAO,SAASQ,eAAT,CACLf,SADK,EAELG,QAFK,EAGU;AACf,SAAO,IAAIa,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCnB,IAAAA,UAAU,CACRC,SADQ,EAER,YAAM;AACJiB,MAAAA,OAAO;AACR,KAJO,EAKR,UAACE,OAAD,EAAUC,SAAV,EAAwB;AACtBF,MAAAA,MAAM,CAACE,SAAD,CAAN;AACD,KAPO,CAAV;AASD,GAVM,CAAP;AAWD","sourcesContent":["export function isWindowObjectExist(): boolean {\n  return typeof window !== 'undefined';\n}\n\nexport function loadScript(\n  scriptUrl: string,\n  onSuccess: () => void,\n  onError?: (message?: string, exception?: any) => void,\n  scriptId?: string,\n) {\n  if (!isWindowObjectExist()) {\n    return;\n  }\n  const head = document.getElementsByTagName('head')[0];\n  const script = document.createElement('script');\n  script.setAttribute('type', 'text/javascript');\n  script.setAttribute('src', scriptUrl);\n  if (scriptId) {\n    script.id = scriptId;\n  }\n\n  script.onload = () => {\n    if (onSuccess) {\n      onSuccess();\n    }\n  };\n\n  script.onerror = (e) => {\n    if (onError) {\n      onError(`Unable to load script '${scriptUrl}'`, e);\n    }\n  };\n\n  head.appendChild(script);\n}\n\nexport function loadScriptAsync(\n  scriptUrl: string,\n  scriptId?: string,\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    loadScript(\n      scriptUrl,\n      () => {\n        resolve();\n      },\n      (message, exception) => {\n        reject(exception);\n      },\n    );\n  });\n}\n"],"file":"dom.js"}