var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/regl/ReglFramebuffer.ts
var ReglFramebuffer_exports = {};
__export(ReglFramebuffer_exports, {
  default: () => ReglFramebuffer
});
module.exports = __toCommonJS(ReglFramebuffer_exports);
var ReglFramebuffer = class {
  constructor(reGl, options) {
    const { width, height, color, colors } = options;
    const framebufferOptions = {
      width,
      height
    };
    if (Array.isArray(colors)) {
      framebufferOptions.colors = colors.map(
        (c) => c.get()
      );
    }
    if (color && typeof color !== "boolean") {
      framebufferOptions.color = color.get();
    }
    this.framebuffer = reGl.framebuffer(framebufferOptions);
  }
  get() {
    return this.framebuffer;
  }
  destroy() {
    this.framebuffer.destroy();
  }
  resize({ width, height }) {
    this.framebuffer.resize(width, height);
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
