import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

import { BuildOutlined, CarOutlined } from '@ant-design/icons';
import { ConfigProvider, Drawer, Empty, Tag, theme as antdTheme, Tooltip } from 'antd';
import classNames from 'classnames';
import React, { useMemo } from 'react';
import ComponentDemos from "../component-demos";
import { useLocale } from "../locale";
import TokenCard from "../token-panel/token-card";
import getDesignToken from "../utils/getDesignToken";
import makeStyle from "../utils/makeStyle";
import { getComponentToken } from "../utils/statistic";
import ComponentCard from "./ComponentCard";
var defaultAlgorithm = antdTheme.defaultAlgorithm;
var useStyle = makeStyle('ComponentTokenDrawer', function (token) {
  var _previewerComponent;

  return {
    '.previewer-component-token-drawer': (_previewerComponent = {}, _defineProperty(_previewerComponent, "&".concat(token.rootCls, "-drawer ").concat(token.rootCls, "-drawer-body"), {
      padding: '0 !important'
    }), _defineProperty(_previewerComponent, '.previewer-component-drawer-subtitle', {
      fontWeight: token.fontWeightStrong,
      marginBottom: token.marginSM,
      marginInlineStart: token.marginXS,
      color: token.colorText
    }), _defineProperty(_previewerComponent, '.previewer-component-token-drawer-theme', {
      fontWeight: 'normal',
      marginInlineStart: 8,
      borderRadius: 4,
      backgroundColor: token.colorInfoBg,
      color: token.colorPrimary,
      borderColor: token.colorInfoBg
    }), _previewerComponent)
  };
});
var useComponentFullDemosStyle = makeStyle('ComponentFullDemos', function (token) {
  return {
    '.previewer-component-full-demos': {
      flex: 1,
      overflow: 'auto',
      padding: 24,
      backgroundColor: token.colorBgLayout,
      '> *:not(:last-child)': {
        marginBottom: 12
      }
    }
  };
});

var ComponentFullDemos = function ComponentFullDemos(_ref) {
  var demos = _ref.demos;

  var _useComponentFullDemo = useComponentFullDemosStyle(),
      _useComponentFullDemo2 = _slicedToArray(_useComponentFullDemo, 2),
      hashId = _useComponentFullDemo2[1];

  var locale = useLocale();
  return /*#__PURE__*/React.createElement("div", {
    className: classNames('previewer-component-full-demos', hashId),
    style: {}
  }, demos === null || demos === void 0 ? void 0 : demos.map(function (demo) {
    var _demo$tokens, _demo$tokens2, _demo$tokens3;

    return /*#__PURE__*/React.createElement(ComponentCard, {
      key: demo.key,
      title: /*#__PURE__*/React.createElement(Tooltip, {
        title: (_demo$tokens = demo.tokens) === null || _demo$tokens === void 0 ? void 0 : _demo$tokens.join(', ')
      }, /*#__PURE__*/React.createElement("span", null, locale.demo.relatedTokens, ": ", (_demo$tokens2 = demo.tokens) === null || _demo$tokens2 === void 0 ? void 0 : _demo$tokens2.join(', '), (((_demo$tokens3 = demo.tokens) === null || _demo$tokens3 === void 0 ? void 0 : _demo$tokens3.length) || 0) > 2 ? '...' : ''))
    }, demo.demo);
  }));
};

var ComponentTokenDrawer = function ComponentTokenDrawer(_ref2) {
  var visible = _ref2.visible,
      _ref2$component = _ref2.component,
      component = _ref2$component === void 0 ? 'Button' : _ref2$component,
      onClose = _ref2.onClose,
      theme = _ref2.theme;

  var _useStyle = useStyle(),
      _useStyle2 = _slicedToArray(_useStyle, 2),
      hashId = _useStyle2[1];

  var _ref3 = getComponentToken(component) || {
    global: []
  },
      componentToken = _ref3.component,
      aliasTokenNames = _ref3.global;

  var componentTokenData = useMemo(function () {
    return Object.keys(componentToken !== null && componentToken !== void 0 ? componentToken : {});
  }, [componentToken]);
  var aliasTokenData = useMemo(function () {
    return aliasTokenNames.sort();
  }, [aliasTokenNames]);

  var handleComponentTokenChange = function handleComponentTokenChange(token, value) {
    var _theme$onThemeChange, _theme$config$compone;

    (_theme$onThemeChange = theme.onThemeChange) === null || _theme$onThemeChange === void 0 ? void 0 : _theme$onThemeChange.call(theme, _objectSpread(_objectSpread({}, theme.config), {}, {
      components: _objectSpread(_objectSpread({}, theme.config.components), {}, _defineProperty({}, component, _objectSpread(_objectSpread({}, (_theme$config$compone = theme.config.components) === null || _theme$config$compone === void 0 ? void 0 : _theme$config$compone[component]), {}, _defineProperty({}, token, value))))
    }), ['components', component, token]);
  };

  return /*#__PURE__*/React.createElement(Drawer, {
    open: visible,
    title: /*#__PURE__*/React.createElement("div", {
      style: {
        display: 'flex',
        alignItems: 'center'
      }
    }, /*#__PURE__*/React.createElement("span", null, "".concat(component, " \u7EC4\u4EF6 Token")), /*#__PURE__*/React.createElement(Tag, {
      className: "previewer-component-token-drawer-theme"
    }, theme.name)),
    onClose: onClose,
    width: 1200,
    className: classNames('previewer-component-token-drawer', hashId)
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      display: 'flex',
      height: '100%'
    }
  }, /*#__PURE__*/React.createElement(ConfigProvider, {
    theme: theme.config
  }, /*#__PURE__*/React.createElement(ConfigProvider, {
    theme: theme.config
  }, /*#__PURE__*/React.createElement(ComponentFullDemos, {
    demos: ComponentDemos[component]
  }))), /*#__PURE__*/React.createElement("div", {
    style: {
      flex: '0 0 400px',
      overflow: 'auto',
      padding: 24
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: "previewer-component-drawer-subtitle"
  }, "Related Tokens / \u76F8\u5173 token"), /*#__PURE__*/React.createElement(TokenCard, {
    icon: /*#__PURE__*/React.createElement(BuildOutlined, null),
    hideUsageCount: true,
    defaultOpen: true,
    title: "Component Token",
    tokenArr: componentTokenData,
    tokenPath: ['components', component],
    themes: [theme],
    fallback: function fallback() {
      return componentToken;
    },
    onTokenChange: function onTokenChange(_, tokenName, value) {
      return handleComponentTokenChange(tokenName, value);
    },
    placeholder: /*#__PURE__*/React.createElement(Empty, {
      image: Empty.PRESENTED_IMAGE_SIMPLE,
      description: "\u6682\u65E0\u76F8\u5173 Component Token",
      style: {
        marginBlock: 0,
        paddingBlock: 32
      }
    })
  }), /*#__PURE__*/React.createElement(TokenCard, {
    icon: /*#__PURE__*/React.createElement(CarOutlined, null),
    hideUsageCount: true,
    themes: [theme],
    defaultOpen: true,
    title: "Alias Token",
    tokenArr: aliasTokenData,
    tokenPath: ['components', component],
    fallback: function fallback(themeConfig) {
      return getDesignToken(themeConfig);
    },
    onTokenChange: function onTokenChange(_, tokenName, value) {
      return handleComponentTokenChange(tokenName, value);
    },
    placeholder: /*#__PURE__*/React.createElement(Empty, {
      image: Empty.PRESENTED_IMAGE_SIMPLE,
      description: "\u6682\u65E0\u76F8\u5173 Alias Token",
      style: {
        marginBlock: 0,
        paddingBlock: 32
      }
    })
  }))));
};

export default (function (_ref4) {
  var props = Object.assign({}, _ref4);
  return /*#__PURE__*/React.createElement(ConfigProvider, {
    theme: {
      algorithm: defaultAlgorithm
    }
  }, /*#__PURE__*/React.createElement(ComponentTokenDrawer, props));
});