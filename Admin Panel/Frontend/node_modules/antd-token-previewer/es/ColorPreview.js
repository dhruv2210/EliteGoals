import _extends from "@babel/runtime/helpers/esm/extends";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["color", "style", "className", "dark"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

import React from 'react';
import classNames from 'classnames';
import makeStyle from "./utils/makeStyle";
import getColorBgImg from "./utils/getColorBgImg";
var useStyle = makeStyle('ColorPreview', function () {
  return {
    '.previewer-color-preview': {
      width: 20,
      height: 20,
      position: 'relative',
      borderRadius: '50%',
      padding: 0,
      display: 'inline-block',
      '&::before': {
        content: '""',
        width: '100%',
        height: '100%',
        borderRadius: '50%',
        top: 0,
        insetInlineStart: 0,
        position: 'absolute',
        zIndex: 2,
        backgroundColor: 'var(--antd-token-previewer-color-preview)',
        boxShadow: '0 2px 3px -1px rgba(0,0,0,0.20), inset 0 0 0 1px rgba(0,0,0,0.09)'
      }
    }
  };
});

var ColorPreview = function ColorPreview(_ref) {
  var color = _ref.color,
      style = _ref.style,
      className = _ref.className,
      dark = _ref.dark,
      restProps = _objectWithoutProperties(_ref, _excluded);

  var _useStyle = useStyle(),
      _useStyle2 = _slicedToArray(_useStyle, 2),
      warpSSR = _useStyle2[0],
      hashId = _useStyle2[1];

  return warpSSR( /*#__PURE__*/React.createElement("div", _extends({}, restProps, {
    className: classNames('previewer-color-preview', className, hashId),
    style: _objectSpread(_defineProperty({}, '--antd-token-previewer-color-preview', color), style)
  }), /*#__PURE__*/React.createElement("div", {
    style: {
      content: '""',
      width: 18,
      height: 18,
      borderRadius: '50%',
      top: 1,
      insetInlineStart: 1,
      position: 'absolute',
      zIndex: 1,
      background: "".concat(getColorBgImg(dark), " 0% 0% / 20px")
    }
  })));
};

export default ColorPreview;