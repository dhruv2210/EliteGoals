import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import tokenStatistic from 'antd/es/version/token';
var tokenRelatedComponents = {};

var getRelatedComponentsSingle = function getRelatedComponentsSingle(token) {
  var _tokenRelatedComponen;

  if (!tokenRelatedComponents[token]) {
    tokenRelatedComponents[token] = Object.entries(tokenStatistic).filter(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          tokens = _ref2[1];

      return tokens.global.includes(token);
    }).map(function (_ref3) {
      var _ref4 = _slicedToArray(_ref3, 1),
          component = _ref4[0];

      return component;
    });
  }

  return (_tokenRelatedComponen = tokenRelatedComponents[token]) !== null && _tokenRelatedComponen !== void 0 ? _tokenRelatedComponen : [];
};

export var getRelatedComponents = function getRelatedComponents(token) {
  var mergedTokens = Array.isArray(token) ? token : [token];
  return Array.from(new Set(mergedTokens.reduce(function (result, item) {
    return result.concat(getRelatedComponentsSingle(item));
  }, [])));
};
export var getComponentToken = function getComponentToken(component) {
  return tokenStatistic[component];
};