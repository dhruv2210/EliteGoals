import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

import defaultMap from 'antd/es/theme/themes/default';
import seed from 'antd/es/theme/themes/seed';
import formatToken from 'antd/es/theme/util/alias';
export default function getDesignToken() {
  var _config$algorithm, _config$token;

  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var seedToken = _objectSpread(_objectSpread({}, seed), config.token);

  var mapFn = (_config$algorithm = config.algorithm) !== null && _config$algorithm !== void 0 ? _config$algorithm : defaultMap;
  var mapToken = Array.isArray(mapFn) ? mapFn.reduce(function (result, fn) {
    return fn(seedToken, result);
  }, undefined) : mapFn(seedToken);

  var mergedMapToken = _objectSpread(_objectSpread(_objectSpread({}, mapToken), config.components), {}, {
    override: (_config$token = config.token) !== null && _config$token !== void 0 ? _config$token : {}
  });

  return formatToken(mergedMapToken);
}