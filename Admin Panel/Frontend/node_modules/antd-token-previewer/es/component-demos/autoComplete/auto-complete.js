import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import React, { useState } from 'react';
import { AutoComplete } from 'antd';

var mockVal = function mockVal(str) {
  var repeat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
  return {
    value: str.repeat(repeat)
  };
};

var Complete = function Complete() {
  var _useState = useState(''),
      _useState2 = _slicedToArray(_useState, 2),
      value = _useState2[0],
      setValue = _useState2[1];

  var _useState3 = useState([]),
      _useState4 = _slicedToArray(_useState3, 2),
      options = _useState4[0],
      setOptions = _useState4[1];

  var onSearch = function onSearch(searchText) {
    setOptions(!searchText ? [] : [mockVal(searchText), mockVal(searchText, 2), mockVal(searchText, 3)]);
  };

  var onSelect = function onSelect(data) {
    // eslint-disable-next-line no-console
    console.log('onSelect', data);
  };

  var onChange = function onChange(data) {
    setValue(data);
  };

  return /*#__PURE__*/React.createElement(React.Fragment, null, ' ', /*#__PURE__*/React.createElement(AutoComplete, {
    options: options,
    style: {
      width: 200
    },
    onSelect: onSelect,
    onSearch: onSearch,
    placeholder: "input here"
  }), ' ', /*#__PURE__*/React.createElement("br", null), " ", /*#__PURE__*/React.createElement("br", null), ' ', /*#__PURE__*/React.createElement(AutoComplete, {
    value: value,
    options: options,
    style: {
      width: 200
    },
    onSelect: onSelect,
    onSearch: onSearch,
    onChange: onChange,
    placeholder: "control mode"
  }), ' ');
};

var Demo = function Demo() {
  return /*#__PURE__*/React.createElement(Complete, null);
};

var componentDemo = {
  demo: /*#__PURE__*/React.createElement(Demo, null),
  tokens: [],
  key: 'autoComplete'
};
export default componentDemo;