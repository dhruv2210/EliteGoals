"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _cssinjs = require("@ant-design/cssinjs");

var _antd = require("antd");

var _react = require("react");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var ConfigContext = _antd.ConfigProvider.ConfigContext;

var makeStyle = function makeStyle(path, styleFn) {
  return function () {
    var _antdTheme$useToken = _antd.theme.useToken(),
        theme = _antdTheme$useToken.theme,
        token = _antdTheme$useToken.token,
        hashId = _antdTheme$useToken.hashId;

    var _useContext = (0, _react.useContext)(ConfigContext),
        getPrefixCls = _useContext.getPrefixCls;

    var rootCls = getPrefixCls();
    return [(0, _cssinjs.useStyleRegister)({
      theme: theme,
      hashId: hashId,
      token: token,
      path: [path]
    }, function () {
      return styleFn(_objectSpread(_objectSpread({}, token), {}, {
        rootCls: ".".concat(rootCls)
      }));
    }), hashId];
  };
};

var _default = makeStyle;
exports.default = _default;