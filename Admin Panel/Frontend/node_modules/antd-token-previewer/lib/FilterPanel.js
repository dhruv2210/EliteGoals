"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _makeStyle = _interopRequireDefault(require("./utils/makeStyle"));

var _classnames = _interopRequireDefault(require("classnames"));

var _antd = require("antd");

var _useMergedState3 = _interopRequireDefault(require("rc-util/lib/hooks/useMergedState"));

var _excluded = ["className", "filterMode", "onFilterModeChange", "selectedTokens", "onSelectedTokensChange", "onTokenClick"];
var useStyle = (0, _makeStyle.default)('FilterPanel', function (token) {
  return {
    '.previewer-filter-panel': (0, _defineProperty2.default)({
      // boxShadow:
      //   '0 2px 4px 0 rgba(0,0,0,0.05), 0 1px 2px 0 rgba(25,15,15,0.07), 0 0 1px 0 rgba(0,0,0,0.08)',
      // backgroundColor: '#fff',
      // borderRadius: 6,
      // padding: '8px 12px',
      overflow: 'hidden',
      display: 'flex',
      alignItems: 'start',
      '.component-tree-head': {
        display: 'flex',
        alignItems: 'center',
        flex: 'none',
        marginInlineEnd: 20,
        '.component-tree-filter-type': {
          color: token.colorTextSecondary,
          marginInlineEnd: token.marginXS,
          fontSize: token.fontSizeSM
        },
        '.component-tree-filter-segmented': {
          fontSize: token.fontSizeSM
        }
      },
      '.preview-panel-subtitle': {
        fontSize: token.fontSizeSM,
        color: token.colorTextSecondary
      }
    }, "".concat(token.rootCls, "-tag.previewer-token-filter-tag"), {
      color: token.colorPrimary,
      backgroundColor: 'rgba(22,119,255,0.10)',
      border: 'none',
      borderRadius: 4,
      '> .anticon': {
        color: token.colorPrimary
      }
    })
  };
});

var FilterPanel = function FilterPanel(_ref) {
  var className = _ref.className,
      customFilterMode = _ref.filterMode,
      onFilterModeChange = _ref.onFilterModeChange,
      selectedTokens = _ref.selectedTokens,
      onSelectedTokensChange = _ref.onSelectedTokensChange,
      onTokenClick = _ref.onTokenClick,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);

  var _useStyle = useStyle(),
      _useStyle2 = (0, _slicedToArray2.default)(_useStyle, 2),
      wrapSSR = _useStyle2[0],
      hashId = _useStyle2[1];

  var _useMergedState = (0, _useMergedState3.default)(customFilterMode || 'filter'),
      _useMergedState2 = (0, _slicedToArray2.default)(_useMergedState, 2),
      filterMode = _useMergedState2[0],
      setFilterMode = _useMergedState2[1];

  if (selectedTokens.length === 0) {
    return null;
  }

  return wrapSSR( /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
    className: (0, _classnames.default)('previewer-filter-panel', hashId, className)
  }, rest), selectedTokens && selectedTokens.length > 0 && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    className: "component-tree-head"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "component-tree-filter-type"
  }, "\u7B5B\u9009\u65B9\u5F0F\uFF1A"), /*#__PURE__*/_react.default.createElement(_antd.Segmented, {
    className: "component-tree-filter-segmented",
    size: "small",
    value: filterMode,
    onChange: function onChange(value) {
      onFilterModeChange === null || onFilterModeChange === void 0 ? void 0 : onFilterModeChange(value);
      setFilterMode(value);
    },
    options: [{
      label: '过滤',
      value: 'filter'
    }, {
      label: '高亮',
      value: 'highlight'
    }]
  })), /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("span", {
    className: "preview-panel-subtitle"
  }, "\u5DF2\u9009\u4E2D\uFF1A"), selectedTokens.map(function (token) {
    return /*#__PURE__*/_react.default.createElement(_antd.Tag, {
      key: token,
      closable: true,
      onClose: function onClose() {
        return onSelectedTokensChange === null || onSelectedTokensChange === void 0 ? void 0 : onSelectedTokensChange(selectedTokens === null || selectedTokens === void 0 ? void 0 : selectedTokens.filter(function (item) {
          return item !== token;
        }));
      },
      style: {
        marginBlock: 2,
        cursor: 'pointer'
      },
      className: "previewer-token-filter-tag",
      onClick: function onClick() {
        return onTokenClick === null || onTokenClick === void 0 ? void 0 : onTokenClick(token);
      }
    }, token);
  })))));
};

var _default = FilterPanel;
exports.default = _default;