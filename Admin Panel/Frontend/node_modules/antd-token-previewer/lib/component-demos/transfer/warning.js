"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _antd = require("antd");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var mockData = [];

for (var i = 0; i < 20; i++) {
  mockData.push({
    key: i.toString(),
    title: "content".concat(i + 1),
    description: "description of content".concat(i + 1)
  });
}

var initialTargetKeys = mockData.filter(function (item) {
  return +item.key > 10;
}).map(function (item) {
  return item.key;
});

var Demo = function Demo() {
  var _useState = (0, _react.useState)(initialTargetKeys),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      targetKeys = _useState2[0],
      setTargetKeys = _useState2[1];

  var _useState3 = (0, _react.useState)([]),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      selectedKeys = _useState4[0],
      setSelectedKeys = _useState4[1];

  var onScroll = function onScroll() {};

  return /*#__PURE__*/_react.default.createElement(_antd.Transfer, {
    dataSource: mockData,
    titles: ['Source', 'Target'],
    targetKeys: targetKeys,
    status: 'warning',
    selectedKeys: selectedKeys,
    onChange: function onChange(nextTargetKeys) {
      setTargetKeys(nextTargetKeys);
    },
    onSelectChange: function onSelectChange(sourceSelectedKeys, targetSelectedKeys) {
      setSelectedKeys([].concat((0, _toConsumableArray2.default)(sourceSelectedKeys), (0, _toConsumableArray2.default)(targetSelectedKeys)));
    },
    onScroll: onScroll,
    render: function render(item) {
      return item.title;
    }
  });
};

var componentDemo = {
  demo: /*#__PURE__*/_react.default.createElement(Demo, null),
  tokens: ['colorWarning'],
  key: 'warning'
};
var _default = componentDemo;
exports.default = _default;