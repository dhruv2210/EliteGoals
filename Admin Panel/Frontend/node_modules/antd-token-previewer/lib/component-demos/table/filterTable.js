"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _antd = require("antd");

var _react = _interopRequireDefault(require("react"));

var columns = [{
  title: 'Name',
  dataIndex: 'name',
  filters: [{
    text: 'Joe',
    value: 'Joe'
  }, {
    text: 'Jim',
    value: 'Jim'
  }, {
    text: 'Submenu',
    value: 'Submenu',
    children: [{
      text: 'Green',
      value: 'Green'
    }, {
      text: 'Black',
      value: 'Black'
    }]
  }],
  // specify the condition of filtering result
  // here is that finding the name started with `value`
  onFilter: function onFilter(value, record) {
    return record.name.indexOf(String(value)) === 0;
  },
  sorter: function sorter(a, b) {
    return a.name.length - b.name.length;
  },
  sortDirections: ['descend']
}, {
  title: 'Age',
  dataIndex: 'age',
  defaultSortOrder: 'descend',
  sorter: function sorter(a, b) {
    return a.age - b.age;
  }
}, {
  title: 'Address',
  dataIndex: 'address',
  filters: [{
    text: 'London',
    value: 'London'
  }, {
    text: 'New York',
    value: 'New York'
  }],
  onFilter: function onFilter(value, record) {
    return record.address.indexOf(String(value)) === 0;
  }
}];
var data = [{
  key: '1',
  name: 'John Brown',
  age: 32,
  address: 'New York No. 1 Lake Park'
}, {
  key: '2',
  name: 'Jim Green',
  age: 42,
  address: 'London No. 1 Lake Park'
}, {
  key: '3',
  name: 'Joe Black',
  age: 32,
  address: 'Sidney No. 1 Lake Park'
}, {
  key: '4',
  name: 'Jim Red',
  age: 32,
  address: 'London No. 2 Lake Park'
}];

var onChange = function onChange(pagination, filters, sorter, extra) {
  console.log('params', pagination, filters, sorter, extra);
};

var Demo = function Demo() {
  return /*#__PURE__*/_react.default.createElement(_antd.Table, {
    columns: columns,
    dataSource: data,
    onChange: onChange
  });
};

var componentDemo = {
  demo: /*#__PURE__*/_react.default.createElement(Demo, null),
  tokens: ['colorFillSecondary', 'colorFillContentHover', 'colorFillContent', 'colorFillAlter'],
  key: 'filterTable'
};
var _default = componentDemo;
exports.default = _default;