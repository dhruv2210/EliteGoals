import type { ThemeConfig } from 'antd/es/config-provider/context';
import type { ReactElement } from 'react';
export declare type Theme = {
    name: string;
    key: string;
    config: ThemeConfig;
};
export declare type AliasToken = Exclude<ThemeConfig['token'], undefined>;
export declare type TokenValue = string | number | string[] | number[] | boolean;
export declare type TokenName = keyof AliasToken;
export interface ComponentDemo {
    tokens?: TokenName[];
    demo: ReactElement;
    key: string;
}
export interface MutableTheme extends Theme {
    onThemeChange?: (newTheme: ThemeConfig, path: string[]) => void;
    onReset?: (path: string[]) => void;
    getCanReset?: (path: string[]) => boolean;
}
export declare type PreviewerProps = {
    onSave?: (themeConfig: ThemeConfig) => void;
    showTheme?: boolean;
    theme?: Theme;
    onThemeChange?: (config: ThemeConfig) => void;
};
export declare type SelectedToken = {
    seed?: string[];
    map?: string[];
    alias?: string[];
};
