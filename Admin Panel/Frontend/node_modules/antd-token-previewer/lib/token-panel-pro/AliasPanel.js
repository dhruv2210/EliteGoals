"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _icons = require("@ant-design/icons");

var _antd = require("antd");

var _classnames = _interopRequireDefault(require("classnames"));

var _useMergedState3 = _interopRequireDefault(require("rc-util/es/hooks/useMergedState"));

var _react = _interopRequireWildcard(require("react"));

var _icons2 = require("../icons");

var _TokenRelation = require("../meta/TokenRelation");

var _makeStyle = _interopRequireDefault(require("../utils/makeStyle"));

var _statistic = require("../utils/statistic");

var _TokenDetail = _interopRequireDefault(require("./TokenDetail"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var Panel = _antd.Collapse.Panel;
var useStyle = (0, _makeStyle.default)('TokenPanelProAlias', function (token) {
  var _$concat, _tokenPanelProAli, _tokenPanelProCol;

  return {
    '.token-panel-pro-color-alias': (_tokenPanelProCol = {
      display: 'flex',
      flexDirection: 'column',
      marginTop: 45,
      borderTop: "1px solid ".concat(token.colorSplit),
      '.token-panel-pro-color-alias-title': {
        display: 'flex',
        alignItems: 'center',
        padding: '0 16px',
        flex: '0 0 60px',
        '&-text': {
          fontSize: token.fontSizeLG,
          fontWeight: token.fontWeightStrong
        }
      },
      '.token-panel-pro-color-alias-description': {
        color: token.colorTextTertiary,
        fontSize: token.fontSizeSM,
        lineHeight: token.lineHeightSM,
        padding: '0 16px 12px'
      }
    }, (0, _defineProperty2.default)(_tokenPanelProCol, ".token-panel-pro-alias-collapse".concat(token.rootCls, "-collapse"), (_tokenPanelProAli = {}, (0, _defineProperty2.default)(_tokenPanelProAli, "> ".concat(token.rootCls, "-collapse-item > ").concat(token.rootCls, "-collapse-content > ").concat(token.rootCls, "-collapse-content-box"), {
      paddingBlock: '0'
    }), (0, _defineProperty2.default)(_tokenPanelProAli, "> ".concat(token.rootCls, "-collapse-item"), (0, _defineProperty2.default)({}, "> ".concat(token.rootCls, "-collapse-header"), (_$concat = {
      alignItems: 'center',
      padding: '8px 16px'
    }, (0, _defineProperty2.default)(_$concat, "> ".concat(token.rootCls, "-collapse-header-text"), {
      flex: 1,
      '.token-panel-pro-token-collapse-map-collapse-count': {
        color: token.colorTextSecondary,
        display: 'inline-block',
        fontSize: 12,
        lineHeight: '16px',
        padding: '0 6px',
        backgroundColor: token.colorFillAlter,
        borderRadius: 999
      }
    }), (0, _defineProperty2.default)(_$concat, '.token-panel-pro-token-picked', {
      color: token.colorPrimary
    }), _$concat))), _tokenPanelProAli)), (0, _defineProperty2.default)(_tokenPanelProCol, '.token-panel-pro-color-alias-expand', {
      height: '100%',
      width: 20,
      transform: 'translateX(-50%)',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      '&:hover': {
        '.token-panel-pro-color-alias-expand-handler': {
          opacity: 1
        }
      },
      '.token-panel-pro-color-alias-expand-handler': {
        height: 100,
        width: 16,
        borderRadius: 999,
        border: "1px solid ".concat(token.colorSplit),
        backgroundColor: '#fff',
        margin: 'auto',
        cursor: 'pointer',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        opacity: 0,
        transition: 'box-shadow 0.2s',
        '&:hover': {
          boxShadow: token.boxShadow
        }
      }
    }), _tokenPanelProCol)
  };
});

var AliasPanel = function AliasPanel(_ref) {
  var className = _ref.className,
      activeSeeds = _ref.activeSeeds,
      theme = _ref.theme,
      style = _ref.style,
      selectedTokens = _ref.selectedTokens,
      onTokenSelect = _ref.onTokenSelect,
      customOpen = _ref.open,
      onOpenChange = _ref.onOpenChange,
      description = _ref.description;

  var _useStyle = useStyle(),
      _useStyle2 = (0, _slicedToArray2.default)(_useStyle, 2),
      wrapSSR = _useStyle2[0],
      hashId = _useStyle2[1];

  var _useMergedState = (0, _useMergedState3.default)(customOpen !== null && customOpen !== void 0 ? customOpen : true, {
    value: customOpen,
    onChange: onOpenChange
  }),
      _useMergedState2 = (0, _slicedToArray2.default)(_useMergedState, 2),
      open = _useMergedState2[0],
      setOpen = _useMergedState2[1];

  var shownAlias = (0, _react.useMemo)(function () {
    var _selectedTokens$map;

    return selectedTokens !== null && selectedTokens !== void 0 && (_selectedTokens$map = selectedTokens.map) !== null && _selectedTokens$map !== void 0 && _selectedTokens$map.length ? Array.from(new Set(selectedTokens === null || selectedTokens === void 0 ? void 0 : selectedTokens.map.reduce(function (result, map) {
      var _map;

      return result.concat.apply(result, (0, _toConsumableArray2.default)((_map = _TokenRelation.mapRelatedAlias[map]) !== null && _map !== void 0 ? _map : []));
    }, []))) : activeSeeds === null || activeSeeds === void 0 ? void 0 : activeSeeds.reduce(function (result, item) {
      var _item;

      return result.concat((_item = _TokenRelation.seedRelatedAlias[item]) !== null && _item !== void 0 ? _item : []);
    }, []);
  }, [selectedTokens, activeSeeds]);
  return wrapSSR( /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)(className, 'token-panel-pro-color-alias', hashId),
    style: style
  }, open ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    className: "token-panel-pro-color-alias-title"
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: "token-panel-pro-color-alias-title-text"
  }, "Alias Token"), /*#__PURE__*/_react.default.createElement(_antd.Tooltip, {
    placement: "topLeft",
    arrowPointAtCenter: true,
    title: "\u522B\u540D\u53D8\u91CF\uFF08Alias Token\uFF09\u662F Map Token \u7684\u522B\u540D\u3002Alias Token \u7528\u4E8E\u6279\u91CF\u63A7\u5236\u67D0\u4E9B\u5171\u6027\u7EC4\u4EF6\u7684\u6837\u5F0F\u3002"
  }, /*#__PURE__*/_react.default.createElement(_icons.QuestionCircleOutlined, {
    style: {
      fontSize: 14,
      marginLeft: 4
    }
  })), /*#__PURE__*/_react.default.createElement(_antd.Button, {
    type: "text",
    icon: /*#__PURE__*/_react.default.createElement(_icons.ShrinkOutlined, null),
    style: {
      marginLeft: 'auto'
    },
    onClick: function onClick() {
      return setOpen(false);
    }
  })), description && /*#__PURE__*/_react.default.createElement("div", {
    className: "token-panel-pro-color-alias-description"
  }, description), /*#__PURE__*/_react.default.createElement("div", {
    style: {
      flex: 1,
      overflow: 'auto'
    }
  }, /*#__PURE__*/_react.default.createElement(_antd.Collapse, {
    className: "token-panel-pro-alias-collapse",
    ghost: true,
    expandIcon: function expandIcon(_ref2) {
      var isActive = _ref2.isActive;
      return /*#__PURE__*/_react.default.createElement(_icons.CaretRightOutlined, {
        rotate: isActive ? 90 : 0,
        style: {
          fontSize: 12
        }
      });
    }
  }, shownAlias === null || shownAlias === void 0 ? void 0 : shownAlias.map(function (aliasToken) {
    var _selectedTokens$alias;

    return /*#__PURE__*/_react.default.createElement(Panel, {
      header: /*#__PURE__*/_react.default.createElement("div", {
        style: {
          display: 'flex',
          alignItems: 'center'
        }
      }, /*#__PURE__*/_react.default.createElement("span", {
        style: {
          marginRight: 8
        }
      }, aliasToken), /*#__PURE__*/_react.default.createElement("span", {
        className: "token-panel-pro-token-collapse-map-collapse-count"
      }, (0, _statistic.getRelatedComponents)(aliasToken).length), /*#__PURE__*/_react.default.createElement("div", {
        style: {
          padding: 4,
          marginLeft: 'auto'
        },
        onClick: function onClick(e) {
          e.stopPropagation();
          onTokenSelect === null || onTokenSelect === void 0 ? void 0 : onTokenSelect(aliasToken, 'alias');
        }
      }, /*#__PURE__*/_react.default.createElement(_icons2.Pick, {
        className: (0, _classnames.default)('token-panel-pro-token-pick', {
          'token-panel-pro-token-picked': selectedTokens === null || selectedTokens === void 0 ? void 0 : (_selectedTokens$alias = selectedTokens.alias) === null || _selectedTokens$alias === void 0 ? void 0 : _selectedTokens$alias.includes(aliasToken)
        })
      }))),
      key: aliasToken
    }, /*#__PURE__*/_react.default.createElement(_TokenDetail.default, {
      style: {
        paddingBottom: 10
      },
      themes: [theme],
      path: ['token'],
      tokenName: aliasToken
    }));
  })), !(shownAlias !== null && shownAlias !== void 0 && shownAlias.length) && /*#__PURE__*/_react.default.createElement(_antd.Empty, {
    image: _antd.Empty.PRESENTED_IMAGE_SIMPLE,
    description: "\u6682\u65E0\u76F8\u5173 Alias Token"
  }))) : /*#__PURE__*/_react.default.createElement("div", {
    className: "token-panel-pro-color-alias-expand"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "token-panel-pro-color-alias-expand-handler",
    onClick: function onClick() {
      return setOpen(true);
    }
  }, /*#__PURE__*/_react.default.createElement(_icons.RightOutlined, {
    style: {
      fontSize: 12
    }
  })))));
};

var _default = AliasPanel;
exports.default = _default;