"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _icons = require("@ant-design/icons");

var _antd = require("antd");

var _seed = _interopRequireDefault(require("antd/es/theme/themes/seed"));

var _tokenMeta = _interopRequireDefault(require("antd/lib/version/token-meta.json"));

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireWildcard(require("react"));

var _useDebouncy = require("use-debouncy");

var _ColorPanel = _interopRequireDefault(require("../ColorPanel"));

var _useControlledTheme = require("../hooks/useControlledTheme");

var _icons2 = require("../icons");

var _IconSwitch = _interopRequireDefault(require("../IconSwitch"));

var _locale = require("../locale");

var _getDesignToken = _interopRequireDefault(require("../utils/getDesignToken"));

var _makeStyle = _interopRequireDefault(require("../utils/makeStyle"));

var _InputNumberPlus = _interopRequireDefault(require("./InputNumberPlus"));

var _TokenDetail = _interopRequireDefault(require("./TokenDetail"));

var _TokenPreview = _interopRequireDefault(require("./TokenPreview"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var Panel = _antd.Collapse.Panel;
var useStyle = (0, _makeStyle.default)('ColorTokenContent', function (token) {
  var _$concat2, _$concat3, _tokenPanelProTok2, _$concat5, _tokenPanelProCol;

  return {
    '.token-panel-pro-color': (_tokenPanelProCol = {
      height: '100%',
      display: 'flex',
      '.token-panel-pro-color-seeds': {
        height: '100%',
        flex: 1,
        width: 0,
        borderInlineEnd: "1px solid ".concat(token.colorBorderSecondary),
        display: 'flex',
        flexDirection: 'column',
        boxSizing: 'border-box',
        '.token-panel-pro-color-themes': {
          display: 'flex',
          alignItems: 'center',
          padding: '0 16px',
          flex: '0 0 60px',
          '> span': {
            fontSize: token.fontSizeLG,
            fontWeight: token.fontWeightStrong
          }
        }
      }
    }, (0, _defineProperty2.default)(_tokenPanelProCol, ".token-panel-pro-token-collapse".concat(token.rootCls, "-collapse"), (_tokenPanelProTok2 = {
      flex: 1,
      overflow: 'auto'
    }, (0, _defineProperty2.default)(_tokenPanelProTok2, "> ".concat(token.rootCls, "-collapse-item-active"), {
      backgroundColor: '#fff',
      boxShadow: '0 6px 16px -8px rgba(0,0,0,0.08), 0 9px 28px 0 rgba(0,0,0,0.05), 0 12px 48px -8px rgba(0,0,0,0.03), inset 0 0 0 2px #1677FF',
      transition: 'box-shadow 0.2s ease-in-out',
      borderRadius: 8
    }), (0, _defineProperty2.default)(_tokenPanelProTok2, "> ".concat(token.rootCls, "-collapse-item > ").concat(token.rootCls, "-collapse-content > ").concat(token.rootCls, "-collapse-content-box"), {
      paddingBlock: '0 12px'
    }), (0, _defineProperty2.default)(_tokenPanelProTok2, '.token-panel-pro-token-collapse-description', {
      color: token.colorTextTertiary,
      marginBottom: 16
    }), (0, _defineProperty2.default)(_tokenPanelProTok2, '.token-panel-pro-token-collapse-subtitle', {
      color: token.colorTextSecondary,
      fontSize: 12
    }), (0, _defineProperty2.default)(_tokenPanelProTok2, '.token-panel-pro-token-collapse-seed-block', {
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'flex-end',
      '+ .token-panel-pro-token-collapse-seed-block': {
        marginTop: 8
      },
      '&-name-cn': {
        fontWeight: token.fontWeightStrong,
        marginInlineEnd: 4
      },
      '&-name': {
        color: token.colorTextTertiary
      },
      '&-sample': {
        flex: 'none',
        '&:not(:last-child)': {
          marginInlineEnd: 16
        },
        '&-theme': {
          color: token.colorTextTertiary,
          marginBottom: 2,
          fontSize: 12,
          textAlign: 'end'
        },
        '&-card': {
          cursor: 'pointer',
          border: "1px solid ".concat(token.colorBorderSecondary),
          borderRadius: 4,
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'space-between',
          padding: '4px 8px',
          '&-value': {
            fontFamily: 'Monaco,'.concat(token.fontFamily)
          }
        }
      }
    }), (0, _defineProperty2.default)(_tokenPanelProTok2, ".token-panel-pro-token-collapse-map-collapse".concat(token.rootCls, "-collapse"), (0, _defineProperty2.default)({
      borderRadius: 4,
      backgroundColor: '#fff'
    }, "> ".concat(token.rootCls, "-collapse-item"), (_$concat3 = {
      '&:not(:first-child)': (0, _defineProperty2.default)({}, "> ".concat(token.rootCls, "-collapse-header"), (0, _defineProperty2.default)({}, "> ".concat(token.rootCls, "-collapse-header-text"), {
        '.token-panel-pro-token-collapse-map-collapse-preview': {
          '.token-panel-pro-token-collapse-map-collapse-preview-color': {
            marginTop: -1
          }
        }
      }))
    }, (0, _defineProperty2.default)(_$concat3, "> ".concat(token.rootCls, "-collapse-header"), (_$concat2 = {
      padding: {
        value: '0 12px 0 16px',
        _skip_check_: true
      }
    }, (0, _defineProperty2.default)(_$concat2, "> ".concat(token.rootCls, "-collapse-expand-icon"), {
      alignSelf: 'center'
    }), (0, _defineProperty2.default)(_$concat2, "> ".concat(token.rootCls, "-collapse-header-text"), {
      flex: 1,
      '.token-panel-pro-token-collapse-map-collapse-token': {
        color: token.colorTextSecondary,
        marginInlineStart: 4,
        marginInlineEnd: 8
      },
      '.token-panel-pro-token-collapse-map-collapse-preview': {
        display: 'flex',
        flex: 'none',
        '.token-panel-pro-token-collapse-map-collapse-preview-color': {
          height: 56,
          width: 56,
          position: 'relative',
          borderInline: '1px solid #e8e8e8'
        },
        '> *': {
          marginInlineEnd: 8
        }
      }
    }), _$concat2)), (0, _defineProperty2.default)(_$concat3, "> ".concat(token.rootCls, "-collapse-content > ").concat(token.rootCls, "-collapse-content-box"), {
      padding: '0'
    }), _$concat3))), _tokenPanelProTok2)), (0, _defineProperty2.default)(_tokenPanelProCol, '.token-panel-pro-token-collapse-map-collapse-count', {
      color: token.colorTextSecondary,
      // display: 'inline-block',
      fontSize: 12,
      lineHeight: '16px',
      padding: '0 6px',
      backgroundColor: token.colorFillAlter,
      borderRadius: 999,
      overflow: 'hidden',
      textOverflow: 'ellipsis'
    }), (0, _defineProperty2.default)(_tokenPanelProCol, '.token-panel-pro-token-pick', {
      transition: 'color 0.3s'
    }), (0, _defineProperty2.default)(_tokenPanelProCol, '.token-panel-pro-token-picked', {
      color: token.colorPrimary
    }), (0, _defineProperty2.default)(_tokenPanelProCol, ".token-panel-pro-grouped-map-collapse".concat(token.rootCls, "-collapse"), (0, _defineProperty2.default)({
      borderRadius: 4
    }, "> ".concat(token.rootCls, "-collapse-item"), (_$concat5 = {}, (0, _defineProperty2.default)(_$concat5, "> ".concat(token.rootCls, "-collapse-header"), (0, _defineProperty2.default)({
      padding: '6px 12px',
      color: token.colorIcon,
      fontSize: 12,
      lineHeight: token.lineHeightSM
    }, "".concat(token.rootCls, "-collapse-expand-icon"), {
      lineHeight: '20px',
      height: 20
    })), (0, _defineProperty2.default)(_$concat5, "> ".concat(token.rootCls, "-collapse-content > ").concat(token.rootCls, "-collapse-content-box"), (0, _defineProperty2.default)({
      padding: 0
    }, ".token-panel-pro-token-collapse-map-collapse".concat(token.rootCls, "-collapse"), (0, _defineProperty2.default)({
      border: 'none'
    }, "".concat(token.rootCls, "-collapse-item:last-child"), {
      borderBottom: 'none'
    }))), _$concat5))), _tokenPanelProCol)
  };
});

var getSeedValue = function getSeedValue(config, token) {
  var _config$token;

  // @ts-ignore
  return ((_config$token = config.token) === null || _config$token === void 0 ? void 0 : _config$token[token]) || _seed.default[token] || (0, _getDesignToken.default)(config)[token];
};

var seedRange = {
  borderRadius: {
    min: 0,
    max: 16
  },
  fontSize: {
    min: 12,
    max: 32
  },
  sizeStep: {
    min: 0,
    max: 16
  },
  sizeUnit: {
    min: 0,
    max: 16
  }
};

var SeedTokenPreview = function SeedTokenPreview(_ref) {
  var _theme$getCanReset;

  var theme = _ref.theme,
      tokenName = _ref.tokenName,
      disabled = _ref.disabled;
  var tokenPath = ['token', tokenName];

  var _useState = (0, _react.useState)(getSeedValue(theme.config, tokenName)),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      tokenValue = _useState2[0],
      setTokenValue = _useState2[1];

  var locale = (0, _locale.useLocale)();
  var debouncedOnChange = (0, _useDebouncy.useDebouncyFn)(function (newValue) {
    var _theme$onThemeChange;

    (_theme$onThemeChange = theme.onThemeChange) === null || _theme$onThemeChange === void 0 ? void 0 : _theme$onThemeChange.call(theme, _objectSpread(_objectSpread({}, theme.config), {}, {
      token: _objectSpread(_objectSpread({}, theme.config.token), {}, (0, _defineProperty2.default)({}, tokenName, newValue))
    }), ['token', tokenName]);
  }, 500);

  var handleChange = function handleChange(value) {
    setTokenValue(value);
    debouncedOnChange(value);
  };

  (0, _react.useEffect)(function () {
    setTokenValue(getSeedValue(theme.config, tokenName));
  }, [theme.config, tokenName]);
  var showReset = (_theme$getCanReset = theme.getCanReset) === null || _theme$getCanReset === void 0 ? void 0 : _theme$getCanReset.call(theme, tokenPath);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "token-panel-pro-token-collapse-seed-block-sample"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "token-panel-pro-token-collapse-seed-block-sample-theme"
  }, /*#__PURE__*/_react.default.createElement(_antd.Typography.Link, {
    style: {
      fontSize: 12,
      padding: 0,
      opacity: showReset ? 1 : 0,
      pointerEvents: showReset ? 'auto' : 'none'
    },
    onClick: function onClick() {
      var _theme$onReset;

      return (_theme$onReset = theme.onReset) === null || _theme$onReset === void 0 ? void 0 : _theme$onReset.call(theme, tokenPath);
    }
  }, locale.reset)), tokenName.startsWith('color') && /*#__PURE__*/_react.default.createElement(_antd.Popover, {
    trigger: "click",
    placement: "bottomRight",
    overlayInnerStyle: {
      padding: 0
    },
    content: /*#__PURE__*/_react.default.createElement(_ColorPanel.default, {
      color: tokenValue,
      onChange: handleChange,
      style: {
        border: 'none'
      }
    })
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "token-panel-pro-token-collapse-seed-block-sample-card",
    style: {
      pointerEvents: disabled ? 'none' : 'auto'
    }
  }, /*#__PURE__*/_react.default.createElement("div", {
    style: {
      backgroundColor: tokenValue,
      width: 48,
      height: 32,
      borderRadius: 4,
      marginRight: 14,
      boxShadow: '0 2px 3px -1px rgba(0,0,0,0.20), inset 0 0 0 1px rgba(0,0,0,0.09)'
    }
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "token-panel-pro-token-collapse-seed-block-sample-card-value"
  }, tokenValue))), ['fontSize', 'sizeUnit', 'sizeStep', 'borderRadius'].includes(tokenName) && /*#__PURE__*/_react.default.createElement(_InputNumberPlus.default, {
    value: tokenValue,
    onChange: handleChange,
    min: seedRange[tokenName].min,
    max: seedRange[tokenName].max
  }), tokenName === 'wireframe' && /*#__PURE__*/_react.default.createElement(_antd.Switch, {
    checked: tokenValue,
    onChange: handleChange
  }));
};

var MapTokenCollapseContent = function MapTokenCollapseContent(_ref2) {
  var mapTokens = _ref2.mapTokens,
      theme = _ref2.theme,
      onTokenSelect = _ref2.onTokenSelect,
      selectedTokens = _ref2.selectedTokens,
      type = _ref2.type;
  var locale = (0, _locale.useLocale)();
  return /*#__PURE__*/_react.default.createElement(_antd.Collapse, {
    className: "token-panel-pro-token-collapse-map-collapse"
  }, mapTokens === null || mapTokens === void 0 ? void 0 : mapTokens.map(function (mapToken) {
    var _mapToken, _selectedTokens$map;

    return /*#__PURE__*/_react.default.createElement(Panel, {
      header: /*#__PURE__*/_react.default.createElement("div", {
        style: {
          display: 'flex',
          alignItems: 'center'
        }
      }, /*#__PURE__*/_react.default.createElement("div", {
        style: {
          flex: 1,
          whiteSpace: 'nowrap',
          width: 0,
          overflow: 'hidden',
          display: 'flex',
          alignItems: 'center',
          marginRight: 8
        }
      }, locale._lang === 'zh-CN' && /*#__PURE__*/_react.default.createElement("span", {
        style: {
          fontWeight: 500,
          flex: 'none'
        }
      }, (_mapToken = _tokenMeta.default[mapToken]) === null || _mapToken === void 0 ? void 0 : _mapToken.name), /*#__PURE__*/_react.default.createElement("span", {
        className: "token-panel-pro-token-collapse-map-collapse-token",
        style: {
          flex: 'none'
        }
      }, mapToken), /*#__PURE__*/_react.default.createElement("span", {
        className: "token-panel-pro-token-collapse-map-collapse-count"
      }, (0, _getDesignToken.default)(theme.config)[mapToken])), /*#__PURE__*/_react.default.createElement("div", {
        className: "token-panel-pro-token-collapse-map-collapse-preview"
      }, /*#__PURE__*/_react.default.createElement("div", {
        className: "token-panel-pro-token-collapse-map-collapse-preview-color"
      }, /*#__PURE__*/_react.default.createElement(_TokenPreview.default, {
        theme: theme.config,
        tokenName: mapToken,
        type: type
      }))), /*#__PURE__*/_react.default.createElement("div", {
        style: {
          flex: 'none',
          margin: 4
        },
        onClick: function onClick(e) {
          e.stopPropagation();
          onTokenSelect === null || onTokenSelect === void 0 ? void 0 : onTokenSelect(mapToken, 'map');
        }
      }, /*#__PURE__*/_react.default.createElement(_icons2.Pick, {
        className: (0, _classnames.default)('token-panel-pro-token-pick', {
          'token-panel-pro-token-picked': selectedTokens === null || selectedTokens === void 0 ? void 0 : (_selectedTokens$map = selectedTokens.map) === null || _selectedTokens$map === void 0 ? void 0 : _selectedTokens$map.includes(mapToken)
        })
      }))),
      key: mapToken
    }, /*#__PURE__*/_react.default.createElement(_TokenDetail.default, {
      style: {
        margin: 8
      },
      themes: [theme],
      path: ['token'],
      tokenName: mapToken
    }));
  }));
};

var MapTokenCollapse = function MapTokenCollapse(_ref3) {
  var _group$mapToken2;

  var theme = _ref3.theme,
      onTokenSelect = _ref3.onTokenSelect,
      selectedTokens = _ref3.selectedTokens,
      groupFn = _ref3.groupFn,
      group = _ref3.group;
  var locale = (0, _locale.useLocale)();
  var groupedTokens = (0, _react.useMemo)(function () {
    var grouped = {};

    if (groupFn) {
      var _group$mapToken;

      (_group$mapToken = group.mapToken) === null || _group$mapToken === void 0 ? void 0 : _group$mapToken.forEach(function (token) {
        var _groupFn, _grouped$key;

        var key = (_groupFn = groupFn(token)) !== null && _groupFn !== void 0 ? _groupFn : 'default';
        grouped[key] = [].concat((0, _toConsumableArray2.default)((_grouped$key = grouped[key]) !== null && _grouped$key !== void 0 ? _grouped$key : []), [token]);
      });
    }

    return grouped;
  }, [group, groupFn]);

  if (groupFn) {
    var _group$mapTokenGroups;

    return /*#__PURE__*/_react.default.createElement(_antd.Collapse, {
      className: "token-panel-pro-grouped-map-collapse",
      defaultActiveKey: Object.keys(groupedTokens),
      expandIconPosition: "end",
      expandIcon: function expandIcon(_ref4) {
        var isActive = _ref4.isActive;
        return /*#__PURE__*/_react.default.createElement(_icons.CaretRightOutlined, {
          rotate: isActive ? 450 : 360,
          style: {
            fontSize: 12
          }
        });
      }
    }, ((_group$mapTokenGroups = group.mapTokenGroups) !== null && _group$mapTokenGroups !== void 0 ? _group$mapTokenGroups : Object.keys(groupedTokens)).map(function (key) {
      var _key;

      return /*#__PURE__*/_react.default.createElement(Panel, {
        key: key,
        header: (_key = locale[key]) !== null && _key !== void 0 ? _key : ''
      }, /*#__PURE__*/_react.default.createElement(MapTokenCollapseContent, {
        mapTokens: groupedTokens[key],
        theme: theme,
        selectedTokens: selectedTokens,
        onTokenSelect: onTokenSelect,
        type: group.type
      }));
    }));
  }

  if (group.groups) {
    return /*#__PURE__*/_react.default.createElement(_antd.Collapse, {
      className: "token-panel-pro-grouped-map-collapse",
      defaultActiveKey: group.groups.map(function (item) {
        return item.key;
      }),
      expandIconPosition: "end",
      expandIcon: function expandIcon(_ref5) {
        var isActive = _ref5.isActive;
        return /*#__PURE__*/_react.default.createElement(_icons.CaretRightOutlined, {
          rotate: isActive ? 450 : 360,
          style: {
            fontSize: 12
          }
        });
      }
    }, group.groups.map(function (item) {
      return /*#__PURE__*/_react.default.createElement(Panel, {
        key: item.key,
        header: item.name
      }, /*#__PURE__*/_react.default.createElement(MapTokenCollapseContent, {
        mapTokens: item.mapToken,
        theme: theme,
        selectedTokens: selectedTokens,
        onTokenSelect: onTokenSelect,
        type: item.type
      }));
    }));
  }

  return /*#__PURE__*/_react.default.createElement(MapTokenCollapseContent, {
    mapTokens: (_group$mapToken2 = group.mapToken) !== null && _group$mapToken2 !== void 0 ? _group$mapToken2 : [],
    theme: theme,
    selectedTokens: selectedTokens,
    onTokenSelect: onTokenSelect,
    type: group.type
  });
};

var groupMapToken = function groupMapToken(token) {
  if (token.startsWith('colorFill')) {
    return 'fill';
  }

  if (token.startsWith('colorBorder') || token.startsWith('colorSplit')) {
    return 'border';
  }

  if (token.startsWith('colorBg')) {
    return 'background';
  }

  if (token.startsWith('colorText')) {
    return 'text';
  }

  return '';
};

var TokenContent = function TokenContent(_ref6) {
  var category = _ref6.category,
      theme = _ref6.theme,
      selectedTokens = _ref6.selectedTokens,
      onTokenSelect = _ref6.onTokenSelect,
      infoFollowPrimary = _ref6.infoFollowPrimary,
      onInfoFollowPrimaryChange = _ref6.onInfoFollowPrimaryChange,
      activeGroup = _ref6.activeGroup,
      onActiveGroupChange = _ref6.onActiveGroupChange;

  var _useStyle = useStyle(),
      _useStyle2 = (0, _slicedToArray2.default)(_useStyle, 2),
      wrapSSR = _useStyle2[0],
      hashId = _useStyle2[1];

  var _useState3 = (0, _react.useState)(true),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      grouped = _useState4[0],
      setGrouped = _useState4[1];

  var locale = (0, _locale.useLocale)();

  var switchAlgorithm = function switchAlgorithm(themeStr) {
    return function () {
      var _theme$onThemeChange2;

      var newAlgorithm = theme.config.algorithm;

      if (!newAlgorithm) {
        newAlgorithm = _useControlledTheme.themeMap[themeStr];
      } else if (Array.isArray(newAlgorithm)) {
        newAlgorithm = newAlgorithm.includes(_useControlledTheme.themeMap[themeStr]) ? newAlgorithm.filter(function (item) {
          return item !== _useControlledTheme.themeMap[themeStr];
        }) : [].concat((0, _toConsumableArray2.default)(newAlgorithm), [_useControlledTheme.themeMap[themeStr]]);
      } else {
        newAlgorithm = newAlgorithm === _useControlledTheme.themeMap[themeStr] ? undefined : [newAlgorithm, _useControlledTheme.themeMap[themeStr]];
      }

      (_theme$onThemeChange2 = theme.onThemeChange) === null || _theme$onThemeChange2 === void 0 ? void 0 : _theme$onThemeChange2.call(theme, _objectSpread(_objectSpread({}, theme.config), {}, {
        algorithm: newAlgorithm
      }), ['config', 'algorithm']);
    };
  };

  var isLeftChecked = function isLeftChecked(str) {
    if (!theme.config.algorithm) {
      return true;
    }

    return Array.isArray(theme.config.algorithm) ? !theme.config.algorithm.includes(_useControlledTheme.themeMap[str]) : theme.config.algorithm !== _useControlledTheme.themeMap[str];
  };

  return wrapSSR( /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)(hashId, 'token-panel-pro-color')
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "token-panel-pro-color-seeds"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "token-panel-pro-color-themes"
  }, /*#__PURE__*/_react.default.createElement("span", {
    style: {
      marginRight: 12
    }
  }, locale._lang === 'zh-CN' ? category.name : category.nameEn), category.nameEn === 'Color' && /*#__PURE__*/_react.default.createElement(_IconSwitch.default, {
    onChange: switchAlgorithm('dark'),
    leftChecked: isLeftChecked('dark'),
    leftIcon: /*#__PURE__*/_react.default.createElement(_icons2.Light, null),
    rightIcon: /*#__PURE__*/_react.default.createElement(_icons2.DarkTheme, null),
    style: {
      marginLeft: 'auto'
    }
  }), category.nameEn === 'Size' && /*#__PURE__*/_react.default.createElement(_IconSwitch.default, {
    onChange: switchAlgorithm('compact'),
    leftChecked: isLeftChecked('compact'),
    leftIcon: /*#__PURE__*/_react.default.createElement(_icons.ExpandOutlined, null),
    rightIcon: /*#__PURE__*/_react.default.createElement(_icons2.CompactTheme, null),
    style: {
      marginLeft: 'auto'
    }
  })), /*#__PURE__*/_react.default.createElement(_antd.ConfigProvider, {
    theme: {
      token: {
        colorBorder: '#f0f0f0'
      }
    }
  }, /*#__PURE__*/_react.default.createElement(_antd.Collapse, {
    className: "token-panel-pro-token-collapse",
    expandIconPosition: "end",
    ghost: true,
    accordion: true,
    activeKey: activeGroup,
    expandIcon: function expandIcon(_ref7) {
      var isActive = _ref7.isActive;
      return /*#__PURE__*/_react.default.createElement(_icons.CaretRightOutlined, {
        rotate: isActive ? 450 : 360,
        style: {
          fontSize: 12
        }
      });
    },
    onChange: function onChange(key) {
      onActiveGroupChange(key);
    }
  }, category.groups.map(function (group, index) {
    var _group$seedToken;

    return /*#__PURE__*/_react.default.createElement(Panel, {
      header: /*#__PURE__*/_react.default.createElement("span", {
        style: {
          fontWeight: 500
        }
      }, locale._lang === 'zh-CN' ? group.name : group.nameEn),
      key: group.key
    }, /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("div", {
      className: "token-panel-pro-token-collapse-description"
    }, locale._lang === 'zh-CN' ? group.desc : group.descEn), (_group$seedToken = group.seedToken) === null || _group$seedToken === void 0 ? void 0 : _group$seedToken.map(function (seedToken) {
      var _seedToken, _seedToken2, _seedToken3, _seedToken4;

      return /*#__PURE__*/_react.default.createElement("div", {
        key: seedToken,
        className: "token-panel-pro-token-collapse-seed-block"
      }, /*#__PURE__*/_react.default.createElement("div", {
        style: {
          marginRight: 'auto'
        }
      }, /*#__PURE__*/_react.default.createElement("div", {
        className: "token-panel-pro-token-collapse-subtitle"
      }, /*#__PURE__*/_react.default.createElement("span", {
        style: {
          fontSize: 12
        }
      }, "Seed Token"), /*#__PURE__*/_react.default.createElement(_antd.Tooltip, {
        placement: "topLeft",
        arrowPointAtCenter: true,
        title: locale._lang === 'zh-CN' ? (_seedToken = _tokenMeta.default[seedToken]) === null || _seedToken === void 0 ? void 0 : _seedToken.desc : (_seedToken2 = _tokenMeta.default[seedToken]) === null || _seedToken2 === void 0 ? void 0 : _seedToken2.descEn
      }, /*#__PURE__*/_react.default.createElement(_icons.QuestionCircleOutlined, {
        style: {
          fontSize: 14,
          marginLeft: 8
        }
      }))), /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("span", {
        className: "token-panel-pro-token-collapse-seed-block-name-cn"
      }, locale._lang === 'zh-CN' ? (_seedToken3 = _tokenMeta.default[seedToken]) === null || _seedToken3 === void 0 ? void 0 : _seedToken3.name : (_seedToken4 = _tokenMeta.default[seedToken]) === null || _seedToken4 === void 0 ? void 0 : _seedToken4.nameEn), seedToken === 'colorInfo' && /*#__PURE__*/_react.default.createElement(_antd.Checkbox, {
        style: {
          marginLeft: 12
        },
        checked: infoFollowPrimary,
        onChange: function onChange(e) {
          return onInfoFollowPrimaryChange === null || onInfoFollowPrimaryChange === void 0 ? void 0 : onInfoFollowPrimaryChange(e.target.checked);
        }
      }, locale.followPrimary))), /*#__PURE__*/_react.default.createElement(SeedTokenPreview, {
        theme: theme,
        tokenName: seedToken,
        disabled: seedToken === 'colorInfo' && infoFollowPrimary
      }));
    }), (group.mapToken || group.groups) && /*#__PURE__*/_react.default.createElement("div", {
      style: {
        marginTop: 16,
        marginBottom: 24
      }
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "token-panel-pro-token-collapse-subtitle",
      style: {
        marginBottom: 10,
        display: 'flex',
        alignItems: 'center'
      }
    }, /*#__PURE__*/_react.default.createElement("span", null, "Map Token"), /*#__PURE__*/_react.default.createElement(_antd.Tooltip, {
      placement: "topLeft",
      arrowPointAtCenter: true,
      title: "\u68AF\u5EA6\u53D8\u91CF\uFF08Map Token\uFF09 \u662F\u57FA\u4E8E Seed \u6D3E\u751F\u7684\u68AF\u5EA6\u53D8\u91CF\uFF0C\u6211\u4EEC\u7CBE\u5FC3\u8BBE\u8BA1\u7684\u68AF\u5EA6\u53D8\u91CF\u6A21\u578B\u5177\u6709\u826F\u597D\u7684\u89C6\u89C9\u8BBE\u8BA1\u8BED\u4E49\uFF0C\u53EF\u5728\u4EAE\u6697\u8272\u6A21\u5F0F\u5207\u6362\u65F6\u4FDD\u8BC1\u89C6\u89C9\u68AF\u5EA6\u7684\u4E00\u81F4\u6027\u3002"
    }, /*#__PURE__*/_react.default.createElement(_icons.QuestionCircleOutlined, {
      style: {
        fontSize: 14,
        marginLeft: 8
      }
    })), group.mapTokenGroups && /*#__PURE__*/_react.default.createElement("div", {
      style: {
        marginLeft: 'auto',
        display: 'flex',
        alignItems: 'center'
      }
    }, /*#__PURE__*/_react.default.createElement("label", {
      style: {
        marginRight: 4
      }
    }, locale.groupView), /*#__PURE__*/_react.default.createElement(_antd.Switch, {
      checked: grouped,
      onChange: function onChange(v) {
        return setGrouped(v);
      },
      size: "small"
    }))), /*#__PURE__*/_react.default.createElement(MapTokenCollapse, {
      group: group,
      theme: theme,
      selectedTokens: selectedTokens,
      onTokenSelect: onTokenSelect,
      groupFn: group.mapTokenGroups && grouped ? groupMapToken : undefined
    })), index < category.groups.length - 1 && /*#__PURE__*/_react.default.createElement(_antd.Button, {
      type: "primary",
      style: {
        borderRadius: 4,
        marginBottom: 12
      },
      onClick: function onClick() {
        var _category$groups;

        return onActiveGroupChange((_category$groups = category.groups[index + 1]) === null || _category$groups === void 0 ? void 0 : _category$groups.key);
      }
    }, locale.next)));
  }))))));
};

var _default = TokenContent;
exports.default = _default;